### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  commentId: T:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  id: IStaticDataService
  parent: Sorted.PRO.SDK.Interfaces.Settings
  children:
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRoles
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRolesAsync
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissions
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissionsAsync
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnits
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnitsAsync
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountries
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountriesAsync
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrencies
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrenciesAsync
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegions
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegionsAsync
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZones
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZonesAsync
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitles
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitlesAsync
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRates(System.String)
  - Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRatesAsync(System.String)
  langs:
  - csharp
  - vb
  name: IStaticDataService
  nameWithType: IStaticDataService
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  type: Interface
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: IStaticDataService
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 13
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nStatic Data service\n"
  example: []
  syntax:
    content: public interface IStaticDataService
    content.vb: Public Interface IStaticDataService
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissions
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissions
  id: GetAllPermissions
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetAllPermissions()
  nameWithType: IStaticDataService.GetAllPermissions()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissions()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetAllPermissions
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 19
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets all permissions.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated Use Async equivalent")]

      List<PermissionGroup> GetAllPermissions()
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.PermissionGroup}
      description: List of Permissions
    content.vb: >-
      <Obsolete("Deprecated Use Async equivalent")>

      Function GetAllPermissions As List(Of PermissionGroup)
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissions*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRoles
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRoles
  id: GetAllBuiltInRoles
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetAllBuiltInRoles()
  nameWithType: IStaticDataService.GetAllBuiltInRoles()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRoles()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetAllBuiltInRoles
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 25
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets all built in roles.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated Use Async equivalent")]

      List<Role> GetAllBuiltInRoles()
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.Role}
      description: List of &apos;BuiltIn&apos; roles
    content.vb: >-
      <Obsolete("Deprecated Use Async equivalent")>

      Function GetAllBuiltInRoles As List(Of Role)
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRoles*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZones
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZones
  id: GetSupportedTimeZones
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetSupportedTimeZones()
  nameWithType: IStaticDataService.GetSupportedTimeZones()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZones()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetSupportedTimeZones
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 31
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the supported time zones.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated Use Async equivalent")]

      HashSet<TimeZone> GetSupportedTimeZones()
    return:
      type: System.Collections.Generic.HashSet{System.TimeZone}
      description: Set of supported timezones.
    content.vb: >-
      <Obsolete("Deprecated Use Async equivalent")>

      Function GetSupportedTimeZones As HashSet(Of TimeZone)
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZones*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitles
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitles
  id: GetSupportedTitles
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetSupportedTitles()
  nameWithType: IStaticDataService.GetSupportedTitles()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitles()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetSupportedTitles
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 37
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the supported titles.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated Use Async equivalent")]

      List<string> GetSupportedTitles()
    return:
      type: System.Collections.Generic.List{System.String}
      description: ''
    content.vb: >-
      <Obsolete("Deprecated Use Async equivalent")>

      Function GetSupportedTitles As List(Of String)
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitles*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrencies
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrencies
  id: GetSupportedCurrencies
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetSupportedCurrencies()
  nameWithType: IStaticDataService.GetSupportedCurrencies()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrencies()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetSupportedCurrencies
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 43
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the supported currencies.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated Use Async equivalent")]

      List<Currency> GetSupportedCurrencies()
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Currency}
      description: ''
    content.vb: >-
      <Obsolete("Deprecated Use Async equivalent")>

      Function GetSupportedCurrencies As List(Of Currency)
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrencies*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountries
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountries
  id: GetSupportedCountries
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetSupportedCountries()
  nameWithType: IStaticDataService.GetSupportedCountries()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountries()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetSupportedCountries
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 49
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the supported countries.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated Use Async equivalent")]

      List<Country> GetSupportedCountries()
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Country}
      description: ''
    content.vb: >-
      <Obsolete("Deprecated Use Async equivalent")>

      Function GetSupportedCountries As List(Of Country)
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountries*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegions
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegions
  id: GetSupportedRegions
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetSupportedRegions()
  nameWithType: IStaticDataService.GetSupportedRegions()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegions()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetSupportedRegions
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 55
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the supported regions.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated Use Async equivalent")]

      Dictionary<string, List<Region>> GetSupportedRegions()
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Region}}
      description: ''
    content.vb: >-
      <Obsolete("Deprecated Use Async equivalent")>

      Function GetSupportedRegions As Dictionary(Of String, List(Of Region))
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegions*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissionsAsync
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissionsAsync
  id: GetAllPermissionsAsync
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetAllPermissionsAsync()
  nameWithType: IStaticDataService.GetAllPermissionsAsync()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissionsAsync()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetAllPermissionsAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 61
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets all permissions.\n"
  example: []
  syntax:
    content: Task<List<PermissionGroup>> GetAllPermissionsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.PermissionGroup}}
      description: ''
    content.vb: Function GetAllPermissionsAsync As Task(Of List(Of PermissionGroup))
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissionsAsync*
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRolesAsync
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRolesAsync
  id: GetAllBuiltInRolesAsync
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetAllBuiltInRolesAsync()
  nameWithType: IStaticDataService.GetAllBuiltInRolesAsync()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRolesAsync()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetAllBuiltInRolesAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 66
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets all built in roles.\n"
  example: []
  syntax:
    content: Task<List<Role>> GetAllBuiltInRolesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.Role}}
      description: ''
    content.vb: Function GetAllBuiltInRolesAsync As Task(Of List(Of Role))
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRolesAsync*
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZonesAsync
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZonesAsync
  id: GetSupportedTimeZonesAsync
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetSupportedTimeZonesAsync()
  nameWithType: IStaticDataService.GetSupportedTimeZonesAsync()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZonesAsync()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetSupportedTimeZonesAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 71
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the supported time zones.\n"
  example: []
  syntax:
    content: Task<HashSet<TimeZone>> GetSupportedTimeZonesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.HashSet{System.TimeZone}}
      description: ''
    content.vb: Function GetSupportedTimeZonesAsync As Task(Of HashSet(Of TimeZone))
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZonesAsync*
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitlesAsync
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitlesAsync
  id: GetSupportedTitlesAsync
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetSupportedTitlesAsync()
  nameWithType: IStaticDataService.GetSupportedTitlesAsync()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitlesAsync()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetSupportedTitlesAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 76
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the supported titles.\n"
  example: []
  syntax:
    content: Task<List<string>> GetSupportedTitlesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
      description: ''
    content.vb: Function GetSupportedTitlesAsync As Task(Of List(Of String))
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitlesAsync*
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrenciesAsync
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrenciesAsync
  id: GetSupportedCurrenciesAsync
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetSupportedCurrenciesAsync()
  nameWithType: IStaticDataService.GetSupportedCurrenciesAsync()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrenciesAsync()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetSupportedCurrenciesAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 81
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the supported currencies.\n"
  example: []
  syntax:
    content: Task<List<Currency>> GetSupportedCurrenciesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Currency}}
      description: ''
    content.vb: Function GetSupportedCurrenciesAsync As Task(Of List(Of Currency))
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrenciesAsync*
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountriesAsync
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountriesAsync
  id: GetSupportedCountriesAsync
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetSupportedCountriesAsync()
  nameWithType: IStaticDataService.GetSupportedCountriesAsync()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountriesAsync()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetSupportedCountriesAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 86
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the supported countries.\n"
  example: []
  syntax:
    content: Task<List<Country>> GetSupportedCountriesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Country}}
      description: ''
    content.vb: Function GetSupportedCountriesAsync As Task(Of List(Of Country))
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountriesAsync*
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegionsAsync
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegionsAsync
  id: GetSupportedRegionsAsync
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetSupportedRegionsAsync()
  nameWithType: IStaticDataService.GetSupportedRegionsAsync()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegionsAsync()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetSupportedRegionsAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 91
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the supported regions.\n"
  example: []
  syntax:
    content: Task<Dictionary<string, List<Region>>> GetSupportedRegionsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Region}}}
      description: ''
    content.vb: Function GetSupportedRegionsAsync As Task(Of Dictionary(Of String, List(Of Region)))
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegionsAsync*
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRates(System.String)
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRates(System.String)
  id: GetTaxRates(System.String)
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetTaxRates(String)
  nameWithType: IStaticDataService.GetTaxRates(String)
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRates(System.String)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetTaxRates
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 99
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the VAT rates configured for the specified country.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated Use Async equivalent")]

      List<TaxRate> GetTaxRates(string countryIsoCode)
    parameters:
    - id: countryIsoCode
      type: System.String
      description: The country ISO code.
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.TaxRate}
      description: "\nList of supported VAT rates\n"
    content.vb: >-
      <Obsolete("Deprecated Use Async equivalent")>

      Function GetTaxRates(countryIsoCode As String) As List(Of TaxRate)
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRates*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRatesAsync(System.String)
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRatesAsync(System.String)
  id: GetTaxRatesAsync(System.String)
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetTaxRatesAsync(String)
  nameWithType: IStaticDataService.GetTaxRatesAsync(String)
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRatesAsync(System.String)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetTaxRatesAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 110
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the VAT rates configured for the specified country.\n"
  example: []
  syntax:
    content: Task<List<TaxRate>> GetTaxRatesAsync(string countryIsoCode)
    parameters:
    - id: countryIsoCode
      type: System.String
      description: The country ISO code.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.TaxRate}}
      description: "\nList of supported VAT rates\n"
    content.vb: Function GetTaxRatesAsync(countryIsoCode As String) As Task(Of List(Of TaxRate))
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRatesAsync*
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnits
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnits
  id: GetDimensionUnits
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetDimensionUnits()
  nameWithType: IStaticDataService.GetDimensionUnits()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnits()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetDimensionUnits
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 116
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the dimension units.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated Use Async equivalent")]

      List<Unit> GetDimensionUnits()
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Rates.Unit}
      description: ''
    content.vb: >-
      <Obsolete("Deprecated Use Async equivalent")>

      Function GetDimensionUnits As List(Of Unit)
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnits*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnitsAsync
  commentId: M:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnitsAsync
  id: GetDimensionUnitsAsync
  parent: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService
  langs:
  - csharp
  - vb
  name: GetDimensionUnitsAsync()
  nameWithType: IStaticDataService.GetDimensionUnitsAsync()
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnitsAsync()
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetDimensionUnitsAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Settings/IStaticDataService.cs
    startLine: 123
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Settings
  namespace: Sorted.PRO.SDK.Interfaces.Settings
  summary: "\nGets the dimension units.\n"
  example: []
  syntax:
    content: Task<List<Unit>> GetDimensionUnitsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Rates.Unit}}
      description: ''
    content.vb: Function GetDimensionUnitsAsync As Task(Of List(Of Unit))
  overload: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnitsAsync*
references:
- uid: Sorted.PRO.SDK.Interfaces.Settings
  commentId: N:Sorted.PRO.SDK.Interfaces.Settings
  name: Sorted.PRO.SDK.Interfaces.Settings
  nameWithType: Sorted.PRO.SDK.Interfaces.Settings
  fullName: Sorted.PRO.SDK.Interfaces.Settings
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissions*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissions
  name: GetAllPermissions
  nameWithType: IStaticDataService.GetAllPermissions
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissions
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.PermissionGroup}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.PermissionGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PermissionGroup>
  nameWithType: List<PermissionGroup>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Security.PermissionGroup>
  nameWithType.vb: List(Of PermissionGroup)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Security.PermissionGroup)
  name.vb: List(Of PermissionGroup)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Security.PermissionGroup
    name: PermissionGroup
    nameWithType: PermissionGroup
    fullName: Sorted.PRO.SDK.DataTypes.Security.PermissionGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Security.PermissionGroup
    name: PermissionGroup
    nameWithType: PermissionGroup
    fullName: Sorted.PRO.SDK.DataTypes.Security.PermissionGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRoles*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRoles
  name: GetAllBuiltInRoles
  nameWithType: IStaticDataService.GetAllBuiltInRoles
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRoles
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.Role}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.Role}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Role>
  nameWithType: List<Role>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Security.Role>
  nameWithType.vb: List(Of Role)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Security.Role)
  name.vb: List(Of Role)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Security.Role
    name: Role
    nameWithType: Role
    fullName: Sorted.PRO.SDK.DataTypes.Security.Role
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Security.Role
    name: Role
    nameWithType: Role
    fullName: Sorted.PRO.SDK.DataTypes.Security.Role
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZones*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZones
  name: GetSupportedTimeZones
  nameWithType: IStaticDataService.GetSupportedTimeZones
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZones
- uid: System.Collections.Generic.HashSet{System.TimeZone}
  commentId: T:System.Collections.Generic.HashSet{System.TimeZone}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<TimeZone>
  nameWithType: HashSet<TimeZone>
  fullName: System.Collections.Generic.HashSet<System.TimeZone>
  nameWithType.vb: HashSet(Of TimeZone)
  fullName.vb: System.Collections.Generic.HashSet(Of System.TimeZone)
  name.vb: HashSet(Of TimeZone)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeZone
    name: TimeZone
    nameWithType: TimeZone
    fullName: System.TimeZone
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeZone
    name: TimeZone
    nameWithType: TimeZone
    fullName: System.TimeZone
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitles*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitles
  name: GetSupportedTitles
  nameWithType: IStaticDataService.GetSupportedTitles
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitles
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrencies*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrencies
  name: GetSupportedCurrencies
  nameWithType: IStaticDataService.GetSupportedCurrencies
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrencies
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Currency}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Currency}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Currency>
  nameWithType: List<Currency>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.Currency>
  nameWithType.vb: List(Of Currency)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.Currency)
  name.vb: List(Of Currency)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.Currency
    name: Currency
    nameWithType: Currency
    fullName: Sorted.PRO.SDK.DataTypes.Common.Currency
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.Currency
    name: Currency
    nameWithType: Currency
    fullName: Sorted.PRO.SDK.DataTypes.Common.Currency
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountries*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountries
  name: GetSupportedCountries
  nameWithType: IStaticDataService.GetSupportedCountries
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountries
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Country}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Country}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Country>
  nameWithType: List<Country>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.Country>
  nameWithType.vb: List(Of Country)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.Country)
  name.vb: List(Of Country)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.Country
    name: Country
    nameWithType: Country
    fullName: Sorted.PRO.SDK.DataTypes.Common.Country
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.Country
    name: Country
    nameWithType: Country
    fullName: Sorted.PRO.SDK.DataTypes.Common.Country
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegions*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegions
  name: GetSupportedRegions
  nameWithType: IStaticDataService.GetSupportedRegions
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegions
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Region}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Region}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<Region>>
  nameWithType: Dictionary<String, List<Region>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.Region>>
  nameWithType.vb: Dictionary(Of String, List(Of Region))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.Region))
  name.vb: Dictionary(Of String, List(Of Region))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.Region
    name: Region
    nameWithType: Region
    fullName: Sorted.PRO.SDK.DataTypes.Common.Region
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.Region
    name: Region
    nameWithType: Region
    fullName: Sorted.PRO.SDK.DataTypes.Common.Region
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissionsAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissionsAsync
  name: GetAllPermissionsAsync
  nameWithType: IStaticDataService.GetAllPermissionsAsync
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllPermissionsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.PermissionGroup}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.PermissionGroup}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<PermissionGroup>>
  nameWithType: Task<List<PermissionGroup>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Security.PermissionGroup>>
  nameWithType.vb: Task(Of List(Of PermissionGroup))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Security.PermissionGroup))
  name.vb: Task(Of List(Of PermissionGroup))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Security.PermissionGroup
    name: PermissionGroup
    nameWithType: PermissionGroup
    fullName: Sorted.PRO.SDK.DataTypes.Security.PermissionGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Security.PermissionGroup
    name: PermissionGroup
    nameWithType: PermissionGroup
    fullName: Sorted.PRO.SDK.DataTypes.Security.PermissionGroup
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRolesAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRolesAsync
  name: GetAllBuiltInRolesAsync
  nameWithType: IStaticDataService.GetAllBuiltInRolesAsync
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetAllBuiltInRolesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.Role}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.Role}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Role>>
  nameWithType: Task<List<Role>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Security.Role>>
  nameWithType.vb: Task(Of List(Of Role))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Security.Role))
  name.vb: Task(Of List(Of Role))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Security.Role
    name: Role
    nameWithType: Role
    fullName: Sorted.PRO.SDK.DataTypes.Security.Role
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Security.Role
    name: Role
    nameWithType: Role
    fullName: Sorted.PRO.SDK.DataTypes.Security.Role
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZonesAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZonesAsync
  name: GetSupportedTimeZonesAsync
  nameWithType: IStaticDataService.GetSupportedTimeZonesAsync
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTimeZonesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.HashSet{System.TimeZone}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.HashSet{System.TimeZone}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HashSet<TimeZone>>
  nameWithType: Task<HashSet<TimeZone>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.HashSet<System.TimeZone>>
  nameWithType.vb: Task(Of HashSet(Of TimeZone))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.HashSet(Of System.TimeZone))
  name.vb: Task(Of HashSet(Of TimeZone))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeZone
    name: TimeZone
    nameWithType: TimeZone
    fullName: System.TimeZone
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeZone
    name: TimeZone
    nameWithType: TimeZone
    fullName: System.TimeZone
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitlesAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitlesAsync
  name: GetSupportedTitlesAsync
  nameWithType: IStaticDataService.GetSupportedTitlesAsync
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedTitlesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<String>>
  nameWithType: Task<List<String>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<System.String>>
  nameWithType.vb: Task(Of List(Of String))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of System.String))
  name.vb: Task(Of List(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrenciesAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrenciesAsync
  name: GetSupportedCurrenciesAsync
  nameWithType: IStaticDataService.GetSupportedCurrenciesAsync
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCurrenciesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Currency}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Currency}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Currency>>
  nameWithType: Task<List<Currency>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.Currency>>
  nameWithType.vb: Task(Of List(Of Currency))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.Currency))
  name.vb: Task(Of List(Of Currency))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.Currency
    name: Currency
    nameWithType: Currency
    fullName: Sorted.PRO.SDK.DataTypes.Common.Currency
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.Currency
    name: Currency
    nameWithType: Currency
    fullName: Sorted.PRO.SDK.DataTypes.Common.Currency
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountriesAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountriesAsync
  name: GetSupportedCountriesAsync
  nameWithType: IStaticDataService.GetSupportedCountriesAsync
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedCountriesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Country}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Country}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Country>>
  nameWithType: Task<List<Country>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.Country>>
  nameWithType.vb: Task(Of List(Of Country))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.Country))
  name.vb: Task(Of List(Of Country))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.Country
    name: Country
    nameWithType: Country
    fullName: Sorted.PRO.SDK.DataTypes.Common.Country
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.Country
    name: Country
    nameWithType: Country
    fullName: Sorted.PRO.SDK.DataTypes.Common.Country
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegionsAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegionsAsync
  name: GetSupportedRegionsAsync
  nameWithType: IStaticDataService.GetSupportedRegionsAsync
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetSupportedRegionsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Region}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Region}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Dictionary<String, List<Region>>>
  nameWithType: Task<Dictionary<String, List<Region>>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.Region>>>
  nameWithType.vb: Task(Of Dictionary(Of String, List(Of Region)))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.Region)))
  name.vb: Task(Of Dictionary(Of String, List(Of Region)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.Region
    name: Region
    nameWithType: Region
    fullName: Sorted.PRO.SDK.DataTypes.Common.Region
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.Region
    name: Region
    nameWithType: Region
    fullName: Sorted.PRO.SDK.DataTypes.Common.Region
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRates*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRates
  name: GetTaxRates
  nameWithType: IStaticDataService.GetTaxRates
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRates
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.TaxRate}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.TaxRate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TaxRate>
  nameWithType: List<TaxRate>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.TaxRate>
  nameWithType.vb: List(Of TaxRate)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.TaxRate)
  name.vb: List(Of TaxRate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.TaxRate
    name: TaxRate
    nameWithType: TaxRate
    fullName: Sorted.PRO.SDK.DataTypes.Common.TaxRate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.TaxRate
    name: TaxRate
    nameWithType: TaxRate
    fullName: Sorted.PRO.SDK.DataTypes.Common.TaxRate
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRatesAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRatesAsync
  name: GetTaxRatesAsync
  nameWithType: IStaticDataService.GetTaxRatesAsync
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetTaxRatesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.TaxRate}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.TaxRate}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<TaxRate>>
  nameWithType: Task<List<TaxRate>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.TaxRate>>
  nameWithType.vb: Task(Of List(Of TaxRate))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.TaxRate))
  name.vb: Task(Of List(Of TaxRate))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.TaxRate
    name: TaxRate
    nameWithType: TaxRate
    fullName: Sorted.PRO.SDK.DataTypes.Common.TaxRate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.TaxRate
    name: TaxRate
    nameWithType: TaxRate
    fullName: Sorted.PRO.SDK.DataTypes.Common.TaxRate
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnits*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnits
  name: GetDimensionUnits
  nameWithType: IStaticDataService.GetDimensionUnits
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnits
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Rates.Unit}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Rates.Unit}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Unit>
  nameWithType: List<Unit>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Rates.Unit>
  nameWithType.vb: List(Of Unit)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Rates.Unit)
  name.vb: List(Of Unit)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Rates.Unit
    name: Unit
    nameWithType: Unit
    fullName: Sorted.PRO.SDK.DataTypes.Rates.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Rates.Unit
    name: Unit
    nameWithType: Unit
    fullName: Sorted.PRO.SDK.DataTypes.Rates.Unit
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnitsAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnitsAsync
  name: GetDimensionUnitsAsync
  nameWithType: IStaticDataService.GetDimensionUnitsAsync
  fullName: Sorted.PRO.SDK.Interfaces.Settings.IStaticDataService.GetDimensionUnitsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Rates.Unit}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Rates.Unit}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Unit>>
  nameWithType: Task<List<Unit>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Rates.Unit>>
  nameWithType.vb: Task(Of List(Of Unit))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Rates.Unit))
  name.vb: Task(Of List(Of Unit))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Rates.Unit
    name: Unit
    nameWithType: Unit
    fullName: Sorted.PRO.SDK.DataTypes.Rates.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Rates.Unit
    name: Unit
    nameWithType: Unit
    fullName: Sorted.PRO.SDK.DataTypes.Rates.Unit
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
