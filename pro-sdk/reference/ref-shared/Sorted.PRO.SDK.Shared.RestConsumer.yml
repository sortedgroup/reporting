### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.Shared.RestConsumer
  commentId: T:Sorted.PRO.SDK.Shared.RestConsumer
  id: RestConsumer
  parent: Sorted.PRO.SDK.Shared
  children:
  - Sorted.PRO.SDK.Shared.RestConsumer.#ctor(Sorted.PRO.SDK.Shared.Interfaces.IRestConsumerConfiguration,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.ApplicationJson
  - Sorted.PRO.SDK.Shared.RestConsumer.BaseUrl
  - Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.ConfigureRequest(System.String,System.Net.Http.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.DefaultSerializationSettings
  - Sorted.PRO.SDK.Shared.RestConsumer.Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.GetAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.GetAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.HttpClientFactory
  - Sorted.PRO.SDK.Shared.RestConsumer.Log
  - Sorted.PRO.SDK.Shared.RestConsumer.OptionalHeaders
  - Sorted.PRO.SDK.Shared.RestConsumer.Patch(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Shared.RestConsumer.Token
  - Sorted.PRO.SDK.Shared.RestConsumer.Version
  langs:
  - csharp
  - vb
  name: RestConsumer
  nameWithType: RestConsumer
  fullName: Sorted.PRO.SDK.Shared.RestConsumer
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: RestConsumer
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 21
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nConcrete implementation of IRestConsumer.\n"
  example: []
  syntax:
    content: 'public class RestConsumer : IRestConsumer'
    content.vb: >-
      Public Class RestConsumer
          Implements IRestConsumer
  seealso:
  - linkId: Sorted.PRO.SDK.Interfaces.IRestConsumer
    commentId: T:Sorted.PRO.SDK.Interfaces.IRestConsumer
  inheritance:
  - System.Object
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sorted.PRO.SDK.Shared.RestConsumer.ApplicationJson
  commentId: F:Sorted.PRO.SDK.Shared.RestConsumer.ApplicationJson
  id: ApplicationJson
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: ApplicationJson
  nameWithType: RestConsumer.ApplicationJson
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.ApplicationJson
  type: Field
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ApplicationJson
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 26
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nThe MediaType that we transmit our content as\n"
  example: []
  syntax:
    content: protected const string ApplicationJson = "application/json"
    return:
      type: System.String
    content.vb: Protected Const ApplicationJson As String = "application/json"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Sorted.PRO.SDK.Shared.RestConsumer.DefaultSerializationSettings
  commentId: P:Sorted.PRO.SDK.Shared.RestConsumer.DefaultSerializationSettings
  id: DefaultSerializationSettings
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: DefaultSerializationSettings
  nameWithType: RestConsumer.DefaultSerializationSettings
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.DefaultSerializationSettings
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DefaultSerializationSettings
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 34
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nGets the default serialization settings.\n"
  example: []
  syntax:
    content: protected static JsonSerializerSettings DefaultSerializationSettings { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
      description: "\nThe default serialization settings.\n"
    content.vb: Protected Shared Property DefaultSerializationSettings As JsonSerializerSettings
  overload: Sorted.PRO.SDK.Shared.RestConsumer.DefaultSerializationSettings*
  modifiers.csharp:
  - protected
  - static
  - get
  - set
  modifiers.vb:
  - Protected
  - Shared
- uid: Sorted.PRO.SDK.Shared.RestConsumer.BaseUrl
  commentId: P:Sorted.PRO.SDK.Shared.RestConsumer.BaseUrl
  id: BaseUrl
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: BaseUrl
  nameWithType: RestConsumer.BaseUrl
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.BaseUrl
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: BaseUrl
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 42
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nThe root URL of the endpoint\n"
  example: []
  syntax:
    content: protected string BaseUrl { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe base URL.\n"
    content.vb: Protected Property BaseUrl As String
  overload: Sorted.PRO.SDK.Shared.RestConsumer.BaseUrl*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Token
  commentId: P:Sorted.PRO.SDK.Shared.RestConsumer.Token
  id: Token
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: RestConsumer.Token
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Token
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Token
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 50
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nThe authentication token for the current user\n"
  example: []
  syntax:
    content: protected string Token { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe token.\n"
    content.vb: Protected Property Token As String
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Token*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Log
  commentId: P:Sorted.PRO.SDK.Shared.RestConsumer.Log
  id: Log
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: RestConsumer.Log
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Log
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Log
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 58
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nProvides diagnostic output on the usage of the RestConsumer\n"
  example: []
  syntax:
    content: protected ILogger Log { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.Shared.Interfaces.ILogger
      description: "\nThe log.\n"
    content.vb: Protected Property Log As ILogger
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Log*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Sorted.PRO.SDK.Shared.RestConsumer.HttpClientFactory
  commentId: P:Sorted.PRO.SDK.Shared.RestConsumer.HttpClientFactory
  id: HttpClientFactory
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: HttpClientFactory
  nameWithType: RestConsumer.HttpClientFactory
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.HttpClientFactory
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: HttpClientFactory
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 66
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nGets or sets the HTTP client wrapper.\n"
  example: []
  syntax:
    content: protected IHttpClientFactory HttpClientFactory { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
      description: "\nThe HTTP client wrapper.\n"
    content.vb: Protected Property HttpClientFactory As IHttpClientFactory
  overload: Sorted.PRO.SDK.Shared.RestConsumer.HttpClientFactory*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Version
  commentId: P:Sorted.PRO.SDK.Shared.RestConsumer.Version
  id: Version
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: RestConsumer.Version
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Version
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Version
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 68
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  syntax:
    content: protected string Version { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Property Version As String
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Version*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Sorted.PRO.SDK.Shared.RestConsumer.OptionalHeaders
  commentId: P:Sorted.PRO.SDK.Shared.RestConsumer.OptionalHeaders
  id: OptionalHeaders
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: OptionalHeaders
  nameWithType: RestConsumer.OptionalHeaders
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.OptionalHeaders
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: OptionalHeaders
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 80
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  syntax:
    content: protected Dictionary<string, string> OptionalHeaders { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Protected Property OptionalHeaders As Dictionary(Of String, String)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.OptionalHeaders*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Sorted.PRO.SDK.Shared.RestConsumer.#ctor(Sorted.PRO.SDK.Shared.Interfaces.IRestConsumerConfiguration,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.#ctor(Sorted.PRO.SDK.Shared.Interfaces.IRestConsumerConfiguration,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})
  id: '#ctor(Sorted.PRO.SDK.Shared.Interfaces.IRestConsumerConfiguration,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})'
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: RestConsumer(IRestConsumerConfiguration, IHttpClientFactory, ILogger, Dictionary<String, String>)
  nameWithType: RestConsumer.RestConsumer(IRestConsumerConfiguration, IHttpClientFactory, ILogger, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.RestConsumer(Sorted.PRO.SDK.Shared.Interfaces.IRestConsumerConfiguration, Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory, Sorted.PRO.SDK.Shared.Interfaces.ILogger, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 101
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nInitializes a new instance of the <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public RestConsumer(IRestConsumerConfiguration configuration, IHttpClientFactory httpClientFactory, ILogger log, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: configuration
      type: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumerConfiguration
      description: The configuration used to instantiate this consumer.
    - id: httpClientFactory
      type: Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
      description: An <xref href="Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory" data-throw-if-not-resolved="false"></xref> used to provide a shared <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref> instance
    - id: log
      type: Sorted.PRO.SDK.Shared.Interfaces.ILogger
      description: The log we will use for diagnostics. If null an SdkReferenceLogger will be created and used.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Sub New(configuration As IRestConsumerConfiguration, httpClientFactory As IHttpClientFactory, log As ILogger, optionalHeaders As Dictionary(Of String, String) = Nothing)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if BaseURL is null, empty or whitespace or if BaseUrl does not end with a trailing slash (/)
  nameWithType.vb: RestConsumer.RestConsumer(IRestConsumerConfiguration, IHttpClientFactory, ILogger, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.RestConsumer(Sorted.PRO.SDK.Shared.Interfaces.IRestConsumerConfiguration, Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory, Sorted.PRO.SDK.Shared.Interfaces.ILogger, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: RestConsumer(IRestConsumerConfiguration, IHttpClientFactory, ILogger, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Get<T>(String, Dictionary<String, String>)
  nameWithType: RestConsumer.Get<T>(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Get<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Get
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 135
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues a GET to the specified requestUri. The requestUri should contain the route part\nof the request (not the endpoint) and should include any QueryString parameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("use the async version")]

      public T Get<T>(string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: Type that we will deserialise the response into
    return:
      type: '{T}'
      description: "\nApiResponse containing a deserialised instance of type T or an Error object on failure.\n"
    content.vb: >-
      <Obsolete("use the async version")>

      Public Function Get(Of T)(requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As T
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Get*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use the async version
  nameWithType.vb: RestConsumer.Get(Of T)(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.Get(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Get(Of T)(String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.GetAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.GetAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: GetAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: GetAsync<T>(String, Dictionary<String, String>)
  nameWithType: RestConsumer.GetAsync<T>(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.GetAsync<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 154
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues an asynchronous GET to the specified requestUri. The requestUri should contain the route part\nof the request (not the endpoint) and should include any QueryString parameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task<T> GetAsync<T>(string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: Type that we will deserialise the response into
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: "\nApiResponse containing a deserialised instance of type T or an Error object on failure.\n"
    content.vb: Public Function GetAsync(Of T)(requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As Task(Of T)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.GetAsync*
  exceptions:
  - type: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    description: Thrown if response.StatusCode is 401.
  - type: Sorted.PRO.SDK.Shared.Error.ApiException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
    description: Thrown if response.IsSuccessStatusCode is false and HttpStatusCode is not 401
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.GetAsync(Of T)(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.GetAsync(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: GetAsync(Of T)(String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Get(String, Dictionary<String, String>)
  nameWithType: RestConsumer.Get(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Get(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Get
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 172
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues a GET to the specified requestUri. The requestUri should contain the route part\nof the request (not the endpoint) and should include any QueryString parameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("use the async version")]

      public void Get(string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    content.vb: >-
      <Obsolete("use the async version")>

      Public Sub Get(requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Get*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use the async version
  nameWithType.vb: RestConsumer.Get(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.Get(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Get(String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.GetAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.GetAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: GetAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: GetAsync(String, Dictionary<String, String>)
  nameWithType: RestConsumer.GetAsync(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.GetAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 193
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues an asynchronous GET to the specified requestUri. The requestUri should contain the route part\nof the request (not the endpoint) and should include any QueryString parameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task GetAsync(string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    return:
      type: System.Threading.Tasks.Task
      description: "\nTask for awaiting.\n"
    content.vb: Public Function GetAsync(requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As Task
  overload: Sorted.PRO.SDK.Shared.RestConsumer.GetAsync*
  exceptions:
  - type: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    description: Thrown if response.StatusCode is 401.
  - type: Sorted.PRO.SDK.Shared.Error.ApiException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
    description: Thrown if response.IsSuccessStatusCode is false and HttpStatusCode is not 401
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.GetAsync(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.GetAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: GetAsync(String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Post<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.Post<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Post<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Post
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 219
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues a POST to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("use the async version")]

      public TOut Post<T, TOut>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the POST request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the POST request as its body
    - id: TOut
      description: The type that we will return within the API Response.
    return:
      type: '{TOut}'
      description: "\nApiResponse containing a deserialised instance of type T or an Error object on failure.\n"
    content.vb: >-
      <Obsolete("use the async version")>

      Public Function Post(Of T, TOut)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As TOut
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Post*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use the async version
  nameWithType.vb: RestConsumer.Post(Of T, TOut)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.Post(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Post(Of T, TOut)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: PostAsync<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.PostAsync<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.PostAsync<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: PostAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 241
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues an asynchronous POST to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task<TOut> PostAsync<T, TOut>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the POST request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the POST request as its body
    - id: TOut
      description: The type that we will return within the API Response.
    return:
      type: System.Threading.Tasks.Task{{TOut}}
      description: "\nApiResponse containing a deserialised instance of type T or an Error object on failure.\n"
    content.vb: Public Function PostAsync(Of T, TOut)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As Task(Of TOut)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.PostAsync*
  exceptions:
  - type: Sorted.PRO.SDK.Shared.Error.ApiException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
    description: Condition.
  - type: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    description: Thrown if response.StatusCode is 401.
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.PostAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.PostAsync(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PostAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Post<T>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.Post<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Post<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Post
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 265
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues a POST to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("use the async version")]

      public void Post<T>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the POST request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the POST request as its body
    content.vb: >-
      <Obsolete("use the async version")>

      Public Sub Post(Of T)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Post*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use the async version
  nameWithType.vb: RestConsumer.Post(Of T)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.Post(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Post(Of T)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: PostAsync<T>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.PostAsync<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.PostAsync<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: PostAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 286
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues an asynchronous POST to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task PostAsync<T>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the POST request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the POST request as its body
    return:
      type: System.Threading.Tasks.Task
      description: "\nTask for awaiting.\n"
    content.vb: Public Function PostAsync(Of T)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As Task
  overload: Sorted.PRO.SDK.Shared.RestConsumer.PostAsync*
  exceptions:
  - type: Sorted.PRO.SDK.Shared.Error.ApiException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
    description: Condition.
  - type: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    description: Thrown if response.StatusCode is 401.
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.PostAsync(Of T)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.PostAsync(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PostAsync(Of T)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Put<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.Put<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Put<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Put
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 314
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues a PUT to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("use the async version")]

      public TOut Put<T, TOut>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the PUT request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the PUT request as its body
    - id: TOut
      description: The type that we will return within the API Response.
    return:
      type: '{TOut}'
      description: "\nApiResponse containing a deserialised instance of type T or an Error object on failure.\n"
    content.vb: >-
      <Obsolete("use the async version")>

      Public Function Put(Of T, TOut)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As TOut
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Put*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use the async version
  nameWithType.vb: RestConsumer.Put(Of T, TOut)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.Put(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Put(Of T, TOut)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: PutAsync<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.PutAsync<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.PutAsync<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: PutAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 336
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues an asynchronous PUT to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task<TOut> PutAsync<T, TOut>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the PUT request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the PUT request as its body
    - id: TOut
      description: The type that we will return within the API Response.
    return:
      type: System.Threading.Tasks.Task{{TOut}}
      description: "\nApiResponse containing a deserialised instance of type T or an Error object on failure.\n"
    content.vb: Public Function PutAsync(Of T, TOut)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As Task(Of TOut)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.PutAsync*
  exceptions:
  - type: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    description: Thrown if response.StatusCode is 401.
  - type: Sorted.PRO.SDK.Shared.Error.ApiException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
    description: Thrown if response.IsSuccessStatusCode is false and HttpStatusCode is not 401
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.PutAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.PutAsync(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PutAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Put<T>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.Put<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Put<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Put
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 362
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues a PUT to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("use the async version")]

      public void Put<T>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the PUT request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the PUT request as its body
    content.vb: >-
      <Obsolete("use the async version")>

      Public Sub Put(Of T)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Put*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use the async version
  nameWithType.vb: RestConsumer.Put(Of T)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.Put(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Put(Of T)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: PutAsync<T>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.PutAsync<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.PutAsync<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: PutAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 383
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues an asynchronous PUT to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task PutAsync<T>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the PUT request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the PUT request as its body
    return:
      type: System.Threading.Tasks.Task
      description: "\nTask for awaiting.\n"
    content.vb: Public Function PutAsync(Of T)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As Task
  overload: Sorted.PRO.SDK.Shared.RestConsumer.PutAsync*
  exceptions:
  - type: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    description: Thrown if response.StatusCode is 401.
  - type: Sorted.PRO.SDK.Shared.Error.ApiException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
    description: Thrown if response.IsSuccessStatusCode is false and HttpStatusCode is not 401
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.PutAsync(Of T)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.PutAsync(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PutAsync(Of T)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Patch<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.Patch<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Patch<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Patch
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 410
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues a PATCH to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("use the async version")]

      public TOut Patch<T, TOut>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the PATCH request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the PATCH request as its body
    - id: TOut
      description: The type that we will return within the API Response.
    return:
      type: '{TOut}'
      description: "\nApiResponse containing a deserialised instance of type T or an Error object on failure.\n"
    content.vb: >-
      <Obsolete("use the async version")>

      Public Function Patch(Of T, TOut)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As TOut
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Patch*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use the async version
  nameWithType.vb: RestConsumer.Patch(Of T, TOut)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.Patch(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Patch(Of T, TOut)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: PatchAsync<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.PatchAsync<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: PatchAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 432
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues an asynchronous PATCH to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task<TOut> PatchAsync<T, TOut>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the PATCH request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the PATCH request as its body
    - id: TOut
      description: The type that we will return within the API Response.
    return:
      type: System.Threading.Tasks.Task{{TOut}}
      description: "\nApiResponse containing a deserialised instance of type T or an Error object on failure.\n"
    content.vb: Public Function PatchAsync(Of T, TOut)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As Task(Of TOut)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync*
  exceptions:
  - type: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    description: Thrown if response.StatusCode is 401.
  - type: Sorted.PRO.SDK.Shared.Error.ApiException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
    description: Thrown if response.IsSuccessStatusCode is false and HttpStatusCode is not 401
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.PatchAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PatchAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Patch<T>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.Patch<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Patch<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Patch
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 459
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues a PATCH to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("use the async version")]

      public void Patch<T>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the PATCH request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the PATCH request as its body
    content.vb: >-
      <Obsolete("use the async version")>

      Public Sub Patch(Of T)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Patch*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use the async version
  nameWithType.vb: RestConsumer.Patch(Of T)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.Patch(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Patch(Of T)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: PatchAsync<T>(T, String, Dictionary<String, String>)
  nameWithType: RestConsumer.PatchAsync<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: PatchAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 479
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues an asynchronous PATCH to the specified requestUri sending the serialised content of model as the body of the request.\nThe requestUri should contain the route part of the request (not the endpoint) and should include any QueryString\nparameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task PatchAsync<T>(T model, string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: model
      type: '{T}'
      description: The model that we are serializing and passing with the PATCH request as its body.
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: The type of the model that we are passing with the PATCH request as its body
    return:
      type: System.Threading.Tasks.Task
      description: "\nTask for awaiting.\n"
    content.vb: Public Function PatchAsync(Of T)(model As T, requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As Task
  overload: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync*
  exceptions:
  - type: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    description: Thrown if response.StatusCode is 401.
  - type: Sorted.PRO.SDK.Shared.Error.ApiException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
    description: Thrown if response.IsSuccessStatusCode is false and HttpStatusCode is not 401
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.PatchAsync(Of T)(T, String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PatchAsync(Of T)(T, String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Patch(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.Patch(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Patch(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Patch(String, Dictionary<String, String>)
  nameWithType: RestConsumer.Patch(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Patch(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Patch
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 498
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues a PATCH to the specified requestUri\n"
  example: []
  syntax:
    content: >-
      [Obsolete("use the async version")]

      public void Patch(string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    content.vb: >-
      <Obsolete("use the async version")>

      Public Sub Patch(requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Patch*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use the async version
  nameWithType.vb: RestConsumer.Patch(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.Patch(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Patch(String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: PatchAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: PatchAsync(String, Dictionary<String, String>)
  nameWithType: RestConsumer.PatchAsync(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: PatchAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 515
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues an asynchronous PATCH to the specified requestUri\n"
  example: []
  syntax:
    content: public Task PatchAsync(string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    return:
      type: System.Threading.Tasks.Task
      description: "\nTask for awaiting\n"
    content.vb: Public Function PatchAsync(requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As Task
  overload: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync*
  exceptions:
  - type: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    description: Thrown if response.StatusCode is 401.
  - type: Sorted.PRO.SDK.Shared.Error.ApiException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
    description: Thrown if response.IsSuccessStatusCode is false and HttpStatusCode is not 401
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.PatchAsync(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PatchAsync(String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Delete<T>(String, Dictionary<String, String>)
  nameWithType: RestConsumer.Delete<T>(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Delete<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Delete
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 531
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues a DELETE to the specified requestUri. The requestUri should contain the route part\nof the request (not the endpoint) and should include any QueryString parameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("use the async version")]

      public T Delete<T>(string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: "\nApiResponse containing true on success, false on failure.\n"
    content.vb: >-
      <Obsolete("use the async version")>

      Public Function Delete(Of T)(requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As T
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Delete*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use the async version
  nameWithType.vb: RestConsumer.Delete(Of T)(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.Delete(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Delete(Of T)(String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: DeleteAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: DeleteAsync<T>(String, Dictionary<String, String>)
  nameWithType: RestConsumer.DeleteAsync<T>(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DeleteAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 550
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues an asynchronous DELETE to the specified requestUri. The requestUri should contain the route part\nof the request (not the endpoint) and should include any QueryString parameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task<T> DeleteAsync<T>(string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: "\nApiResponse containing true on success, false on failure.\n"
    content.vb: Public Function DeleteAsync(Of T)(requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As Task(Of T)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync*
  exceptions:
  - type: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    description: Thrown if response.StatusCode is 401.
  - type: Sorted.PRO.SDK.Shared.Error.ApiException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
    description: Thrown if response.IsSuccessStatusCode is false and HttpStatusCode is not 401
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.DeleteAsync(Of T)(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: DeleteAsync(Of T)(String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: Delete(String, Dictionary<String, String>)
  nameWithType: RestConsumer.Delete(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Delete(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Delete
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 568
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues a DELETE to the specified requestUri. The requestUri should contain the route part\nof the request (not the endpoint) and should include any QueryString parameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("use the async version")]

      public void Delete(string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    content.vb: >-
      <Obsolete("use the async version")>

      Public Sub Delete(requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing)
  overload: Sorted.PRO.SDK.Shared.RestConsumer.Delete*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use the async version
  nameWithType.vb: RestConsumer.Delete(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.Delete(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Delete(String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: DeleteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: DeleteAsync(String, Dictionary<String, String>)
  nameWithType: RestConsumer.DeleteAsync(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DeleteAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 586
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nIssues an asynchronous DELETE to the specified requestUri. The requestUri should contain the route part\nof the request (not the endpoint) and should include any QueryString parameters created using <xref href=\"Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task DeleteAsync(string requestUri, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: requestUri
      type: System.String
      description: The route part of the request. This should not include the endpoint but should include a QueryString built using <xref href="Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Any optional headers which should be added to the request.
    return:
      type: System.Threading.Tasks.Task
      description: "\nApiResponse containing true on success, false on failure.\n"
    content.vb: Public Function DeleteAsync(requestUri As String, optionalHeaders As Dictionary(Of String, String) = Nothing) As Task
  overload: Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync*
  exceptions:
  - type: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
    description: Thrown if response.StatusCode is 401.
  - type: Sorted.PRO.SDK.Shared.Error.ApiException
    commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
    description: Thrown if response.IsSuccessStatusCode is false and HttpStatusCode is not 401
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.DeleteAsync(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: DeleteAsync(String, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})
  id: BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: BuildQueryString(Dictionary<String, String>)
  nameWithType: RestConsumer.BuildQueryString(Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: BuildQueryString
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 607
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nBuilds a query string by concatenating name/value pairs. This method will\nURLEncode all entries so you do not need to handle encoding before calling.\nIf queryStringItems is null or empty an empty string will be returned\n"
  example: []
  syntax:
    content: public string BuildQueryString(Dictionary<string, string> queryStringItems)
    parameters:
    - id: queryStringItems
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: The query string items to create a querystring for.
    return:
      type: System.String
      description: "\nURL Encoded QueryString ready for use. This will be String.Empty if queryStringItems is null or empty\n"
    content.vb: Public Function BuildQueryString(queryStringItems As Dictionary(Of String, String)) As String
  overload: Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString*
  implements:
  - Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: RestConsumer.BuildQueryString(Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: BuildQueryString(Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Shared.RestConsumer.ConfigureRequest(System.String,System.Net.Http.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.ConfigureRequest(System.String,System.Net.Http.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: ConfigureRequest(System.String,System.Net.Http.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.RestConsumer
  langs:
  - csharp
  - vb
  name: ConfigureRequest(String, HttpMethod, String, Dictionary<String, String>)
  nameWithType: RestConsumer.ConfigureRequest(String, HttpMethod, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.ConfigureRequest(System.String, System.Net.Http.HttpMethod, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/RestConsumer.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ConfigureRequest
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/RestConsumer.cs
    startLine: 715
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nConfigures the HTTP request including default and optional headers.\n"
  example: []
  syntax:
    content: protected virtual HttpRequestMessage ConfigureRequest(string path, HttpMethod method, string content = null, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: path
      type: System.String
      description: The relative path of the request.
    - id: method
      type: System.Net.Http.HttpMethod
      description: The <xref href="System.Net.Http.HttpMethod" data-throw-if-not-resolved="false"></xref> to use.
    - id: content
      type: System.String
      description: The JSON-encoded content to send (optional).
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Optional additional headers.
    return:
      type: System.Net.Http.HttpRequestMessage
      description: A configured <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>
    content.vb: Protected Overridable Function ConfigureRequest(path As String, method As HttpMethod, content As String = Nothing, optionalHeaders As Dictionary(Of String, String) = Nothing) As HttpRequestMessage
  overload: Sorted.PRO.SDK.Shared.RestConsumer.ConfigureRequest*
  nameWithType.vb: RestConsumer.ConfigureRequest(String, HttpMethod, String, Dictionary(Of String, String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Sorted.PRO.SDK.Shared.RestConsumer.ConfigureRequest(System.String, System.Net.Http.HttpMethod, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: ConfigureRequest(String, HttpMethod, String, Dictionary(Of String, String))
references:
- uid: Sorted.PRO.SDK.Interfaces.IRestConsumer
  commentId: T:Sorted.PRO.SDK.Interfaces.IRestConsumer
  isExternal: true
- uid: Sorted.PRO.SDK.Shared
  commentId: N:Sorted.PRO.SDK.Shared
  name: Sorted.PRO.SDK.Shared
  nameWithType: Sorted.PRO.SDK.Shared
  fullName: Sorted.PRO.SDK.Shared
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  parent: Sorted.PRO.SDK.Shared.Interfaces
  name: IRestConsumer
  nameWithType: IRestConsumer
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.Shared.Interfaces
  commentId: N:Sorted.PRO.SDK.Shared.Interfaces
  name: Sorted.PRO.SDK.Shared.Interfaces
  nameWithType: Sorted.PRO.SDK.Shared.Interfaces
  fullName: Sorted.PRO.SDK.Shared.Interfaces
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.Shared.RestConsumer.DefaultSerializationSettings*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.DefaultSerializationSettings
  name: DefaultSerializationSettings
  nameWithType: RestConsumer.DefaultSerializationSettings
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.DefaultSerializationSettings
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: Sorted.PRO.SDK.Shared.RestConsumer.BaseUrl*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.BaseUrl
  name: BaseUrl
  nameWithType: RestConsumer.BaseUrl
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.BaseUrl
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Token*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.Token
  name: Token
  nameWithType: RestConsumer.Token
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Token
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Log*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.Log
  name: Log
  nameWithType: RestConsumer.Log
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Log
- uid: Sorted.PRO.SDK.Shared.Interfaces.ILogger
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.ILogger
  parent: Sorted.PRO.SDK.Shared.Interfaces
  name: ILogger
  nameWithType: ILogger
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ILogger
- uid: Sorted.PRO.SDK.Shared.RestConsumer.HttpClientFactory*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.HttpClientFactory
  name: HttpClientFactory
  nameWithType: RestConsumer.HttpClientFactory
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.HttpClientFactory
- uid: Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
  parent: Sorted.PRO.SDK.Shared.Interfaces
  name: IHttpClientFactory
  nameWithType: IHttpClientFactory
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Version*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.Version
  name: Version
  nameWithType: RestConsumer.Version
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Version
- uid: Sorted.PRO.SDK.Shared.RestConsumer.OptionalHeaders*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.OptionalHeaders
  name: OptionalHeaders
  nameWithType: RestConsumer.OptionalHeaders
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.OptionalHeaders
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sorted.PRO.SDK.Shared.RestConsumer
  commentId: T:Sorted.PRO.SDK.Shared.RestConsumer
  name: RestConsumer
  nameWithType: RestConsumer
  fullName: Sorted.PRO.SDK.Shared.RestConsumer
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Sorted.PRO.SDK.Shared.RestConsumer.#ctor*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.#ctor
  name: RestConsumer
  nameWithType: RestConsumer.RestConsumer
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.RestConsumer
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumerConfiguration
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumerConfiguration
  parent: Sorted.PRO.SDK.Shared.Interfaces
  name: IRestConsumerConfiguration
  nameWithType: IRestConsumerConfiguration
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumerConfiguration
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Get*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.Get
  name: Get
  nameWithType: RestConsumer.Get
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Get
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  isExternal: true
  name: Get<T>(String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Get<T>(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Get(Of T)(String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Get(Of T)(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Get<T>
    nameWithType: IRestConsumer.Get<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Get(Of T)
    nameWithType: IRestConsumer.Get(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
  commentId: T:Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
  name: ApiUnauthorizedException
  nameWithType: ApiUnauthorizedException
  fullName: Sorted.PRO.SDK.Shared.Error.ApiUnauthorizedException
- uid: Sorted.PRO.SDK.Shared.Error.ApiException
  commentId: T:Sorted.PRO.SDK.Shared.Error.ApiException
  parent: Sorted.PRO.SDK.Shared.Error
  name: ApiException
  nameWithType: ApiException
  fullName: Sorted.PRO.SDK.Shared.Error.ApiException
- uid: Sorted.PRO.SDK.Shared.RestConsumer.GetAsync*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.GetAsync
  name: GetAsync
  nameWithType: RestConsumer.GetAsync
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.GetAsync
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  isExternal: true
  name: GetAsync<T>(String, Dictionary<String, String>)
  nameWithType: IRestConsumer.GetAsync<T>(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.GetAsync(Of T)(String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: GetAsync(Of T)(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: GetAsync<T>
    nameWithType: IRestConsumer.GetAsync<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: GetAsync(Of T)
    nameWithType: IRestConsumer.GetAsync(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Error
  commentId: N:Sorted.PRO.SDK.Shared.Error
  name: Sorted.PRO.SDK.Shared.Error
  nameWithType: Sorted.PRO.SDK.Shared.Error
  fullName: Sorted.PRO.SDK.Shared.Error
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  isExternal: true
  name: Get(String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Get(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Get(String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Get(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Get
    nameWithType: IRestConsumer.Get
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Get
    nameWithType: IRestConsumer.Get
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  isExternal: true
  name: GetAsync(String, Dictionary<String, String>)
  nameWithType: IRestConsumer.GetAsync(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.GetAsync(String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: GetAsync(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: GetAsync
    nameWithType: IRestConsumer.GetAsync
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: GetAsync
    nameWithType: IRestConsumer.GetAsync
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.GetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Post*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.Post
  name: Post
  nameWithType: RestConsumer.Post
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Post
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: Post<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Post<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Post(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Post(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Post<T, TOut>
    nameWithType: IRestConsumer.Post<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Post(Of T, TOut)
    nameWithType: IRestConsumer.Post(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TOut}'
  commentId: '!:TOut'
  definition: TOut
  name: TOut
  nameWithType: TOut
  fullName: TOut
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: Post<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Post<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Post(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Post(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Post<T, TOut>
    nameWithType: IRestConsumer.Post<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Post(Of T, TOut)
    nameWithType: IRestConsumer.Post(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TOut
  name: TOut
  nameWithType: TOut
  fullName: TOut
- uid: Sorted.PRO.SDK.Shared.RestConsumer.PostAsync*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.PostAsync
  name: PostAsync
  nameWithType: RestConsumer.PostAsync
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.PostAsync
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: PostAsync<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PostAsync<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PostAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PostAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PostAsync<T, TOut>
    nameWithType: IRestConsumer.PostAsync<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PostAsync(Of T, TOut)
    nameWithType: IRestConsumer.PostAsync(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{TOut}}
  commentId: T:System.Threading.Tasks.Task{``1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TOut>
  nameWithType: Task<TOut>
  fullName: System.Threading.Tasks.Task<TOut>
  nameWithType.vb: Task(Of TOut)
  fullName.vb: System.Threading.Tasks.Task(Of TOut)
  name.vb: Task(Of TOut)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: PostAsync<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PostAsync<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PostAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PostAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PostAsync<T, TOut>
    nameWithType: IRestConsumer.PostAsync<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PostAsync(Of T, TOut)
    nameWithType: IRestConsumer.PostAsync(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: Post<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Post<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Post(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Post(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Post<T>
    nameWithType: IRestConsumer.Post<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Post(Of T)
    nameWithType: IRestConsumer.Post(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: Post<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Post<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Post(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Post(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Post<T>
    nameWithType: IRestConsumer.Post<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Post(Of T)
    nameWithType: IRestConsumer.Post(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Post(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: PostAsync<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PostAsync<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PostAsync(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PostAsync(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PostAsync<T>
    nameWithType: IRestConsumer.PostAsync<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PostAsync(Of T)
    nameWithType: IRestConsumer.PostAsync(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: PostAsync<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PostAsync<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PostAsync(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PostAsync(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PostAsync<T>
    nameWithType: IRestConsumer.PostAsync<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PostAsync(Of T)
    nameWithType: IRestConsumer.PostAsync(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PostAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Put*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.Put
  name: Put
  nameWithType: RestConsumer.Put
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Put
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: Put<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Put<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Put(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Put(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Put<T, TOut>
    nameWithType: IRestConsumer.Put<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Put(Of T, TOut)
    nameWithType: IRestConsumer.Put(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: Put<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Put<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Put(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Put(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Put<T, TOut>
    nameWithType: IRestConsumer.Put<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Put(Of T, TOut)
    nameWithType: IRestConsumer.Put(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.RestConsumer.PutAsync*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.PutAsync
  name: PutAsync
  nameWithType: RestConsumer.PutAsync
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.PutAsync
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: PutAsync<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PutAsync<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PutAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PutAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PutAsync<T, TOut>
    nameWithType: IRestConsumer.PutAsync<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PutAsync(Of T, TOut)
    nameWithType: IRestConsumer.PutAsync(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: PutAsync<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PutAsync<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PutAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PutAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PutAsync<T, TOut>
    nameWithType: IRestConsumer.PutAsync<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PutAsync(Of T, TOut)
    nameWithType: IRestConsumer.PutAsync(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: Put<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Put<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Put(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Put(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Put<T>
    nameWithType: IRestConsumer.Put<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Put(Of T)
    nameWithType: IRestConsumer.Put(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: Put<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Put<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Put(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Put(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Put<T>
    nameWithType: IRestConsumer.Put<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Put(Of T)
    nameWithType: IRestConsumer.Put(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Put(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: PutAsync<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PutAsync<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PutAsync(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PutAsync(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PutAsync<T>
    nameWithType: IRestConsumer.PutAsync<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PutAsync(Of T)
    nameWithType: IRestConsumer.PutAsync(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: PutAsync<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PutAsync<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PutAsync(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PutAsync(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PutAsync<T>
    nameWithType: IRestConsumer.PutAsync<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PutAsync(Of T)
    nameWithType: IRestConsumer.PutAsync(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PutAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Patch*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.Patch
  name: Patch
  nameWithType: RestConsumer.Patch
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Patch
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: Patch<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Patch<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Patch(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Patch(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Patch<T, TOut>
    nameWithType: IRestConsumer.Patch<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Patch(Of T, TOut)
    nameWithType: IRestConsumer.Patch(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: Patch<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Patch<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Patch(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Patch(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Patch<T, TOut>
    nameWithType: IRestConsumer.Patch<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Patch(Of T, TOut)
    nameWithType: IRestConsumer.Patch(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync
  name: PatchAsync
  nameWithType: RestConsumer.PatchAsync
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.PatchAsync
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``2({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: PatchAsync<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PatchAsync<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PatchAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PatchAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PatchAsync<T, TOut>
    nameWithType: IRestConsumer.PatchAsync<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PatchAsync(Of T, TOut)
    nameWithType: IRestConsumer.PatchAsync(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: PatchAsync<T, TOut>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PatchAsync<T, TOut>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync<T, TOut>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PatchAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(Of T, TOut)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PatchAsync(Of T, TOut)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PatchAsync<T, TOut>
    nameWithType: IRestConsumer.PatchAsync<T, TOut>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync<T, TOut>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``2(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PatchAsync(Of T, TOut)
    nameWithType: IRestConsumer.PatchAsync(Of T, TOut)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(Of T, TOut)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: Patch<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Patch<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Patch(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Patch(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Patch<T>
    nameWithType: IRestConsumer.Patch<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Patch(Of T)
    nameWithType: IRestConsumer.Patch(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: Patch<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Patch<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Patch(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Patch(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Patch<T>
    nameWithType: IRestConsumer.Patch<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Patch(Of T)
    nameWithType: IRestConsumer.Patch(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``1({T},System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  definition: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  name: PatchAsync<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PatchAsync<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PatchAsync(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PatchAsync(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PatchAsync<T>
    nameWithType: IRestConsumer.PatchAsync<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PatchAsync(Of T)
    nameWithType: IRestConsumer.PatchAsync(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  isExternal: true
  name: PatchAsync<T>(T, String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PatchAsync<T>(T, String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync<T>(T, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PatchAsync(Of T)(T, String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(Of T)(T, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PatchAsync(Of T)(T, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PatchAsync<T>
    nameWithType: IRestConsumer.PatchAsync<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync``1(``0,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PatchAsync(Of T)
    nameWithType: IRestConsumer.PatchAsync(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  isExternal: true
  name: Patch(String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Patch(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Patch(String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Patch(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Patch
    nameWithType: IRestConsumer.Patch
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Patch
    nameWithType: IRestConsumer.Patch
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Patch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  isExternal: true
  name: PatchAsync(String, Dictionary<String, String>)
  nameWithType: IRestConsumer.PatchAsync(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.PatchAsync(String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: PatchAsync(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PatchAsync
    nameWithType: IRestConsumer.PatchAsync
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: PatchAsync
    nameWithType: IRestConsumer.PatchAsync
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.PatchAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.RestConsumer.Delete*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.Delete
  name: Delete
  nameWithType: RestConsumer.Delete
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.Delete
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  isExternal: true
  name: Delete<T>(String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Delete<T>(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Delete(Of T)(String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Delete(Of T)(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Delete<T>
    nameWithType: IRestConsumer.Delete<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Delete(Of T)
    nameWithType: IRestConsumer.Delete(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync
  name: DeleteAsync
  nameWithType: RestConsumer.DeleteAsync
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.DeleteAsync
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  isExternal: true
  name: DeleteAsync<T>(String, Dictionary<String, String>)
  nameWithType: IRestConsumer.DeleteAsync<T>(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync<T>(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.DeleteAsync(Of T)(String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync(Of T)(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: DeleteAsync(Of T)(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: DeleteAsync<T>
    nameWithType: IRestConsumer.DeleteAsync<T>
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: DeleteAsync(Of T)
    nameWithType: IRestConsumer.DeleteAsync(Of T)
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  isExternal: true
  name: Delete(String, Dictionary<String, String>)
  nameWithType: IRestConsumer.Delete(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.Delete(String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Delete(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Delete
    nameWithType: IRestConsumer.Delete
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: Delete
    nameWithType: IRestConsumer.Delete
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  isExternal: true
  name: DeleteAsync(String, Dictionary<String, String>)
  nameWithType: IRestConsumer.DeleteAsync(String, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.DeleteAsync(String, Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: DeleteAsync(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: DeleteAsync
    nameWithType: IRestConsumer.DeleteAsync
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: DeleteAsync
    nameWithType: IRestConsumer.DeleteAsync
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString
  name: BuildQueryString
  nameWithType: RestConsumer.BuildQueryString
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.BuildQueryString
- uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer
  isExternal: true
  name: BuildQueryString(Dictionary<String, String>)
  nameWithType: IRestConsumer.BuildQueryString(Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.BuildQueryString(System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: IRestConsumer.BuildQueryString(Dictionary(Of String, String))
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.BuildQueryString(System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: BuildQueryString(Dictionary(Of String, String))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})
    name: BuildQueryString
    nameWithType: IRestConsumer.BuildQueryString
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.BuildQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})
    name: BuildQueryString
    nameWithType: IRestConsumer.BuildQueryString
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IRestConsumer.BuildQueryString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpMethod
  commentId: T:System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: true
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: Sorted.PRO.SDK.Shared.RestConsumer.ConfigureRequest*
  commentId: Overload:Sorted.PRO.SDK.Shared.RestConsumer.ConfigureRequest
  name: ConfigureRequest
  nameWithType: RestConsumer.ConfigureRequest
  fullName: Sorted.PRO.SDK.Shared.RestConsumer.ConfigureRequest
