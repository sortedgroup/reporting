### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  commentId: T:Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  id: SerializableException
  parent: Sorted.PRO.SDK.Shared.Exceptions
  children:
  - Sorted.PRO.SDK.Shared.Exceptions.SerializableException.#ctor
  - Sorted.PRO.SDK.Shared.Exceptions.SerializableException.#ctor(System.Exception)
  - Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Data
  - Sorted.PRO.SDK.Shared.Exceptions.SerializableException.HelpLink
  - Sorted.PRO.SDK.Shared.Exceptions.SerializableException.InnerException
  - Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Message
  - Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Source
  - Sorted.PRO.SDK.Shared.Exceptions.SerializableException.StackTrace
  langs:
  - csharp
  - vb
  name: SerializableException
  nameWithType: SerializableException
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: SerializableException
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
    startLine: 11
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Exceptions
  summary: "\nA wrapper class for serializing exceptions.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      [DataContractType("SerializableException", "Used to serialize an exception for transport over HTTP.")]

      public class SerializableException
    content.vb: >-
      <Serializable>

      <DataContractType("SerializableException", "Used to serialize an exception for transport over HTTP.")>

      Public Class SerializableException
  inheritance:
  - System.Object
  derivedClasses:
  - Sorted.PRO.SDK.Shared.Exceptions.AccountCreationException
  - Sorted.PRO.SDK.Shared.Exceptions.AccountDisabledException
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: SerializableException
    - type: System.String
      value: Used to serialize an exception for transport over HTTP.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.#ctor
  commentId: M:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.#ctor
  id: '#ctor'
  parent: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  langs:
  - csharp
  - vb
  name: SerializableException()
  nameWithType: SerializableException.SerializableException()
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.SerializableException()
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
    startLine: 31
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Exceptions
  syntax:
    content: public SerializableException()
    content.vb: Public Sub New
  overload: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.#ctor(System.Exception)
  commentId: M:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  langs:
  - csharp
  - vb
  name: SerializableException(Exception)
  nameWithType: SerializableException.SerializableException(Exception)
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.SerializableException(System.Exception)
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
    startLine: 35
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Exceptions
  syntax:
    content: public SerializableException(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(exception As Exception)
  overload: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.HelpLink
  commentId: P:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.HelpLink
  id: HelpLink
  parent: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  langs:
  - csharp
  - vb
  name: HelpLink
  nameWithType: SerializableException.HelpLink
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.HelpLink
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: HelpLink
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
    startLine: 44
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Exceptions
  syntax:
    content: public string HelpLink { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HelpLink As String
  overload: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.HelpLink*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Message
  commentId: P:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Message
  id: Message
  parent: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: SerializableException.Message
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Message
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Message
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
    startLine: 50
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Exceptions
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Source
  commentId: P:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Source
  id: Source
  parent: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: SerializableException.Source
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Source
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Source
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
    startLine: 56
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Exceptions
  syntax:
    content: public string Source { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Source As String
  overload: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Source*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.StackTrace
  commentId: P:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.StackTrace
  id: StackTrace
  parent: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  langs:
  - csharp
  - vb
  name: StackTrace
  nameWithType: SerializableException.StackTrace
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.StackTrace
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: StackTrace
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
    startLine: 62
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Exceptions
  syntax:
    content: public string StackTrace { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StackTrace As String
  overload: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.StackTrace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.InnerException
  commentId: P:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.InnerException
  id: InnerException
  parent: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  langs:
  - csharp
  - vb
  name: InnerException
  nameWithType: SerializableException.InnerException
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.InnerException
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: InnerException
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
    startLine: 68
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Exceptions
  syntax:
    content: public SerializableException InnerException { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
    content.vb: Public Property InnerException As SerializableException
  overload: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.InnerException*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Data
  commentId: P:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Data
  id: Data
  parent: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: SerializableException.Data
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Data
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Data
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Exceptions/SerializableException.cs
    startLine: 74
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Exceptions
  syntax:
    content: public KeyValuePair<object, object>[] Data { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.KeyValuePair{System.Object,System.Object}[]
    content.vb: Public Property Data As KeyValuePair(Of Object, Object)()
  overload: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sorted.PRO.SDK.Shared.Exceptions
  commentId: N:Sorted.PRO.SDK.Shared.Exceptions
  name: Sorted.PRO.SDK.Shared.Exceptions
  nameWithType: Sorted.PRO.SDK.Shared.Exceptions
  fullName: Sorted.PRO.SDK.Shared.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.#ctor*
  commentId: Overload:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.#ctor
  name: SerializableException
  nameWithType: SerializableException.SerializableException
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.SerializableException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.HelpLink*
  commentId: Overload:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.HelpLink
  name: HelpLink
  nameWithType: SerializableException.HelpLink
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.HelpLink
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Message*
  commentId: Overload:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Message
  name: Message
  nameWithType: SerializableException.Message
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Message
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Source*
  commentId: Overload:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Source
  name: Source
  nameWithType: SerializableException.Source
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Source
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.StackTrace*
  commentId: Overload:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.StackTrace
  name: StackTrace
  nameWithType: SerializableException.StackTrace
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.StackTrace
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.InnerException*
  commentId: Overload:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.InnerException
  name: InnerException
  nameWithType: SerializableException.InnerException
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.InnerException
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  commentId: T:Sorted.PRO.SDK.Shared.Exceptions.SerializableException
  parent: Sorted.PRO.SDK.Shared.Exceptions
  name: SerializableException
  nameWithType: SerializableException
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException
- uid: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Data*
  commentId: Overload:Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Data
  name: Data
  nameWithType: SerializableException.Data
  fullName: Sorted.PRO.SDK.Shared.Exceptions.SerializableException.Data
- uid: System.Collections.Generic.KeyValuePair{System.Object,System.Object}[]
  isExternal: true
  name: KeyValuePair<Object, Object>[]
  nameWithType: KeyValuePair<Object, Object>[]
  fullName: System.Collections.Generic.KeyValuePair<System.Object, System.Object>[]
  nameWithType.vb: KeyValuePair(Of Object, Object)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.Object, System.Object)()
  name.vb: KeyValuePair(Of Object, Object)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
