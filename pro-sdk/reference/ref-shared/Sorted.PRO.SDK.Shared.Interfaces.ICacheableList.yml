### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheableList
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.ICacheableList
  id: ICacheableList
  parent: Sorted.PRO.SDK.Shared.Interfaces
  children: []
  langs:
  - csharp
  - vb
  name: ICacheableList
  nameWithType: ICacheableList
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheableList
  type: Interface
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Interfaces/ICacheableList.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ICacheableList
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Interfaces/ICacheableList.cs
    startLine: 19
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Interfaces
  summary: "\nA cacheable list\n"
  example: []
  syntax:
    content: 'public interface ICacheableList : ICacheableList<object>, IList<object>, ICollection<object>, ICacheableEnumerable<object>, ICacheable, ICacheable<object>, IEnumerable<object>, IEnumerable'
    content.vb: >-
      Public Interface ICacheableList
          Inherits ICacheableList(Of Object), ICacheableEnumerable(Of Object)
  seealso:
  - linkId: System.Collections.Generic.IList`1
    commentId: T:System.Collections.Generic.IList`1
  inheritedMembers:
  - System.Collections.Generic.IList{System.Object}.IndexOf(System.Object)
  - System.Collections.Generic.IList{System.Object}.Insert(System.Int32,System.Object)
  - System.Collections.Generic.IList{System.Object}.RemoveAt(System.Int32)
  - System.Collections.Generic.IList{System.Object}.Item(System.Int32)
  - System.Collections.Generic.ICollection{System.Object}.Add(System.Object)
  - System.Collections.Generic.ICollection{System.Object}.Clear
  - System.Collections.Generic.ICollection{System.Object}.Contains(System.Object)
  - System.Collections.Generic.ICollection{System.Object}.CopyTo(System.Object[],System.Int32)
  - System.Collections.Generic.ICollection{System.Object}.Remove(System.Object)
  - System.Collections.Generic.ICollection{System.Object}.Count
  - System.Collections.Generic.ICollection{System.Object}.IsReadOnly
  - Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.DefaultCacheDurationInMinutes
  - Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.CacheDate
  - Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.CacheSource
  - Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.IsCached
  - System.Collections.Generic.IEnumerable{System.Object}.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces
  commentId: N:Sorted.PRO.SDK.Shared.Interfaces
  name: Sorted.PRO.SDK.Shared.Interfaces
  nameWithType: Sorted.PRO.SDK.Shared.Interfaces
  fullName: Sorted.PRO.SDK.Shared.Interfaces
- uid: System.Collections.Generic.IList{System.Object}.IndexOf(System.Object)
  commentId: M:System.Collections.Generic.IList{System.Object}.IndexOf(System.Object)
  parent: System.Collections.Generic.IList{System.Object}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(Object)
  nameWithType: IList<Object>.IndexOf(Object)
  fullName: System.Collections.Generic.IList<System.Object>.IndexOf(System.Object)
  nameWithType.vb: IList(Of Object).IndexOf(Object)
  fullName.vb: System.Collections.Generic.IList(Of System.Object).IndexOf(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<Object>.IndexOf
    fullName: System.Collections.Generic.IList<System.Object>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of Object).IndexOf
    fullName: System.Collections.Generic.IList(Of System.Object).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Object}.Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.IList{System.Object}.Insert(System.Int32,System.Object)
  parent: System.Collections.Generic.IList{System.Object}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, Object)
  nameWithType: IList<Object>.Insert(Int32, Object)
  fullName: System.Collections.Generic.IList<System.Object>.Insert(System.Int32, System.Object)
  nameWithType.vb: IList(Of Object).Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.IList(Of System.Object).Insert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<Object>.Insert
    fullName: System.Collections.Generic.IList<System.Object>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of Object).Insert
    fullName: System.Collections.Generic.IList(Of System.Object).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Object}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{System.Object}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{System.Object}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<Object>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<System.Object>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of Object).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of System.Object).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<Object>.RemoveAt
    fullName: System.Collections.Generic.IList<System.Object>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of Object).RemoveAt
    fullName: System.Collections.Generic.IList(Of System.Object).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Object}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{System.Object}.Item(System.Int32)
  parent: System.Collections.Generic.IList{System.Object}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<Object>.Item[Int32]
  fullName: System.Collections.Generic.IList<System.Object>.Item[System.Int32]
  nameWithType.vb: IList(Of Object).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of System.Object).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<Object>.Item
    fullName: System.Collections.Generic.IList<System.Object>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of Object).Item
    fullName: System.Collections.Generic.IList(Of System.Object).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Object}.Add(System.Object)
  commentId: M:System.Collections.Generic.ICollection{System.Object}.Add(System.Object)
  parent: System.Collections.Generic.ICollection{System.Object}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(Object)
  nameWithType: ICollection<Object>.Add(Object)
  fullName: System.Collections.Generic.ICollection<System.Object>.Add(System.Object)
  nameWithType.vb: ICollection(Of Object).Add(Object)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Object).Add(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<Object>.Add
    fullName: System.Collections.Generic.ICollection<System.Object>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of Object).Add
    fullName: System.Collections.Generic.ICollection(Of System.Object).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Object}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Object}.Clear
  parent: System.Collections.Generic.ICollection{System.Object}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<Object>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Object>.Clear()
  nameWithType.vb: ICollection(Of Object).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of System.Object).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<Object>.Clear
    fullName: System.Collections.Generic.ICollection<System.Object>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of Object).Clear
    fullName: System.Collections.Generic.ICollection(Of System.Object).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Object}.Contains(System.Object)
  commentId: M:System.Collections.Generic.ICollection{System.Object}.Contains(System.Object)
  parent: System.Collections.Generic.ICollection{System.Object}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(Object)
  nameWithType: ICollection<Object>.Contains(Object)
  fullName: System.Collections.Generic.ICollection<System.Object>.Contains(System.Object)
  nameWithType.vb: ICollection(Of Object).Contains(Object)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Object).Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<Object>.Contains
    fullName: System.Collections.Generic.ICollection<System.Object>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of Object).Contains
    fullName: System.Collections.Generic.ICollection(Of System.Object).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Object}.CopyTo(System.Object[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Object}.CopyTo(System.Object[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Object}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(Object[], Int32)
  nameWithType: ICollection<Object>.CopyTo(Object[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Object>.CopyTo(System.Object[], System.Int32)
  nameWithType.vb: ICollection(Of Object).CopyTo(Object(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Object).CopyTo(System.Object(), System.Int32)
  name.vb: CopyTo(Object(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<Object>.CopyTo
    fullName: System.Collections.Generic.ICollection<System.Object>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of Object).CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Object).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Object}.Remove(System.Object)
  commentId: M:System.Collections.Generic.ICollection{System.Object}.Remove(System.Object)
  parent: System.Collections.Generic.ICollection{System.Object}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(Object)
  nameWithType: ICollection<Object>.Remove(Object)
  fullName: System.Collections.Generic.ICollection<System.Object>.Remove(System.Object)
  nameWithType.vb: ICollection(Of Object).Remove(Object)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Object).Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<Object>.Remove
    fullName: System.Collections.Generic.ICollection<System.Object>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of Object).Remove
    fullName: System.Collections.Generic.ICollection(Of System.Object).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Object}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Object}.Count
  parent: System.Collections.Generic.ICollection{System.Object}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<Object>.Count
  fullName: System.Collections.Generic.ICollection<System.Object>.Count
  nameWithType.vb: ICollection(Of Object).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Object).Count
- uid: System.Collections.Generic.ICollection{System.Object}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Object}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Object}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<Object>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Object>.IsReadOnly
  nameWithType.vb: ICollection(Of Object).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Object).IsReadOnly
- uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.DefaultCacheDurationInMinutes
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.DefaultCacheDurationInMinutes
  parent: Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}
  definition: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.DefaultCacheDurationInMinutes
  name: DefaultCacheDurationInMinutes()
  nameWithType: ICacheable<Object>.DefaultCacheDurationInMinutes()
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<System.Object>.DefaultCacheDurationInMinutes()
  nameWithType.vb: ICacheable(Of Object).DefaultCacheDurationInMinutes()
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of System.Object).DefaultCacheDurationInMinutes()
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.DefaultCacheDurationInMinutes
    name: DefaultCacheDurationInMinutes
    nameWithType: ICacheable<Object>.DefaultCacheDurationInMinutes
    fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<System.Object>.DefaultCacheDurationInMinutes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.DefaultCacheDurationInMinutes
    name: DefaultCacheDurationInMinutes
    nameWithType: ICacheable(Of Object).DefaultCacheDurationInMinutes
    fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of System.Object).DefaultCacheDurationInMinutes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.CacheDate
  commentId: P:Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.CacheDate
  parent: Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}
  definition: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.CacheDate
  name: CacheDate
  nameWithType: ICacheable<Object>.CacheDate
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<System.Object>.CacheDate
  nameWithType.vb: ICacheable(Of Object).CacheDate
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of System.Object).CacheDate
- uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.CacheSource
  commentId: P:Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.CacheSource
  parent: Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}
  definition: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.CacheSource
  name: CacheSource
  nameWithType: ICacheable<Object>.CacheSource
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<System.Object>.CacheSource
  nameWithType.vb: ICacheable(Of Object).CacheSource
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of System.Object).CacheSource
- uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.IsCached
  commentId: P:Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}.IsCached
  parent: Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}
  definition: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.IsCached
  name: IsCached
  nameWithType: ICacheable<Object>.IsCached
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<System.Object>.IsCached
  nameWithType.vb: ICacheable(Of Object).IsCached
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of System.Object).IsCached
- uid: System.Collections.Generic.IEnumerable{System.Object}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Object}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Object}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<Object>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of Object).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<Object>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of Object).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Object).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Object}
  commentId: T:System.Collections.Generic.IList{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Object>
  nameWithType: IList<Object>
  fullName: System.Collections.Generic.IList<System.Object>
  nameWithType.vb: IList(Of Object)
  fullName.vb: System.Collections.Generic.IList(Of System.Object)
  name.vb: IList(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Object}
  commentId: T:System.Collections.Generic.ICollection{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Object>
  nameWithType: ICollection<Object>
  fullName: System.Collections.Generic.ICollection<System.Object>
  nameWithType.vb: ICollection(Of Object)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Object)
  name.vb: ICollection(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.DefaultCacheDurationInMinutes
  commentId: M:Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.DefaultCacheDurationInMinutes
  name: DefaultCacheDurationInMinutes()
  nameWithType: ICacheable<T>.DefaultCacheDurationInMinutes()
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<T>.DefaultCacheDurationInMinutes()
  nameWithType.vb: ICacheable(Of T).DefaultCacheDurationInMinutes()
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of T).DefaultCacheDurationInMinutes()
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.DefaultCacheDurationInMinutes
    name: DefaultCacheDurationInMinutes
    nameWithType: ICacheable<T>.DefaultCacheDurationInMinutes
    fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<T>.DefaultCacheDurationInMinutes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.DefaultCacheDurationInMinutes
    name: DefaultCacheDurationInMinutes
    nameWithType: ICacheable(Of T).DefaultCacheDurationInMinutes
    fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of T).DefaultCacheDurationInMinutes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.ICacheable{System.Object}
  parent: Sorted.PRO.SDK.Shared.Interfaces
  definition: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1
  name: ICacheable<Object>
  nameWithType: ICacheable<Object>
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<System.Object>
  nameWithType.vb: ICacheable(Of Object)
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of System.Object)
  name.vb: ICacheable(Of Object)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1
    name: ICacheable
    nameWithType: ICacheable
    fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1
    name: ICacheable
    nameWithType: ICacheable
    fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.CacheDate
  commentId: P:Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.CacheDate
  name: CacheDate
  nameWithType: ICacheable<T>.CacheDate
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<T>.CacheDate
  nameWithType.vb: ICacheable(Of T).CacheDate
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of T).CacheDate
- uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.CacheSource
  commentId: P:Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.CacheSource
  name: CacheSource
  nameWithType: ICacheable<T>.CacheSource
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<T>.CacheSource
  nameWithType.vb: ICacheable(Of T).CacheSource
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of T).CacheSource
- uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.IsCached
  commentId: P:Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1.IsCached
  name: IsCached
  nameWithType: ICacheable<T>.IsCached
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<T>.IsCached
  nameWithType.vb: ICacheable(Of T).IsCached
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of T).IsCached
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1
  name: ICacheable<T>
  nameWithType: ICacheable<T>
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable<T>
  nameWithType.vb: ICacheable(Of T)
  fullName.vb: Sorted.PRO.SDK.Shared.Interfaces.ICacheable(Of T)
  name.vb: ICacheable(Of T)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1
    name: ICacheable
    nameWithType: ICacheable
    fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.Interfaces.ICacheable`1
    name: ICacheable
    nameWithType: ICacheable
    fullName: Sorted.PRO.SDK.Shared.Interfaces.ICacheable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
