### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.Shared.WithMessage
  commentId: T:Sorted.PRO.SDK.Shared.WithMessage
  id: WithMessage
  parent: Sorted.PRO.SDK.Shared
  children:
  - Sorted.PRO.SDK.Shared.WithMessage.Failure``1(``0,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink},System.String)
  - Sorted.PRO.SDK.Shared.WithMessage.Success``1(``0,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink},System.String)
  langs:
  - csharp
  - vb
  name: WithMessage
  nameWithType: WithMessage
  fullName: Sorted.PRO.SDK.Shared.WithMessage
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/WithMessage.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: WithMessage
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/WithMessage.cs
    startLine: 80
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  syntax:
    content: public static class WithMessage
    content.vb: Public Module WithMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sorted.PRO.SDK.Shared.WithMessage.Success``1(``0,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink},System.String)
  commentId: M:Sorted.PRO.SDK.Shared.WithMessage.Success``1(``0,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink},System.String)
  id: Success``1(``0,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink},System.String)
  parent: Sorted.PRO.SDK.Shared.WithMessage
  langs:
  - csharp
  - vb
  name: Success<T>(T, List<ApiLink>, String)
  nameWithType: WithMessage.Success<T>(T, List<ApiLink>, String)
  fullName: Sorted.PRO.SDK.Shared.WithMessage.Success<T>(T, System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.ApiLink>, System.String)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/WithMessage.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Success
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/WithMessage.cs
    startLine: 90
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nSuccesses the specified data.\n"
  example: []
  syntax:
    content: public static WithMessage<T> Success<T>(T data, List<ApiLink> apiLinks, string explanation = null)
    parameters:
    - id: data
      type: '{T}'
      description: The data.
    - id: apiLinks
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}
      description: ''
    - id: explanation
      type: System.String
      description: The explanation.
    typeParameters:
    - id: T
      description: ''
    return:
      type: Sorted.PRO.SDK.Shared.WithMessage{{T}}
      description: ''
    content.vb: Public Shared Function Success(Of T)(data As T, apiLinks As List(Of ApiLink), explanation As String = Nothing) As WithMessage(Of T)
  overload: Sorted.PRO.SDK.Shared.WithMessage.Success*
  nameWithType.vb: WithMessage.Success(Of T)(T, List(Of ApiLink), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sorted.PRO.SDK.Shared.WithMessage.Success(Of T)(T, System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.ApiLink), System.String)
  name.vb: Success(Of T)(T, List(Of ApiLink), String)
- uid: Sorted.PRO.SDK.Shared.WithMessage.Failure``1(``0,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink},System.String)
  commentId: M:Sorted.PRO.SDK.Shared.WithMessage.Failure``1(``0,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink},System.String)
  id: Failure``1(``0,System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink},System.String)
  parent: Sorted.PRO.SDK.Shared.WithMessage
  langs:
  - csharp
  - vb
  name: Failure<T>(T, List<ApiLink>, String)
  nameWithType: WithMessage.Failure<T>(T, List<ApiLink>, String)
  fullName: Sorted.PRO.SDK.Shared.WithMessage.Failure<T>(T, System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.ApiLink>, System.String)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/WithMessage.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Failure
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/WithMessage.cs
    startLine: 103
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared
  summary: "\nFailures the specified data.\n"
  example: []
  syntax:
    content: public static WithMessage<T> Failure<T>(T data, List<ApiLink> apiLinks, string explanation)
    parameters:
    - id: data
      type: '{T}'
      description: The data.
    - id: apiLinks
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}
      description: ''
    - id: explanation
      type: System.String
      description: The explanation.
    typeParameters:
    - id: T
      description: ''
    return:
      type: Sorted.PRO.SDK.Shared.WithMessage{{T}}
      description: ''
    content.vb: Public Shared Function Failure(Of T)(data As T, apiLinks As List(Of ApiLink), explanation As String) As WithMessage(Of T)
  overload: Sorted.PRO.SDK.Shared.WithMessage.Failure*
  nameWithType.vb: WithMessage.Failure(Of T)(T, List(Of ApiLink), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sorted.PRO.SDK.Shared.WithMessage.Failure(Of T)(T, System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.ApiLink), System.String)
  name.vb: Failure(Of T)(T, List(Of ApiLink), String)
references:
- uid: Sorted.PRO.SDK.Shared
  commentId: N:Sorted.PRO.SDK.Shared
  name: Sorted.PRO.SDK.Shared
  nameWithType: Sorted.PRO.SDK.Shared
  fullName: Sorted.PRO.SDK.Shared
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.Shared.WithMessage.Success*
  commentId: Overload:Sorted.PRO.SDK.Shared.WithMessage.Success
  name: Success
  nameWithType: WithMessage.Success
  fullName: Sorted.PRO.SDK.Shared.WithMessage.Success
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ApiLink>
  nameWithType: List<ApiLink>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.ApiLink>
  nameWithType.vb: List(Of ApiLink)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.ApiLink)
  name.vb: List(Of ApiLink)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.ApiLink
    name: ApiLink
    nameWithType: ApiLink
    fullName: Sorted.PRO.SDK.DataTypes.Common.ApiLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.ApiLink
    name: ApiLink
    nameWithType: ApiLink
    fullName: Sorted.PRO.SDK.DataTypes.Common.ApiLink
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.Shared.WithMessage{{T}}
  commentId: T:Sorted.PRO.SDK.Shared.WithMessage{``0}
  parent: Sorted.PRO.SDK.Shared
  definition: Sorted.PRO.SDK.Shared.WithMessage`1
  name: WithMessage<T>
  nameWithType: WithMessage<T>
  fullName: Sorted.PRO.SDK.Shared.WithMessage<T>
  nameWithType.vb: WithMessage(Of T)
  fullName.vb: Sorted.PRO.SDK.Shared.WithMessage(Of T)
  name.vb: WithMessage(Of T)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.WithMessage`1
    name: WithMessage
    nameWithType: WithMessage
    fullName: Sorted.PRO.SDK.Shared.WithMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.WithMessage`1
    name: WithMessage
    nameWithType: WithMessage
    fullName: Sorted.PRO.SDK.Shared.WithMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sorted.PRO.SDK.Shared.WithMessage`1
  commentId: T:Sorted.PRO.SDK.Shared.WithMessage`1
  name: WithMessage<T>
  nameWithType: WithMessage<T>
  fullName: Sorted.PRO.SDK.Shared.WithMessage<T>
  nameWithType.vb: WithMessage(Of T)
  fullName.vb: Sorted.PRO.SDK.Shared.WithMessage(Of T)
  name.vb: WithMessage(Of T)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.WithMessage`1
    name: WithMessage
    nameWithType: WithMessage
    fullName: Sorted.PRO.SDK.Shared.WithMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.WithMessage`1
    name: WithMessage
    nameWithType: WithMessage
    fullName: Sorted.PRO.SDK.Shared.WithMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.WithMessage.Failure*
  commentId: Overload:Sorted.PRO.SDK.Shared.WithMessage.Failure
  name: Failure
  nameWithType: WithMessage.Failure
  fullName: Sorted.PRO.SDK.Shared.WithMessage.Failure
