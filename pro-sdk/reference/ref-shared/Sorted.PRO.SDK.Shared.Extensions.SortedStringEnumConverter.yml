### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter
  commentId: T:Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter
  id: SortedStringEnumConverter
  parent: Sorted.PRO.SDK.Shared.Extensions
  children:
  - Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.#ctor
  - Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.#ctor(System.Boolean)
  - Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.CanConvert(System.Type)
  - Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  - Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  langs:
  - csharp
  - vb
  name: SortedStringEnumConverter
  nameWithType: SortedStringEnumConverter
  fullName: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: SortedStringEnumConverter
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
    startLine: 7
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Extensions
  syntax:
    content: 'public class SortedStringEnumConverter : StringEnumConverter'
    content.vb: >-
      Public Class SortedStringEnumConverter
          Inherits StringEnumConverter
  inheritance:
  - System.Object
  - Newtonsoft.Json.JsonConverter
  - Newtonsoft.Json.Converters.StringEnumConverter
  inheritedMembers:
  - Newtonsoft.Json.Converters.StringEnumConverter.CamelCaseText
  - Newtonsoft.Json.Converters.StringEnumConverter.AllowIntegerValues
  - Newtonsoft.Json.JsonConverter.GetSchema
  - Newtonsoft.Json.JsonConverter.CanRead
  - Newtonsoft.Json.JsonConverter.CanWrite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.#ctor
  commentId: M:Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.#ctor
  id: '#ctor'
  parent: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter
  langs:
  - csharp
  - vb
  name: SortedStringEnumConverter()
  nameWithType: SortedStringEnumConverter.SortedStringEnumConverter()
  fullName: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.SortedStringEnumConverter()
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
    startLine: 9
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Extensions
  syntax:
    content: public SortedStringEnumConverter()
    content.vb: Public Sub New
  overload: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.#ctor(System.Boolean)
  commentId: M:Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter
  langs:
  - csharp
  - vb
  name: SortedStringEnumConverter(Boolean)
  nameWithType: SortedStringEnumConverter.SortedStringEnumConverter(Boolean)
  fullName: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.SortedStringEnumConverter(System.Boolean)
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
    startLine: 14
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Extensions
  syntax:
    content: public SortedStringEnumConverter(bool camelCaseText)
    parameters:
    - id: camelCaseText
      type: System.Boolean
    content.vb: Public Sub New(camelCaseText As Boolean)
  overload: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.CanConvert(System.Type)
  commentId: M:Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.CanConvert(System.Type)
  id: CanConvert(System.Type)
  parent: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter
  langs:
  - csharp
  - vb
  name: CanConvert(Type)
  nameWithType: SortedStringEnumConverter.CanConvert(Type)
  fullName: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.CanConvert(System.Type)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CanConvert
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
    startLine: 18
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Extensions
  syntax:
    content: public override bool CanConvert(Type objectType)
    parameters:
    - id: objectType
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanConvert(objectType As Type) As Boolean
  overridden: Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)
  overload: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.CanConvert*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  id: ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter
  langs:
  - csharp
  - vb
  name: ReadJson(JsonReader, Type, Object, JsonSerializer)
  nameWithType: SortedStringEnumConverter.ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ReadJson
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
    startLine: 41
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Extensions
  summary: "\nReads the JSON representation of the object.\n"
  example: []
  syntax:
    content: public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
      description: The <xref href="Newtonsoft.Json.JsonReader" data-throw-if-not-resolved="false"></xref> to read from.
    - id: objectType
      type: System.Type
      description: Type of the object.
    - id: existingValue
      type: System.Object
      description: The existing value of object being read.
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
      description: The calling serializer.
    return:
      type: System.Object
      description: "\nThe object value.\n"
    content.vb: Public Overrides Function ReadJson(reader As JsonReader, objectType As Type, existingValue As Object, serializer As JsonSerializer) As Object
  overridden: Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  overload: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.ReadJson*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">nullableType</code> is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code data-dev-comment-type="paramref" class="paramref">enumType</code> parameter is not an <xref href="System.Enum" data-throw-if-not-resolved="false"></xref>.
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: <code data-dev-comment-type="paramref" class="paramref">value</code> is outside the range of the underlying type of <code data-dev-comment-type="paramref" class="paramref">enumType</code>.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: <code data-dev-comment-type="paramref" class="paramref">value</code> is not in an appropriate format.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: <code data-dev-comment-type="paramref" class="paramref">value</code> does not implement the  <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface.   -or-   The conversion is not supported.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The method is invoked by reflection in a reflection-only context,   -or-  <code data-dev-comment-type="paramref" class="paramref">enumType</code> is a type from an assembly loaded in a reflection-only context.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  id: WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter
  langs:
  - csharp
  - vb
  name: WriteJson(JsonWriter, Object, JsonSerializer)
  nameWithType: SortedStringEnumConverter.WriteJson(JsonWriter, Object, JsonSerializer)
  fullName: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: WriteJson
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Shared/Extensions/SortedStringEnumConverter.cs
    startLine: 89
  assemblies:
  - Sorted.PRO.SDK.Shared
  namespace: Sorted.PRO.SDK.Shared.Extensions
  syntax:
    content: public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
    - id: value
      type: System.Object
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
    content.vb: Public Overrides Sub WriteJson(writer As JsonWriter, value As Object, serializer As JsonSerializer)
  overridden: Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  overload: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.WriteJson*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Sorted.PRO.SDK.Shared.Extensions
  commentId: N:Sorted.PRO.SDK.Shared.Extensions
  name: Sorted.PRO.SDK.Shared.Extensions
  nameWithType: Sorted.PRO.SDK.Shared.Extensions
  fullName: Sorted.PRO.SDK.Shared.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Newtonsoft.Json.JsonConverter
  commentId: T:Newtonsoft.Json.JsonConverter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonConverter
  nameWithType: JsonConverter
  fullName: Newtonsoft.Json.JsonConverter
- uid: Newtonsoft.Json.Converters.StringEnumConverter
  commentId: T:Newtonsoft.Json.Converters.StringEnumConverter
  parent: Newtonsoft.Json.Converters
  isExternal: true
  name: StringEnumConverter
  nameWithType: StringEnumConverter
  fullName: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Newtonsoft.Json.Converters.StringEnumConverter.CamelCaseText
  commentId: P:Newtonsoft.Json.Converters.StringEnumConverter.CamelCaseText
  parent: Newtonsoft.Json.Converters.StringEnumConverter
  isExternal: true
  name: CamelCaseText
  nameWithType: StringEnumConverter.CamelCaseText
  fullName: Newtonsoft.Json.Converters.StringEnumConverter.CamelCaseText
- uid: Newtonsoft.Json.Converters.StringEnumConverter.AllowIntegerValues
  commentId: P:Newtonsoft.Json.Converters.StringEnumConverter.AllowIntegerValues
  parent: Newtonsoft.Json.Converters.StringEnumConverter
  isExternal: true
  name: AllowIntegerValues
  nameWithType: StringEnumConverter.AllowIntegerValues
  fullName: Newtonsoft.Json.Converters.StringEnumConverter.AllowIntegerValues
- uid: Newtonsoft.Json.JsonConverter.GetSchema
  commentId: M:Newtonsoft.Json.JsonConverter.GetSchema
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: GetSchema()
  nameWithType: JsonConverter.GetSchema()
  fullName: Newtonsoft.Json.JsonConverter.GetSchema()
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.GetSchema
    name: GetSchema
    nameWithType: JsonConverter.GetSchema
    fullName: Newtonsoft.Json.JsonConverter.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.GetSchema
    name: GetSchema
    nameWithType: JsonConverter.GetSchema
    fullName: Newtonsoft.Json.JsonConverter.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.JsonConverter.CanRead
  commentId: P:Newtonsoft.Json.JsonConverter.CanRead
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanRead
  nameWithType: JsonConverter.CanRead
  fullName: Newtonsoft.Json.JsonConverter.CanRead
- uid: Newtonsoft.Json.JsonConverter.CanWrite
  commentId: P:Newtonsoft.Json.JsonConverter.CanWrite
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanWrite
  nameWithType: JsonConverter.CanWrite
  fullName: Newtonsoft.Json.JsonConverter.CanWrite
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: Newtonsoft.Json.Converters
  commentId: N:Newtonsoft.Json.Converters
  isExternal: true
  name: Newtonsoft.Json.Converters
  nameWithType: Newtonsoft.Json.Converters
  fullName: Newtonsoft.Json.Converters
- uid: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.#ctor*
  commentId: Overload:Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.#ctor
  name: SortedStringEnumConverter
  nameWithType: SortedStringEnumConverter.SortedStringEnumConverter
  fullName: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.SortedStringEnumConverter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)
  parent: Newtonsoft.Json.Converters.StringEnumConverter
  isExternal: true
  name: CanConvert(Type)
  nameWithType: StringEnumConverter.CanConvert(Type)
  fullName: Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)
    name: CanConvert
    nameWithType: StringEnumConverter.CanConvert
    fullName: Newtonsoft.Json.Converters.StringEnumConverter.CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)
    name: CanConvert
    nameWithType: StringEnumConverter.CanConvert
    fullName: Newtonsoft.Json.Converters.StringEnumConverter.CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.CanConvert*
  commentId: Overload:Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.CanConvert
  name: CanConvert
  nameWithType: SortedStringEnumConverter.CanConvert
  fullName: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.CanConvert
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: System.Enum
  commentId: T:System.Enum
  isExternal: true
- uid: System.IConvertible
  commentId: T:System.IConvertible
  isExternal: true
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.OverflowException
  commentId: T:System.OverflowException
  isExternal: true
- uid: System.FormatException
  commentId: T:System.FormatException
  isExternal: true
- uid: System.InvalidCastException
  commentId: T:System.InvalidCastException
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.Converters.StringEnumConverter
  isExternal: true
  name: ReadJson(JsonReader, Type, Object, JsonSerializer)
  nameWithType: StringEnumConverter.ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName: Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    nameWithType: StringEnumConverter.ReadJson
    fullName: Newtonsoft.Json.Converters.StringEnumConverter.ReadJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    nameWithType: StringEnumConverter.ReadJson
    fullName: Newtonsoft.Json.Converters.StringEnumConverter.ReadJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.ReadJson*
  commentId: Overload:Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.ReadJson
  name: ReadJson
  nameWithType: SortedStringEnumConverter.ReadJson
  fullName: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.ReadJson
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.Converters.StringEnumConverter
  isExternal: true
  name: WriteJson(JsonWriter, Object, JsonSerializer)
  nameWithType: StringEnumConverter.WriteJson(JsonWriter, Object, JsonSerializer)
  fullName: Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    nameWithType: StringEnumConverter.WriteJson
    fullName: Newtonsoft.Json.Converters.StringEnumConverter.WriteJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    nameWithType: StringEnumConverter.WriteJson
    fullName: Newtonsoft.Json.Converters.StringEnumConverter.WriteJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.WriteJson*
  commentId: Overload:Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.WriteJson
  name: WriteJson
  nameWithType: SortedStringEnumConverter.WriteJson
  fullName: Sorted.PRO.SDK.Shared.Extensions.SortedStringEnumConverter.WriteJson
- uid: Newtonsoft.Json.JsonWriter
  commentId: T:Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
