### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest
  id: MoveItemRequest
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  children:
  - Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.#ctor
  - Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.#ctor(System.String,System.String)
  - Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.ItemReference
  - Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.TargetPackageReference
  langs:
  - csharp
  - vb
  name: MoveItemRequest
  nameWithType: MoveItemRequest
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/MoveItemRequest.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: MoveItemRequest
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/MoveItemRequest.cs
    startLine: 6
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataContract]

      [DataContractType("Move Item Request", "Represents a request to move an item from one package to another.")]

      public class MoveItemRequest
    content.vb: >-
      <DataContract>

      <DataContractType("Move Item Request", "Represents a request to move an item from one package to another.")>

      Public Class MoveItemRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Move Item Request
    - type: System.String
      value: Represents a request to move an item from one package to another.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.#ctor
  commentId: M:Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.#ctor
  id: '#ctor'
  parent: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest
  langs:
  - csharp
  - vb
  name: MoveItemRequest()
  nameWithType: MoveItemRequest.MoveItemRequest()
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.MoveItemRequest()
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/MoveItemRequest.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/MoveItemRequest.cs
    startLine: 11
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: public MoveItemRequest()
    content.vb: Public Sub New
  overload: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.#ctor(System.String,System.String)
  commentId: M:Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest
  langs:
  - csharp
  - vb
  name: MoveItemRequest(String, String)
  nameWithType: MoveItemRequest.MoveItemRequest(String, String)
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.MoveItemRequest(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/MoveItemRequest.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/MoveItemRequest.cs
    startLine: 13
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: public MoveItemRequest(string itemReference, string targetpackageReference)
    parameters:
    - id: itemReference
      type: System.String
    - id: targetpackageReference
      type: System.String
    content.vb: Public Sub New(itemReference As String, targetpackageReference As String)
  overload: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.ItemReference
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.ItemReference
  id: ItemReference
  parent: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest
  langs:
  - csharp
  - vb
  name: ItemReference
  nameWithType: MoveItemRequest.ItemReference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.ItemReference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/MoveItemRequest.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ItemReference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/MoveItemRequest.cs
    startLine: 19
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The item reference to move.", false, PropertyCollectionType.Single)]

      public string ItemReference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("The item reference to move.", False, PropertyCollectionType.Single)>

      Public Property ItemReference As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.ItemReference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The item reference to move.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.TargetPackageReference
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.TargetPackageReference
  id: TargetPackageReference
  parent: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest
  langs:
  - csharp
  - vb
  name: TargetPackageReference
  nameWithType: MoveItemRequest.TargetPackageReference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.TargetPackageReference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/MoveItemRequest.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: TargetPackageReference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/MoveItemRequest.cs
    startLine: 23
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The targer package reference - i.e. the package to move the item to.", false, PropertyCollectionType.Single)]

      public string TargetPackageReference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("The targer package reference - i.e. the package to move the item to.", False, PropertyCollectionType.Single)>

      Public Property TargetPackageReference As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.TargetPackageReference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The targer package reference - i.e. the package to move the item to.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sorted.PRO.SDK.DataTypes.Consignments
  commentId: N:Sorted.PRO.SDK.DataTypes.Consignments
  name: Sorted.PRO.SDK.DataTypes.Consignments
  nameWithType: Sorted.PRO.SDK.DataTypes.Consignments
  fullName: Sorted.PRO.SDK.DataTypes.Consignments
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.#ctor*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.#ctor
  name: MoveItemRequest
  nameWithType: MoveItemRequest.MoveItemRequest
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.MoveItemRequest
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.ItemReference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.ItemReference
  name: ItemReference
  nameWithType: MoveItemRequest.ItemReference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.ItemReference
- uid: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.TargetPackageReference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.TargetPackageReference
  name: TargetPackageReference
  nameWithType: MoveItemRequest.TargetPackageReference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.MoveItemRequest.TargetPackageReference
