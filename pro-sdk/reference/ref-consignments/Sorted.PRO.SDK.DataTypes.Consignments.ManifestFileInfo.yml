### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  id: ManifestFileInfo
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  children:
  - Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.BookingsCount
  - Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.CarrierName
  - Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.Created
  - Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileName
  - Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileNameSentToCarrier
  - Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileStorageContainer
  - Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestReference
  - Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationName
  - Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationReference
  langs:
  - csharp
  - vb
  name: ManifestFileInfo
  nameWithType: ManifestFileInfo
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ManifestFileInfo
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
    startLine: 11
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataContract]

      [DataContractType("Manifest File Info", "Information relating to a manifest file.")]

      public class ManifestFileInfo
    content.vb: >-
      <DataContract>

      <DataContractType("Manifest File Info", "Information relating to a manifest file.")>

      Public Class ManifestFileInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Manifest File Info
    - type: System.String
      value: Information relating to a manifest file.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestReference
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestReference
  id: ManifestReference
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  langs:
  - csharp
  - vb
  name: ManifestReference
  nameWithType: ManifestFileInfo.ManifestReference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestReference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ManifestReference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
    startLine: 16
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The manifest reference.", false, PropertyCollectionType.Single)]

      public string ManifestReference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("The manifest reference.", False, PropertyCollectionType.Single)>

      Public Property ManifestReference As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestReference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The manifest reference.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileStorageContainer
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileStorageContainer
  id: ManifestFileStorageContainer
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  langs:
  - csharp
  - vb
  name: ManifestFileStorageContainer
  nameWithType: ManifestFileInfo.ManifestFileStorageContainer
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileStorageContainer
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ManifestFileStorageContainer
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
    startLine: 20
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The manifest file storage container.", false, PropertyCollectionType.Single)]

      public string ManifestFileStorageContainer { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("The manifest file storage container.", False, PropertyCollectionType.Single)>

      Public Property ManifestFileStorageContainer As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileStorageContainer*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The manifest file storage container.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileName
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileName
  id: ManifestFileName
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  langs:
  - csharp
  - vb
  name: ManifestFileName
  nameWithType: ManifestFileInfo.ManifestFileName
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileName
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ManifestFileName
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
    startLine: 24
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The manifest file name.", false, PropertyCollectionType.Single)]

      public string ManifestFileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("The manifest file name.", False, PropertyCollectionType.Single)>

      Public Property ManifestFileName As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The manifest file name.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationReference
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationReference
  id: ShippingLocationReference
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  langs:
  - csharp
  - vb
  name: ShippingLocationReference
  nameWithType: ManifestFileInfo.ShippingLocationReference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationReference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ShippingLocationReference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
    startLine: 28
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The shipping location reference.", false, PropertyCollectionType.Single)]

      public string ShippingLocationReference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("The shipping location reference.", False, PropertyCollectionType.Single)>

      Public Property ShippingLocationReference As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationReference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The shipping location reference.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationName
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationName
  id: ShippingLocationName
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  langs:
  - csharp
  - vb
  name: ShippingLocationName
  nameWithType: ManifestFileInfo.ShippingLocationName
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationName
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ShippingLocationName
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
    startLine: 32
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The shipping location name", false, PropertyCollectionType.Single)]

      public string ShippingLocationName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("The shipping location name", False, PropertyCollectionType.Single)>

      Public Property ShippingLocationName As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The shipping location name
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.Created
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.Created
  id: Created
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: ManifestFileInfo.Created
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.Created
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Created
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
    startLine: 36
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The date and time that the file was created.", false, PropertyCollectionType.Single)]

      public DateTimeOffset Created { get; set; }
    parameters: []
    return:
      type: System.DateTimeOffset
    content.vb: >-
      <DataMember>

      <DataContractItem("The date and time that the file was created.", False, PropertyCollectionType.Single)>

      Public Property Created As DateTimeOffset
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.Created*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The date and time that the file was created.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.CarrierName
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.CarrierName
  id: CarrierName
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  langs:
  - csharp
  - vb
  name: CarrierName
  nameWithType: ManifestFileInfo.CarrierName
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.CarrierName
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CarrierName
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
    startLine: 51
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The name of the carrier for this file.", false, PropertyCollectionType.Single)]

      public string CarrierName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("The name of the carrier for this file.", False, PropertyCollectionType.Single)>

      Public Property CarrierName As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.CarrierName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The name of the carrier for this file.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.BookingsCount
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.BookingsCount
  id: BookingsCount
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  langs:
  - csharp
  - vb
  name: BookingsCount
  nameWithType: ManifestFileInfo.BookingsCount
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.BookingsCount
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: BookingsCount
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
    startLine: 55
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The number of bookings.", false, PropertyCollectionType.Single)]

      public int BookingsCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      <DataContractItem("The number of bookings.", False, PropertyCollectionType.Single)>

      Public Property BookingsCount As Integer
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.BookingsCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The number of bookings.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileNameSentToCarrier
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileNameSentToCarrier
  id: ManifestFileNameSentToCarrier
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo
  langs:
  - csharp
  - vb
  name: ManifestFileNameSentToCarrier
  nameWithType: ManifestFileInfo.ManifestFileNameSentToCarrier
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileNameSentToCarrier
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ManifestFileNameSentToCarrier
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ManifestFileInfo.cs
    startLine: 59
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The manifest file name sent to the carrier.", false, PropertyCollectionType.Single)]

      public string ManifestFileNameSentToCarrier { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("The manifest file name sent to the carrier.", False, PropertyCollectionType.Single)>

      Public Property ManifestFileNameSentToCarrier As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileNameSentToCarrier*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The manifest file name sent to the carrier.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sorted.PRO.SDK.DataTypes.Consignments
  commentId: N:Sorted.PRO.SDK.DataTypes.Consignments
  name: Sorted.PRO.SDK.DataTypes.Consignments
  nameWithType: Sorted.PRO.SDK.DataTypes.Consignments
  fullName: Sorted.PRO.SDK.DataTypes.Consignments
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestReference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestReference
  name: ManifestReference
  nameWithType: ManifestFileInfo.ManifestReference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileStorageContainer*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileStorageContainer
  name: ManifestFileStorageContainer
  nameWithType: ManifestFileInfo.ManifestFileStorageContainer
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileStorageContainer
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileName*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileName
  name: ManifestFileName
  nameWithType: ManifestFileInfo.ManifestFileName
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileName
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationReference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationReference
  name: ShippingLocationReference
  nameWithType: ManifestFileInfo.ShippingLocationReference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationReference
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationName*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationName
  name: ShippingLocationName
  nameWithType: ManifestFileInfo.ShippingLocationName
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ShippingLocationName
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.Created*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.Created
  name: Created
  nameWithType: ManifestFileInfo.Created
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.Created
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.CarrierName*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.CarrierName
  name: CarrierName
  nameWithType: ManifestFileInfo.CarrierName
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.CarrierName
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.BookingsCount*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.BookingsCount
  name: BookingsCount
  nameWithType: ManifestFileInfo.BookingsCount
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.BookingsCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileNameSentToCarrier*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileNameSentToCarrier
  name: ManifestFileNameSentToCarrier
  nameWithType: ManifestFileInfo.ManifestFileNameSentToCarrier
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ManifestFileInfo.ManifestFileNameSentToCarrier
