### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  id: ConsignmentBase
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  children:
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.#ctor
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight
  langs:
  - csharp
  - vb
  name: ConsignmentBase
  nameWithType: ConsignmentBase
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ConsignmentBase
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 17
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nBase for Consignments\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public abstract class ConsignmentBase
    content.vb: >-
      <DataContract>

      Public MustInherit Class ConsignmentBase
  inheritance:
  - System.Object
  derivedClasses:
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.#ctor
  commentId: M:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.#ctor
  id: '#ctor'
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: ConsignmentBase()
  nameWithType: ConsignmentBase.ConsignmentBase()
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentBase()
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 24
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nInitializes a new instance of the <xref href=\"Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected ConsignmentBase()
    content.vb: Protected Sub New
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated
  id: DateCreated
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: DateCreated
  nameWithType: ConsignmentBase.DateCreated
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DateCreated
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 37
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the date created.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 3)]

      [DataContractItem("The creation date.", true, PropertyCollectionType.Single)]

      public DateTimeOffset DateCreated { get; set; }
    parameters: []
    return:
      type: System.DateTimeOffset
      description: "\nThe date created.\n"
    content.vb: >-
      <DataMember(Order:=3)>

      <DataContractItem("The creation date.", True, PropertyCollectionType.Single)>

      Public Property DateCreated As DateTimeOffset
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 3
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The creation date.
    - type: System.Boolean
      value: true
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate
  id: RequestedDeliveryDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: RequestedDeliveryDate
  nameWithType: ConsignmentBase.RequestedDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: RequestedDeliveryDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 59
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the requested delivery date.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 5)]

      [DataContractItem("The requested delivery date", false, PropertyCollectionType.Single)]

      public RequestedDeliveryDate RequestedDeliveryDate { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Consignments.RequestedDeliveryDate
      description: "\nThe requested delivery date.\n"
    content.vb: >-
      <DataMember(Order:=5)>

      <DataContractItem("The requested delivery date", False, PropertyCollectionType.Single)>

      Public Property RequestedDeliveryDate As RequestedDeliveryDate
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 5
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The requested delivery date
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate
  id: ShippingDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: ShippingDate
  nameWithType: ConsignmentBase.ShippingDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ShippingDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 70
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the shipping date.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 4)]

      [DataContractItem("The date that the consignment will be shipped", false, PropertyCollectionType.Single)]

      public DateTimeOffset? ShippingDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\nThe shipping date.\n"
    content.vb: >-
      <DataMember(Order:=4)>

      <DataContractItem("The date that the consignment will be shipped", False, PropertyCollectionType.Single)>

      Public Property ShippingDate As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 4
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The date that the consignment will be shipped
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate
  id: EarliestDeliveryDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: EarliestDeliveryDate
  nameWithType: ConsignmentBase.EarliestDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: EarliestDeliveryDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 92
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the earliest delivery date on which the carrier will deliver the \nconsignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 6)]

      [DataContractItem("The earliest date by which the consignment will be delivered", false, PropertyCollectionType.Single)]

      public DateTimeOffset? EarliestDeliveryDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\nThe earliest delivery date.\n"
    content.vb: >-
      <DataMember(Order:=6)>

      <DataContractItem("The earliest date by which the consignment will be delivered", False, PropertyCollectionType.Single)>

      Public Property EarliestDeliveryDate As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 6
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The earliest date by which the consignment will be delivered
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate
  id: LatestDeliveryDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: LatestDeliveryDate
  nameWithType: ConsignmentBase.LatestDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: LatestDeliveryDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 114
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the latest delivery date on which the carrier\nwill deliver the consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 7)]

      [DataContractItem("The latest date by which the consignment will be delivered.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? LatestDeliveryDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\nThe latest delivery date.\n"
    content.vb: >-
      <DataMember(Order:=7)>

      <DataContractItem("The latest date by which the consignment will be delivered.", False, PropertyCollectionType.Single)>

      Public Property LatestDeliveryDate As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 7
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The latest date by which the consignment will be delivered.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference
  id: CustomerReference
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: CustomerReference
  nameWithType: ConsignmentBase.CustomerReference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CustomerReference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 135
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the customer reference.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The reference of the customer to which the consignment belongs.", false, PropertyCollectionType.Single)]

      public Guid CustomerReference { get; set; }
    parameters: []
    return:
      type: System.Guid
      description: "\nThe customer reference.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The reference of the customer to which the consignment belongs.", False, PropertyCollectionType.Single)>

      Public Property CustomerReference As Guid
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The reference of the customer to which the consignment belongs.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer
  id: ConsignmentReferenceProvidedByCustomer
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: ConsignmentReferenceProvidedByCustomer
  nameWithType: ConsignmentBase.ConsignmentReferenceProvidedByCustomer
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ConsignmentReferenceProvidedByCustomer
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 145
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the consignment reference provided by customer.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 8)]

      [DataContractItem("Your reference for this consignment.", false, PropertyCollectionType.Single)]

      public string ConsignmentReferenceProvidedByCustomer { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe consignment reference provided by customer.\n"
    content.vb: >-
      <DataMember(Order:=8)>

      <DataContractItem("Your reference for this consignment.", False, PropertyCollectionType.Single)>

      Public Property ConsignmentReferenceProvidedByCustomer As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 8
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: Your reference for this consignment.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference
  id: Reference
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: Reference
  nameWithType: ConsignmentBase.Reference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Reference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 155
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the Electio reference (EC-xxx-xxx-xxx).\n"
  example: []
  syntax:
    content: public abstract string Reference { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe reference.\n"
    content.vb: Public MustOverride Property Reference As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight
  id: Weight
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: Weight
  nameWithType: ConsignmentBase.Weight
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Weight
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 166
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the weight of the consignment -\nthe total weight of all of the packages within the\nconsignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The weight of the consignment.", false, PropertyCollectionType.Single)]

      public Weight Weight { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Common.Weight
      description: "\nThe weight.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The weight of the consignment.", False, PropertyCollectionType.Single)>

      Public Property Weight As Weight
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The weight of the consignment.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value
  id: Value
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ConsignmentBase.Value
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Value
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 176
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the monetary value of the consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The value of the consignment.", false, PropertyCollectionType.Single)]

      public Money Value { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Common.Money
      description: "\nThe value.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The value of the consignment.", False, PropertyCollectionType.Single)>

      Public Property Value As Money
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The value of the consignment.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation
  id: CustomsDocumentation
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: CustomsDocumentation
  nameWithType: ConsignmentBase.CustomsDocumentation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CustomsDocumentation
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 183
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nHolds extra information as required for custom declaration documentation\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("Optional customs documentation information.", false, PropertyCollectionType.Single)]

      public CustomsDocumentation CustomsDocumentation { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Consignments.CustomsDocumentation
    content.vb: >-
      <DataMember>

      <DataContractItem("Optional customs documentation information.", False, PropertyCollectionType.Single)>

      Public Property CustomsDocumentation As CustomsDocumentation
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: Optional customs documentation information.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses
  id: Addresses
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: Addresses
  nameWithType: ConsignmentBase.Addresses
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Addresses
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 190
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nConsignment addresses attached to this consignment\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 9)]

      [DataContractItem("The addresses for this consignment. Must include 'origin' and 'destination' addresses as a minimum.", false, PropertyCollectionType.Single)]

      public List<Address> Addresses { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Consignments.Address}
    content.vb: >-
      <DataMember(Order:=9)>

      <DataContractItem("The addresses for this consignment. Must include 'origin' and 'destination' addresses as a minimum.", False, PropertyCollectionType.Single)>

      Public Property Addresses As List(Of Address)
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 9
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The addresses for this consignment. Must include 'origin' and 'destination' addresses as a minimum.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction
  id: Direction
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: ConsignmentBase.Direction
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Direction
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 197
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nDirection of travel of this consignment\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The direction of the consignment.", false, PropertyCollectionType.Single)]

      [JsonConverter(typeof(StringEnumConverter))]

      public ConsignmentDirection Direction { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Consignments.Enums.ConsignmentDirection
    content.vb: >-
      <DataMember>

      <DataContractItem("The direction of the consignment.", False, PropertyCollectionType.Single)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property Direction As ConsignmentDirection
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The direction of the consignment.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags
  id: Tags
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: ConsignmentBase.Tags
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Tags
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/ConsignmentBase.cs
    startLine: 205
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nlist of tags which if set will be used to filter out carrierservices without matching tags\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The tags for this consignment", false, PropertyCollectionType.Single)]

      public List<string> Tags { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <DataMember>

      <DataContractItem("The tags for this consignment", False, PropertyCollectionType.Single)>

      Public Property Tags As List(Of String)
  overload: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The tags for this consignment
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sorted.PRO.SDK.DataTypes.Consignments
  commentId: N:Sorted.PRO.SDK.DataTypes.Consignments
  name: Sorted.PRO.SDK.DataTypes.Consignments
  nameWithType: Sorted.PRO.SDK.DataTypes.Consignments
  fullName: Sorted.PRO.SDK.DataTypes.Consignments
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  name: ConsignmentBase
  nameWithType: ConsignmentBase
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.#ctor*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.#ctor
  name: ConsignmentBase
  nameWithType: ConsignmentBase.ConsignmentBase
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentBase
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated
  name: DateCreated
  nameWithType: ConsignmentBase.DateCreated
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate
  name: RequestedDeliveryDate
  nameWithType: ConsignmentBase.RequestedDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate
- uid: Sorted.PRO.SDK.DataTypes.Consignments.RequestedDeliveryDate
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.RequestedDeliveryDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  name: RequestedDeliveryDate
  nameWithType: RequestedDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.RequestedDeliveryDate
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate
  name: ShippingDate
  nameWithType: ConsignmentBase.ShippingDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate
  name: EarliestDeliveryDate
  nameWithType: ConsignmentBase.EarliestDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate
  name: LatestDeliveryDate
  nameWithType: ConsignmentBase.LatestDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference
  name: CustomerReference
  nameWithType: ConsignmentBase.CustomerReference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer
  name: ConsignmentReferenceProvidedByCustomer
  nameWithType: ConsignmentBase.ConsignmentReferenceProvidedByCustomer
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference
  name: Reference
  nameWithType: ConsignmentBase.Reference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight
  name: Weight
  nameWithType: ConsignmentBase.Weight
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight
- uid: Sorted.PRO.SDK.DataTypes.Common.Weight
  commentId: T:Sorted.PRO.SDK.DataTypes.Common.Weight
  parent: Sorted.PRO.SDK.DataTypes.Common
  name: Weight
  nameWithType: Weight
  fullName: Sorted.PRO.SDK.DataTypes.Common.Weight
- uid: Sorted.PRO.SDK.DataTypes.Common
  commentId: N:Sorted.PRO.SDK.DataTypes.Common
  name: Sorted.PRO.SDK.DataTypes.Common
  nameWithType: Sorted.PRO.SDK.DataTypes.Common
  fullName: Sorted.PRO.SDK.DataTypes.Common
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value
  name: Value
  nameWithType: ConsignmentBase.Value
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value
- uid: Sorted.PRO.SDK.DataTypes.Common.Money
  commentId: T:Sorted.PRO.SDK.DataTypes.Common.Money
  parent: Sorted.PRO.SDK.DataTypes.Common
  name: Money
  nameWithType: Money
  fullName: Sorted.PRO.SDK.DataTypes.Common.Money
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation
  name: CustomsDocumentation
  nameWithType: ConsignmentBase.CustomsDocumentation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation
- uid: Sorted.PRO.SDK.DataTypes.Consignments.CustomsDocumentation
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.CustomsDocumentation
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  name: CustomsDocumentation
  nameWithType: CustomsDocumentation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.CustomsDocumentation
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses
  name: Addresses
  nameWithType: ConsignmentBase.Addresses
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Consignments.Address}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Consignments.Address}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Address>
  nameWithType: List<Address>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Consignments.Address>
  nameWithType.vb: List(Of Address)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Consignments.Address)
  name.vb: List(Of Address)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Consignments.Address
    name: Address
    nameWithType: Address
    fullName: Sorted.PRO.SDK.DataTypes.Consignments.Address
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Consignments.Address
    name: Address
    nameWithType: Address
    fullName: Sorted.PRO.SDK.DataTypes.Consignments.Address
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction
  name: Direction
  nameWithType: ConsignmentBase.Direction
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Enums.ConsignmentDirection
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.Enums.ConsignmentDirection
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Enums
  name: ConsignmentDirection
  nameWithType: ConsignmentDirection
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Enums.ConsignmentDirection
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Enums
  commentId: N:Sorted.PRO.SDK.DataTypes.Consignments.Enums
  name: Sorted.PRO.SDK.DataTypes.Consignments.Enums
  nameWithType: Sorted.PRO.SDK.DataTypes.Consignments.Enums
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Enums
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags
  name: Tags
  nameWithType: ConsignmentBase.Tags
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
