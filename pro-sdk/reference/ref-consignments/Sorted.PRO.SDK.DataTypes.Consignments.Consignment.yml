### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  id: Consignment
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  children:
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Allocation
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.AttemptedDeliveryDate
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.CollectionDate
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentLegs
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentState
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateCollected
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateDelivered
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateLabelsWereFirstPrinted
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateReturned
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateShipped
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FailedAllocation
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FirstAttemptedDeliveryDate
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsLate
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsUnAllocated
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelCount
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelsPrinted
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LateForCustomer
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LocationInformation
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.MetaData
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Packages
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Reference
  - Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Source
  langs:
  - csharp
  - vb
  name: Consignment
  nameWithType: Consignment
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Consignment
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 19
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nRepresents a Consignment - a collection of one or more packages\ntransiting together from the same origin to the same destination via the same carrier\nat the same time.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      [DataContractType("Consignment", "Details of an existing consignment")]

      public sealed class Consignment : ConsignmentBase
    content.vb: >-
      <DataContract>

      <DataContractType("Consignment", "Details of an existing consignment")>

      Public NotInheritable Class Consignment
          Inherits ConsignmentBase
  seealso:
  - linkId: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
    commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  inheritance:
  - System.Object
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  inheritedMembers:
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction
  - Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Consignment
    - type: System.String
      value: Details of an existing consignment
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentLegs
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentLegs
  id: ConsignmentLegs
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: ConsignmentLegs
  nameWithType: Consignment.ConsignmentLegs
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentLegs
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ConsignmentLegs
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 35
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the consignment legs - the stages\nof the journey between origin and destination.\n\nA journey can consist of multiple legs when more than\none carrier is responsible for the delivery of the consignment from\nit&apos;s origin to destination.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("Details of the stages of the journey between origin and destination", PropertyCollectionType.Collection)]

      public List<ConsignmentLeg> ConsignmentLegs { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentLeg}
      description: "\nThe consignment legs.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("Details of the stages of the journey between origin and destination", PropertyCollectionType.Collection)>

      Public Property ConsignmentLegs As List(Of ConsignmentLeg)
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentLegs*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: Details of the stages of the journey between origin and destination
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.CollectionDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.CollectionDate
  id: CollectionDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: CollectionDate
  nameWithType: Consignment.CollectionDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.CollectionDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CollectionDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 45
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the date on which the carrier will collect the consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The date of collection, if applicable.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? CollectionDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\nThe collection date.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The date of collection, if applicable.", False, PropertyCollectionType.Single)>

      Public Property CollectionDate As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.CollectionDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The date of collection, if applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateDelivered
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateDelivered
  id: DateDelivered
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: DateDelivered
  nameWithType: Consignment.DateDelivered
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateDelivered
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DateDelivered
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 55
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the date on which the consignment was delivered.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The date on which the consignment was delivered, if applicable.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? DateDelivered { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\nThe date delivered.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The date on which the consignment was delivered, if applicable.", False, PropertyCollectionType.Single)>

      Public Property DateDelivered As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateDelivered*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The date on which the consignment was delivered, if applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FirstAttemptedDeliveryDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FirstAttemptedDeliveryDate
  id: FirstAttemptedDeliveryDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: FirstAttemptedDeliveryDate
  nameWithType: Consignment.FirstAttemptedDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FirstAttemptedDeliveryDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: FirstAttemptedDeliveryDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 66
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the date on which the consignment was\nfirst attempted to be delivered by the carrier.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The date on which the first attempt of delivery was made, if applicable.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? FirstAttemptedDeliveryDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\nThe first attempted delivery date.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The date on which the first attempt of delivery was made, if applicable.", False, PropertyCollectionType.Single)>

      Public Property FirstAttemptedDeliveryDate As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FirstAttemptedDeliveryDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The date on which the first attempt of delivery was made, if applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateReturned
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateReturned
  id: DateReturned
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: DateReturned
  nameWithType: Consignment.DateReturned
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateReturned
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DateReturned
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 70
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The date that the consignment was returned, if applicable.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? DateReturned { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: >-
      <DataMember>

      <DataContractItem("The date that the consignment was returned, if applicable.", False, PropertyCollectionType.Single)>

      Public Property DateReturned As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateReturned*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The date that the consignment was returned, if applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateShipped
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateShipped
  id: DateShipped
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: DateShipped
  nameWithType: Consignment.DateShipped
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateShipped
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DateShipped
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 74
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The date that the consignment was shipped, if applicable.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? DateShipped { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: >-
      <DataMember>

      <DataContractItem("The date that the consignment was shipped, if applicable.", False, PropertyCollectionType.Single)>

      Public Property DateShipped As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateShipped*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The date that the consignment was shipped, if applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateCollected
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateCollected
  id: DateCollected
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: DateCollected
  nameWithType: Consignment.DateCollected
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateCollected
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DateCollected
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 78
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The date that the consignment was collected, if applicable.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? DateCollected { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: >-
      <DataMember>

      <DataContractItem("The date that the consignment was collected, if applicable.", False, PropertyCollectionType.Single)>

      Public Property DateCollected As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateCollected*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The date that the consignment was collected, if applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.AttemptedDeliveryDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.AttemptedDeliveryDate
  id: AttemptedDeliveryDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: AttemptedDeliveryDate
  nameWithType: Consignment.AttemptedDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.AttemptedDeliveryDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: AttemptedDeliveryDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 82
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The most recent attempted delivery date, if applicable.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? AttemptedDeliveryDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: >-
      <DataMember>

      <DataContractItem("The most recent attempted delivery date, if applicable.", False, PropertyCollectionType.Single)>

      Public Property AttemptedDeliveryDate As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.AttemptedDeliveryDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The most recent attempted delivery date, if applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.MetaData
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.MetaData
  id: MetaData
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: MetaData
  nameWithType: Consignment.MetaData
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.MetaData
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: MetaData
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 92
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the meta data.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]

      [DataContractItem("The metadata for this consignment.", PropertyCollectionType.Collection)]

      public List<MetaData> MetaData { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.MetaData}
      description: "\nThe meta data.\n"
    content.vb: >-
      <DataMember>

      <JsonProperty(NullValueHandling:=NullValueHandling.Ignore)>

      <DataContractItem("The metadata for this consignment.", PropertyCollectionType.Collection)>

      Public Property MetaData As List(Of MetaData)
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.MetaData*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The metadata for this consignment.
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Packages
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Packages
  id: Packages
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: Packages
  nameWithType: Consignment.Packages
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Packages
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Packages
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 104
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the collection of packages\nwithin the consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 10)]

      [DataContractItem("The packages in this consignment. A consignment must contain one or more packages.", PropertyCollectionType.Collection)]

      public List<Package> Packages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Consignments.Package}
      description: "\nThe packages.\n"
    content.vb: >-
      <DataMember(Order:=10)>

      <DataContractItem("The packages in this consignment. A consignment must contain one or more packages.", PropertyCollectionType.Collection)>

      Public Property Packages As List(Of Package)
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Packages*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 10
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The packages in this consignment. A consignment must contain one or more packages.
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Allocation
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Allocation
  id: Allocation
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: Allocation
  nameWithType: Consignment.Allocation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Allocation
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Allocation
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 114
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the allocation.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("Details of the service allocation, if applicable.", false, PropertyCollectionType.Single)]

      public Allocation Allocation { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Consignments.Allocation
      description: "\nThe allocation.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("Details of the service allocation, if applicable.", False, PropertyCollectionType.Single)>

      Public Property Allocation As Allocation
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Allocation*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: Details of the service allocation, if applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FailedAllocation
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FailedAllocation
  id: FailedAllocation
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: FailedAllocation
  nameWithType: Consignment.FailedAllocation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FailedAllocation
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: FailedAllocation
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 124
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the failed allocation.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("Details of failed allocation, if applicable.", false, PropertyCollectionType.Single)]

      public FailedAllocation FailedAllocation { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Consignments.FailedAllocation
      description: "\nThe failed allocation.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("Details of failed allocation, if applicable.", False, PropertyCollectionType.Single)>

      Public Property FailedAllocation As FailedAllocation
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FailedAllocation*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: Details of failed allocation, if applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentState
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentState
  id: ConsignmentState
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: ConsignmentState
  nameWithType: Consignment.ConsignmentState
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentState
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ConsignmentState
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 134
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the state of the consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 2)]

      [JsonConverter(typeof(StringEnumConverter))]

      [DataContractItem("The current state of this consignment, e.g. Unallocated, Delivered", false, PropertyCollectionType.Single)]

      public ConsignmentState ConsignmentState { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Consignments.Enums.ConsignmentState
      description: "\nThe state of the consignment.\n"
    content.vb: >-
      <DataMember(Order:=2)>

      <JsonConverter(GetType(StringEnumConverter))>

      <DataContractItem("The current state of this consignment, e.g. Unallocated, Delivered", False, PropertyCollectionType.Single)>

      Public Property ConsignmentState As ConsignmentState
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentState*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 2
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The current state of this consignment, e.g. Unallocated, Delivered
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Source
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Source
  id: Source
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: Consignment.Source
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Source
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Source
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 147
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the source of creation \nof the consignment - either via the Electio website\nor via the Api.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The source of this consignment, e.g. API for consignments created using the Electio API.", false, PropertyCollectionType.Single)]

      public string Source { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe source.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The source of this consignment, e.g. API for consignments created using the Electio API.", False, PropertyCollectionType.Single)>

      Public Property Source As String
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Source*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The source of this consignment, e.g. API for consignments created using the Electio API.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelCount
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelCount
  id: LabelCount
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: LabelCount
  nameWithType: Consignment.LabelCount
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelCount
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: LabelCount
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 158
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the count of the number of shipping labels\nassociated with the consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The number of shipping labels associated with this consignment.", false, PropertyCollectionType.Single)]

      public int LabelCount { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe label count.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The number of shipping labels associated with this consignment.", False, PropertyCollectionType.Single)>

      Public Property LabelCount As Integer
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelCount*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The number of shipping labels associated with this consignment.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsUnAllocated
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsUnAllocated
  id: IsUnAllocated
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: IsUnAllocated
  nameWithType: Consignment.IsUnAllocated
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsUnAllocated
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: IsUnAllocated
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 169
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nReturns true if the consignment has not yet been allocated \nsuccessfully with a Carrier Service.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This property can be derived")]

      [JsonIgnore]

      [DataMember]

      public bool IsUnAllocated { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is un allocated; otherwise, <code>false</code>.\n"
    content.vb: >-
      <Obsolete("This property can be derived")>

      <JsonIgnore>

      <DataMember>

      Public ReadOnly Property IsUnAllocated As Boolean
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsUnAllocated*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This property can be derived
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelsPrinted
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelsPrinted
  id: LabelsPrinted
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: LabelsPrinted
  nameWithType: Consignment.LabelsPrinted
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelsPrinted
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: LabelsPrinted
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 196
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets a value indicating whether the labels have been printed for the Consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("Indicates whether labels have been printed.", false, PropertyCollectionType.Single)]

      public bool LabelsPrinted { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if labels have been printed otherwise, <code>false</code>.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("Indicates whether labels have been printed.", False, PropertyCollectionType.Single)>

      Public Property LabelsPrinted As Boolean
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelsPrinted*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: Indicates whether labels have been printed.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateLabelsWereFirstPrinted
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateLabelsWereFirstPrinted
  id: DateLabelsWereFirstPrinted
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: DateLabelsWereFirstPrinted
  nameWithType: Consignment.DateLabelsWereFirstPrinted
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateLabelsWereFirstPrinted
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DateLabelsWereFirstPrinted
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 206
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the date labels were first printed.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The date and time that labels were first printed, if applicable.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? DateLabelsWereFirstPrinted { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\nThe date labels were first printed.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The date and time that labels were first printed, if applicable.", False, PropertyCollectionType.Single)>

      Public Property DateLabelsWereFirstPrinted As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateLabelsWereFirstPrinted*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The date and time that labels were first printed, if applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsLate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsLate
  id: IsLate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: IsLate
  nameWithType: Consignment.IsLate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsLate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: IsLate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 216
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets a value indicating whether this instance is late.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("Indicates whether this consignment is considered to be late.", false, PropertyCollectionType.Single)]

      public bool IsLate { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is late; otherwise, <code>false</code>.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("Indicates whether this consignment is considered to be late.", False, PropertyCollectionType.Single)>

      Public Property IsLate As Boolean
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsLate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: Indicates whether this consignment is considered to be late.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LateForCustomer
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LateForCustomer
  id: LateForCustomer
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: LateForCustomer
  nameWithType: Consignment.LateForCustomer
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LateForCustomer
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: LateForCustomer
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 223
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nIndicates whether the consignment is late from the perspective of the customer\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("Indicates whether this consignment is considered late from the customer perspective.", false, PropertyCollectionType.Single)]

      public bool LateForCustomer { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      <DataContractItem("Indicates whether this consignment is considered late from the customer perspective.", False, PropertyCollectionType.Single)>

      Public Property LateForCustomer As Boolean
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LateForCustomer*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: Indicates whether this consignment is considered late from the customer perspective.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Reference
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Reference
  id: Reference
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: Reference
  nameWithType: Consignment.Reference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Reference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Reference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 233
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nGets or sets the Electio reference (EC-xxx-xxx-xxx).\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 1)]

      [DataContractItem("The reference of this consignment, e.g. EC-000-000-1AA", false, PropertyCollectionType.Single)]

      public override string Reference { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe reference.\n"
    content.vb: >-
      <DataMember(Order:=1)>

      <DataContractItem("The reference of this consignment, e.g. EC-000-000-1AA", False, PropertyCollectionType.Single)>

      Public Overrides Property Reference As String
  overridden: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Reference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 1
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The reference of this consignment, e.g. EC-000-000-1AA
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LocationInformation
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LocationInformation
  id: LocationInformation
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Consignment
  langs:
  - csharp
  - vb
  name: LocationInformation
  nameWithType: Consignment.LocationInformation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LocationInformation
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: LocationInformation
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/Consignment.cs
    startLine: 243
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nProvides details of the selected pick up location\n<remarks>\nThis property is only applicable when a pick up location has been selected\n</remarks>\n"
  example: []
  syntax:
    content: >-
      [DataContractItem("Details of the pick up location for this consignment, if applicable.", false, PropertyCollectionType.Single)]

      public LocationInformation LocationInformation { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Consignments.LocationInformation
    content.vb: >-
      <DataContractItem("Details of the pick up location for this consignment, if applicable.", False, PropertyCollectionType.Single)>

      Public Property LocationInformation As LocationInformation
  overload: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LocationInformation*
  attributes:
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: Details of the pick up location for this consignment, if applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  name: ConsignmentBase
  nameWithType: ConsignmentBase
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
- uid: Sorted.PRO.SDK.DataTypes.Consignments
  commentId: N:Sorted.PRO.SDK.DataTypes.Consignments
  name: Sorted.PRO.SDK.DataTypes.Consignments
  nameWithType: Sorted.PRO.SDK.DataTypes.Consignments
  fullName: Sorted.PRO.SDK.DataTypes.Consignments
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: DateCreated
  nameWithType: ConsignmentBase.DateCreated
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.DateCreated
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: RequestedDeliveryDate
  nameWithType: ConsignmentBase.RequestedDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.RequestedDeliveryDate
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: ShippingDate
  nameWithType: ConsignmentBase.ShippingDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ShippingDate
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: EarliestDeliveryDate
  nameWithType: ConsignmentBase.EarliestDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.EarliestDeliveryDate
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: LatestDeliveryDate
  nameWithType: ConsignmentBase.LatestDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.LatestDeliveryDate
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: CustomerReference
  nameWithType: ConsignmentBase.CustomerReference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomerReference
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: ConsignmentReferenceProvidedByCustomer
  nameWithType: ConsignmentBase.ConsignmentReferenceProvidedByCustomer
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.ConsignmentReferenceProvidedByCustomer
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: Weight
  nameWithType: ConsignmentBase.Weight
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Weight
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: Value
  nameWithType: ConsignmentBase.Value
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Value
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: CustomsDocumentation
  nameWithType: ConsignmentBase.CustomsDocumentation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.CustomsDocumentation
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: Addresses
  nameWithType: ConsignmentBase.Addresses
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Addresses
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: Direction
  nameWithType: ConsignmentBase.Direction
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Direction
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: Tags
  nameWithType: ConsignmentBase.Tags
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Tags
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentLegs*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentLegs
  name: ConsignmentLegs
  nameWithType: Consignment.ConsignmentLegs
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentLegs
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentLeg}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentLeg}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ConsignmentLeg>
  nameWithType: List<ConsignmentLeg>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentLeg>
  nameWithType.vb: List(Of ConsignmentLeg)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentLeg)
  name.vb: List(Of ConsignmentLeg)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentLeg
    name: ConsignmentLeg
    nameWithType: ConsignmentLeg
    fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentLeg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentLeg
    name: ConsignmentLeg
    nameWithType: ConsignmentLeg
    fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentLeg
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.CollectionDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.CollectionDate
  name: CollectionDate
  nameWithType: Consignment.CollectionDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.CollectionDate
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateDelivered*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateDelivered
  name: DateDelivered
  nameWithType: Consignment.DateDelivered
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateDelivered
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FirstAttemptedDeliveryDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FirstAttemptedDeliveryDate
  name: FirstAttemptedDeliveryDate
  nameWithType: Consignment.FirstAttemptedDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FirstAttemptedDeliveryDate
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateReturned*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateReturned
  name: DateReturned
  nameWithType: Consignment.DateReturned
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateReturned
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateShipped*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateShipped
  name: DateShipped
  nameWithType: Consignment.DateShipped
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateShipped
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateCollected*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateCollected
  name: DateCollected
  nameWithType: Consignment.DateCollected
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateCollected
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.AttemptedDeliveryDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.AttemptedDeliveryDate
  name: AttemptedDeliveryDate
  nameWithType: Consignment.AttemptedDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.AttemptedDeliveryDate
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.MetaData*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.MetaData
  name: MetaData
  nameWithType: Consignment.MetaData
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.MetaData
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.MetaData}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.MetaData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MetaData>
  nameWithType: List<MetaData>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.MetaData>
  nameWithType.vb: List(Of MetaData)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.MetaData)
  name.vb: List(Of MetaData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.MetaData
    name: MetaData
    nameWithType: MetaData
    fullName: Sorted.PRO.SDK.DataTypes.Common.MetaData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.MetaData
    name: MetaData
    nameWithType: MetaData
    fullName: Sorted.PRO.SDK.DataTypes.Common.MetaData
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Packages*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Packages
  name: Packages
  nameWithType: Consignment.Packages
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Packages
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Consignments.Package}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Consignments.Package}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Package>
  nameWithType: List<Package>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Consignments.Package>
  nameWithType.vb: List(Of Package)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Consignments.Package)
  name.vb: List(Of Package)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Consignments.Package
    name: Package
    nameWithType: Package
    fullName: Sorted.PRO.SDK.DataTypes.Consignments.Package
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Consignments.Package
    name: Package
    nameWithType: Package
    fullName: Sorted.PRO.SDK.DataTypes.Consignments.Package
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Allocation*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Allocation
  name: Allocation
  nameWithType: Consignment.Allocation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Allocation
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Allocation
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.Allocation
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  name: Allocation
  nameWithType: Allocation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Allocation
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FailedAllocation*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FailedAllocation
  name: FailedAllocation
  nameWithType: Consignment.FailedAllocation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.FailedAllocation
- uid: Sorted.PRO.SDK.DataTypes.Consignments.FailedAllocation
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.FailedAllocation
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  name: FailedAllocation
  nameWithType: FailedAllocation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.FailedAllocation
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentState*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentState
  name: ConsignmentState
  nameWithType: Consignment.ConsignmentState
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.ConsignmentState
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Enums.ConsignmentState
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.Enums.ConsignmentState
  parent: Sorted.PRO.SDK.DataTypes.Consignments.Enums
  name: ConsignmentState
  nameWithType: ConsignmentState
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Enums.ConsignmentState
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Enums
  commentId: N:Sorted.PRO.SDK.DataTypes.Consignments.Enums
  name: Sorted.PRO.SDK.DataTypes.Consignments.Enums
  nameWithType: Sorted.PRO.SDK.DataTypes.Consignments.Enums
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Enums
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Source*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Source
  name: Source
  nameWithType: Consignment.Source
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Source
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelCount*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelCount
  name: LabelCount
  nameWithType: Consignment.LabelCount
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsUnAllocated*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsUnAllocated
  name: IsUnAllocated
  nameWithType: Consignment.IsUnAllocated
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsUnAllocated
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelsPrinted*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelsPrinted
  name: LabelsPrinted
  nameWithType: Consignment.LabelsPrinted
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LabelsPrinted
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateLabelsWereFirstPrinted*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateLabelsWereFirstPrinted
  name: DateLabelsWereFirstPrinted
  nameWithType: Consignment.DateLabelsWereFirstPrinted
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.DateLabelsWereFirstPrinted
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsLate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsLate
  name: IsLate
  nameWithType: Consignment.IsLate
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.IsLate
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LateForCustomer*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LateForCustomer
  name: LateForCustomer
  nameWithType: Consignment.LateForCustomer
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LateForCustomer
- uid: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference
  parent: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase
  name: Reference
  nameWithType: ConsignmentBase.Reference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.ConsignmentBase.Reference
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Reference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Reference
  name: Reference
  nameWithType: Consignment.Reference
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.Reference
- uid: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LocationInformation*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LocationInformation
  name: LocationInformation
  nameWithType: Consignment.LocationInformation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.Consignment.LocationInformation
- uid: Sorted.PRO.SDK.DataTypes.Consignments.LocationInformation
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.LocationInformation
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  name: LocationInformation
  nameWithType: LocationInformation
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.LocationInformation
