### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse
  commentId: T:Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse
  id: GetCustomsDocumentationResponse
  parent: Sorted.PRO.SDK.DataTypes.Consignments
  children:
  - Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.#ctor
  - Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN22Documents
  - Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN23Documents
  - Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CommercialInvoiceDocuments
  langs:
  - csharp
  - vb
  name: GetCustomsDocumentationResponse
  nameWithType: GetCustomsDocumentationResponse
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/GetCustomsDocumentationResponse.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetCustomsDocumentationResponse
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/GetCustomsDocumentationResponse.cs
    startLine: 11
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  summary: "\nHolds information as required for custom declaration documentation.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      [DataContractType("Get Customs Documentation Response", "A response to requests to retrieve customs documentation.")]

      public class GetCustomsDocumentationResponse
    content.vb: >-
      <DataContract>

      <DataContractType("Get Customs Documentation Response", "A response to requests to retrieve customs documentation.")>

      Public Class GetCustomsDocumentationResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Get Customs Documentation Response
    - type: System.String
      value: A response to requests to retrieve customs documentation.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CommercialInvoiceDocuments
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CommercialInvoiceDocuments
  id: CommercialInvoiceDocuments
  parent: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse
  langs:
  - csharp
  - vb
  name: CommercialInvoiceDocuments
  nameWithType: GetCustomsDocumentationResponse.CommercialInvoiceDocuments
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CommercialInvoiceDocuments
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/GetCustomsDocumentationResponse.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CommercialInvoiceDocuments
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/GetCustomsDocumentationResponse.cs
    startLine: 16
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("A collection of base64-encoded byte array containing commercial invoices.", PropertyCollectionType.Collection)]

      public List<KeyValuePair<string, byte[]>> CommercialInvoiceDocuments { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.KeyValuePair{System.String,System.Byte[]}}
    content.vb: >-
      <DataMember>

      <DataContractItem("A collection of base64-encoded byte array containing commercial invoices.", PropertyCollectionType.Collection)>

      Public Property CommercialInvoiceDocuments As List(Of KeyValuePair(Of String, Byte()))
  overload: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CommercialInvoiceDocuments*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: A collection of base64-encoded byte array containing commercial invoices.
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN22Documents
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN22Documents
  id: CN22Documents
  parent: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse
  langs:
  - csharp
  - vb
  name: CN22Documents
  nameWithType: GetCustomsDocumentationResponse.CN22Documents
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN22Documents
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/GetCustomsDocumentationResponse.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CN22Documents
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/GetCustomsDocumentationResponse.cs
    startLine: 20
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("A collection of base64-encoded byte array containing CN22 documents.", PropertyCollectionType.Collection)]

      public List<KeyValuePair<string, byte[]>> CN22Documents { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.KeyValuePair{System.String,System.Byte[]}}
    content.vb: >-
      <DataMember>

      <DataContractItem("A collection of base64-encoded byte array containing CN22 documents.", PropertyCollectionType.Collection)>

      Public Property CN22Documents As List(Of KeyValuePair(Of String, Byte()))
  overload: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN22Documents*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: A collection of base64-encoded byte array containing CN22 documents.
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN23Documents
  commentId: P:Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN23Documents
  id: CN23Documents
  parent: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse
  langs:
  - csharp
  - vb
  name: CN23Documents
  nameWithType: GetCustomsDocumentationResponse.CN23Documents
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN23Documents
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/GetCustomsDocumentationResponse.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CN23Documents
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/GetCustomsDocumentationResponse.cs
    startLine: 24
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("A collection of base64-encoded byte array containing CN23 documents.", PropertyCollectionType.Collection)]

      public List<KeyValuePair<string, byte[]>> CN23Documents { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.KeyValuePair{System.String,System.Byte[]}}
    content.vb: >-
      <DataMember>

      <DataContractItem("A collection of base64-encoded byte array containing CN23 documents.", PropertyCollectionType.Collection)>

      Public Property CN23Documents As List(Of KeyValuePair(Of String, Byte()))
  overload: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN23Documents*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: A collection of base64-encoded byte array containing CN23 documents.
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.#ctor
  commentId: M:Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.#ctor
  id: '#ctor'
  parent: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse
  langs:
  - csharp
  - vb
  name: GetCustomsDocumentationResponse()
  nameWithType: GetCustomsDocumentationResponse.GetCustomsDocumentationResponse()
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.GetCustomsDocumentationResponse()
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Consignments/GetCustomsDocumentationResponse.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Consignments/GetCustomsDocumentationResponse.cs
    startLine: 28
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Consignments
  namespace: Sorted.PRO.SDK.DataTypes.Consignments
  syntax:
    content: public GetCustomsDocumentationResponse()
    content.vb: Public Sub New
  overload: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sorted.PRO.SDK.DataTypes.Consignments
  commentId: N:Sorted.PRO.SDK.DataTypes.Consignments
  name: Sorted.PRO.SDK.DataTypes.Consignments
  nameWithType: Sorted.PRO.SDK.DataTypes.Consignments
  fullName: Sorted.PRO.SDK.DataTypes.Consignments
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CommercialInvoiceDocuments*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CommercialInvoiceDocuments
  name: CommercialInvoiceDocuments
  nameWithType: GetCustomsDocumentationResponse.CommercialInvoiceDocuments
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CommercialInvoiceDocuments
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.KeyValuePair{System.String,System.Byte[]}}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.KeyValuePair{System.String,System.Byte[]}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<KeyValuePair<String, Byte[]>>
  nameWithType: List<KeyValuePair<String, Byte[]>>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.KeyValuePair<System.String, System.Byte[]>>
  nameWithType.vb: List(Of KeyValuePair(Of String, Byte()))
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.KeyValuePair(Of System.String, System.Byte()))
  name.vb: List(Of KeyValuePair(Of String, Byte()))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: Sorted.PRO.SDK.DataTypes.Common.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: Sorted.PRO.SDK.DataTypes.Common.KeyValuePair
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN22Documents*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN22Documents
  name: CN22Documents
  nameWithType: GetCustomsDocumentationResponse.CN22Documents
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN22Documents
- uid: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN23Documents*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN23Documents
  name: CN23Documents
  nameWithType: GetCustomsDocumentationResponse.CN23Documents
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.CN23Documents
- uid: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.#ctor*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.#ctor
  name: GetCustomsDocumentationResponse
  nameWithType: GetCustomsDocumentationResponse.GetCustomsDocumentationResponse
  fullName: Sorted.PRO.SDK.DataTypes.Consignments.GetCustomsDocumentationResponse.GetCustomsDocumentationResponse
