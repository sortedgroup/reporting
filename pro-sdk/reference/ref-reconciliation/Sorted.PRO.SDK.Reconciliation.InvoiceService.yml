### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.Reconciliation.InvoiceService
  commentId: T:Sorted.PRO.SDK.Reconciliation.InvoiceService
  id: InvoiceService
  parent: Sorted.PRO.SDK.Reconciliation
  children:
  - Sorted.PRO.SDK.Reconciliation.InvoiceService.#ctor(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomer(System.Guid)
  - Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomerAsync(System.Guid)
  langs:
  - csharp
  - vb
  name: InvoiceService
  nameWithType: InvoiceService
  fullName: Sorted.PRO.SDK.Reconciliation.InvoiceService
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.Reconciliation/InvoiceService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: InvoiceService
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Reconciliation/InvoiceService.cs
    startLine: 14
  assemblies:
  - Sorted.PRO.SDK.Reconciliation
  namespace: Sorted.PRO.SDK.Reconciliation
  summary: "\nService for retrieving invoices\n"
  example: []
  syntax:
    content: 'public class InvoiceService : BaseService, IInvoiceService'
    content.vb: >-
      Public Class InvoiceService
          Inherits BaseService
          Implements IInvoiceService
  inheritance:
  - System.Object
  - Sorted.PRO.SDK.Shared.BaseService
  implements:
  - Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService
  inheritedMembers:
  - Sorted.PRO.SDK.Shared.BaseService.VERSION
  - Sorted.PRO.SDK.Shared.BaseService.Rest
  - Sorted.PRO.SDK.Shared.BaseService.Log
  - Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,System.String)
  - Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{{TReturn}})
  - Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sorted.PRO.SDK.Reconciliation.InvoiceService.#ctor(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Reconciliation.InvoiceService.#ctor(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})
  id: '#ctor(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})'
  parent: Sorted.PRO.SDK.Reconciliation.InvoiceService
  langs:
  - csharp
  - vb
  name: InvoiceService(String, IEndpoints, IHttpClientFactory, ILogger, Dictionary<String, String>)
  nameWithType: InvoiceService.InvoiceService(String, IEndpoints, IHttpClientFactory, ILogger, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Reconciliation.InvoiceService.InvoiceService(System.String, Sorted.PRO.SDK.Shared.Interfaces.IEndpoints, Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory, Sorted.PRO.SDK.Shared.Interfaces.ILogger, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.Reconciliation/InvoiceService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Reconciliation/InvoiceService.cs
    startLine: 25
  assemblies:
  - Sorted.PRO.SDK.Reconciliation
  namespace: Sorted.PRO.SDK.Reconciliation
  summary: "\nInitialize a new instance of the <xref href=\"Sorted.PRO.SDK.Reconciliation.InvoiceService\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public InvoiceService(string apiKey, IEndpoints endpoints, IHttpClientFactory httpClientFactory, ILogger log, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: apiKey
      type: System.String
      description: ''
    - id: endpoints
      type: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
      description: ''
    - id: httpClientFactory
      type: Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
      description: Used to provide a re-usable instance of <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref>
    - id: log
      type: Sorted.PRO.SDK.Shared.Interfaces.ILogger
      description: ''
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Sub New(apiKey As String, endpoints As IEndpoints, httpClientFactory As IHttpClientFactory, log As ILogger, optionalHeaders As Dictionary(Of String, String) = Nothing)
  overload: Sorted.PRO.SDK.Reconciliation.InvoiceService.#ctor*
  nameWithType.vb: InvoiceService.InvoiceService(String, IEndpoints, IHttpClientFactory, ILogger, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Reconciliation.InvoiceService.InvoiceService(System.String, Sorted.PRO.SDK.Shared.Interfaces.IEndpoints, Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory, Sorted.PRO.SDK.Shared.Interfaces.ILogger, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: InvoiceService(String, IEndpoints, IHttpClientFactory, ILogger, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomer(System.Guid)
  commentId: M:Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomer(System.Guid)
  id: GetInvoiceListForCustomer(System.Guid)
  parent: Sorted.PRO.SDK.Reconciliation.InvoiceService
  langs:
  - csharp
  - vb
  name: GetInvoiceListForCustomer(Guid)
  nameWithType: InvoiceService.GetInvoiceListForCustomer(Guid)
  fullName: Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomer(System.Guid)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Reconciliation/InvoiceService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetInvoiceListForCustomer
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Reconciliation/InvoiceService.cs
    startLine: 35
  assemblies:
  - Sorted.PRO.SDK.Reconciliation
  namespace: Sorted.PRO.SDK.Reconciliation
  summary: "\nGets the invoice list for customer.\n"
  example: []
  syntax:
    content: >-
      [ApiEndpoint("Get Invoice List", "Returns the invoice list for the customer.", "Invoices", typeof(IList<InvoiceSummary>), "/consignments/invoiceservice/{customerReference:Guid}", "GET", null)]

      public IList<InvoiceSummary> GetInvoiceListForCustomer(Guid customerReference)
    parameters:
    - id: customerReference
      type: System.Guid
      description: The customer reference.
    return:
      type: System.Collections.Generic.IList{Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary}
      description: ''
    content.vb: >-
      <ApiEndpoint("Get Invoice List", "Returns the invoice list for the customer.", "Invoices", GetType(IList(Of InvoiceSummary)), "/consignments/invoiceservice/{customerReference:Guid}", "GET", Nothing)>

      Public Function GetInvoiceListForCustomer(customerReference As Guid) As IList(Of InvoiceSummary)
  overload: Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomer*
  implements:
  - Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomer(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomerAsync(System.Guid)
  commentId: M:Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomerAsync(System.Guid)
  id: GetInvoiceListForCustomerAsync(System.Guid)
  parent: Sorted.PRO.SDK.Reconciliation.InvoiceService
  langs:
  - csharp
  - vb
  name: GetInvoiceListForCustomerAsync(Guid)
  nameWithType: InvoiceService.GetInvoiceListForCustomerAsync(Guid)
  fullName: Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomerAsync(System.Guid)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Reconciliation/InvoiceService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetInvoiceListForCustomerAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Reconciliation/InvoiceService.cs
    startLine: 53
  assemblies:
  - Sorted.PRO.SDK.Reconciliation
  namespace: Sorted.PRO.SDK.Reconciliation
  summary: "\nGets the invoice list for the customer\n"
  example: []
  syntax:
    content: public Task<IList<InvoiceSummary>> GetInvoiceListForCustomerAsync(Guid customerReference)
    parameters:
    - id: customerReference
      type: System.Guid
      description: The customer reference.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary}}
      description: ''
    content.vb: Public Function GetInvoiceListForCustomerAsync(customerReference As Guid) As Task(Of IList(Of InvoiceSummary))
  overload: Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomerAsync*
  implements:
  - Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomerAsync(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sorted.PRO.SDK.Reconciliation
  commentId: N:Sorted.PRO.SDK.Reconciliation
  name: Sorted.PRO.SDK.Reconciliation
  nameWithType: Sorted.PRO.SDK.Reconciliation
  fullName: Sorted.PRO.SDK.Reconciliation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sorted.PRO.SDK.Shared.BaseService
  commentId: T:Sorted.PRO.SDK.Shared.BaseService
  parent: Sorted.PRO.SDK.Shared
  name: BaseService
  nameWithType: BaseService
  fullName: Sorted.PRO.SDK.Shared.BaseService
- uid: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService
  commentId: T:Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService
  parent: Sorted.PRO.SDK.Interfaces.Reconciliation
  name: IInvoiceService
  nameWithType: IInvoiceService
  fullName: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService
- uid: Sorted.PRO.SDK.Shared.BaseService.VERSION
  commentId: F:Sorted.PRO.SDK.Shared.BaseService.VERSION
  parent: Sorted.PRO.SDK.Shared.BaseService
  name: VERSION
  nameWithType: BaseService.VERSION
  fullName: Sorted.PRO.SDK.Shared.BaseService.VERSION
- uid: Sorted.PRO.SDK.Shared.BaseService.Rest
  commentId: F:Sorted.PRO.SDK.Shared.BaseService.Rest
  parent: Sorted.PRO.SDK.Shared.BaseService
  name: Rest
  nameWithType: BaseService.Rest
  fullName: Sorted.PRO.SDK.Shared.BaseService.Rest
- uid: Sorted.PRO.SDK.Shared.BaseService.Log
  commentId: F:Sorted.PRO.SDK.Shared.BaseService.Log
  parent: Sorted.PRO.SDK.Shared.BaseService
  name: Log
  nameWithType: BaseService.Log
  fullName: Sorted.PRO.SDK.Shared.BaseService.Log
- uid: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,System.String)
  commentId: M:Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,System.String)
  parent: Sorted.PRO.SDK.Shared.BaseService
  isExternal: true
  name: GetRestConfig(String, IEndpoints, String)
  nameWithType: BaseService.GetRestConfig(String, IEndpoints, String)
  fullName: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String, Sorted.PRO.SDK.Shared.Interfaces.IEndpoints, System.String)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,System.String)
    name: GetRestConfig
    nameWithType: BaseService.GetRestConfig
    fullName: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
    name: IEndpoints
    nameWithType: IEndpoints
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,System.String)
    name: GetRestConfig
    nameWithType: BaseService.GetRestConfig
    fullName: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
    name: IEndpoints
    nameWithType: IEndpoints
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{{TReturn}})
  commentId: M:Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
  parent: Sorted.PRO.SDK.Shared.BaseService
  definition: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
  name: CallAsyncMethod<TReturn>(Func<TReturn>)
  nameWithType: BaseService.CallAsyncMethod<TReturn>(Func<TReturn>)
  fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod<TReturn>(System.Func<TReturn>)
  nameWithType.vb: BaseService.CallAsyncMethod(Of TReturn)(Func(Of TReturn))
  fullName.vb: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(Of TReturn)(System.Func(Of TReturn))
  name.vb: CallAsyncMethod(Of TReturn)(Func(Of TReturn))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
    name: CallAsyncMethod<TReturn>
    nameWithType: BaseService.CallAsyncMethod<TReturn>
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod<TReturn>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReturn
    nameWithType: TReturn
    fullName: TReturn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
    name: CallAsyncMethod(Of TReturn)
    nameWithType: BaseService.CallAsyncMethod(Of TReturn)
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(Of TReturn)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReturn
    nameWithType: TReturn
    fullName: TReturn
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
  commentId: M:Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
  parent: Sorted.PRO.SDK.Shared.BaseService
  isExternal: true
  name: CallAsyncMethod(Action)
  nameWithType: BaseService.CallAsyncMethod(Action)
  fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
    name: CallAsyncMethod
    nameWithType: BaseService.CallAsyncMethod
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
    name: CallAsyncMethod
    nameWithType: BaseService.CallAsyncMethod
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.Shared
  commentId: N:Sorted.PRO.SDK.Shared
  name: Sorted.PRO.SDK.Shared
  nameWithType: Sorted.PRO.SDK.Shared
  fullName: Sorted.PRO.SDK.Shared
- uid: Sorted.PRO.SDK.Interfaces.Reconciliation
  commentId: N:Sorted.PRO.SDK.Interfaces.Reconciliation
  name: Sorted.PRO.SDK.Interfaces.Reconciliation
  nameWithType: Sorted.PRO.SDK.Interfaces.Reconciliation
  fullName: Sorted.PRO.SDK.Interfaces.Reconciliation
- uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
  commentId: M:Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
  isExternal: true
  name: CallAsyncMethod<TReturn>(Func<TReturn>)
  nameWithType: BaseService.CallAsyncMethod<TReturn>(Func<TReturn>)
  fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod<TReturn>(System.Func<TReturn>)
  nameWithType.vb: BaseService.CallAsyncMethod(Of TReturn)(Func(Of TReturn))
  fullName.vb: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(Of TReturn)(System.Func(Of TReturn))
  name.vb: CallAsyncMethod(Of TReturn)(Func(Of TReturn))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
    name: CallAsyncMethod<TReturn>
    nameWithType: BaseService.CallAsyncMethod<TReturn>
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod<TReturn>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReturn
    nameWithType: TReturn
    fullName: TReturn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
    name: CallAsyncMethod(Of TReturn)
    nameWithType: BaseService.CallAsyncMethod(Of TReturn)
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(Of TReturn)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReturn
    nameWithType: TReturn
    fullName: TReturn
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Reconciliation.InvoiceService
  commentId: T:Sorted.PRO.SDK.Reconciliation.InvoiceService
  name: InvoiceService
  nameWithType: InvoiceService
  fullName: Sorted.PRO.SDK.Reconciliation.InvoiceService
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  isExternal: true
- uid: Sorted.PRO.SDK.Reconciliation.InvoiceService.#ctor*
  commentId: Overload:Sorted.PRO.SDK.Reconciliation.InvoiceService.#ctor
  name: InvoiceService
  nameWithType: InvoiceService.InvoiceService
  fullName: Sorted.PRO.SDK.Reconciliation.InvoiceService.InvoiceService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
  parent: Sorted.PRO.SDK.Shared.Interfaces
  name: IEndpoints
  nameWithType: IEndpoints
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
- uid: Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
  parent: Sorted.PRO.SDK.Shared.Interfaces
  name: IHttpClientFactory
  nameWithType: IHttpClientFactory
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
- uid: Sorted.PRO.SDK.Shared.Interfaces.ILogger
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.ILogger
  parent: Sorted.PRO.SDK.Shared.Interfaces
  name: ILogger
  nameWithType: ILogger
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ILogger
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces
  commentId: N:Sorted.PRO.SDK.Shared.Interfaces
  name: Sorted.PRO.SDK.Shared.Interfaces
  nameWithType: Sorted.PRO.SDK.Shared.Interfaces
  fullName: Sorted.PRO.SDK.Shared.Interfaces
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomer*
  commentId: Overload:Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomer
  name: GetInvoiceListForCustomer
  nameWithType: InvoiceService.GetInvoiceListForCustomer
  fullName: Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomer
- uid: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomer(System.Guid)
  commentId: M:Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomer(System.Guid)
  parent: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService
  isExternal: true
  name: GetInvoiceListForCustomer(Guid)
  nameWithType: IInvoiceService.GetInvoiceListForCustomer(Guid)
  fullName: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomer(System.Guid)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomer(System.Guid)
    name: GetInvoiceListForCustomer
    nameWithType: IInvoiceService.GetInvoiceListForCustomer
    fullName: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomer(System.Guid)
    name: GetInvoiceListForCustomer
    nameWithType: IInvoiceService.GetInvoiceListForCustomer
    fullName: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Collections.Generic.IList{Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary}
  commentId: T:System.Collections.Generic.IList{Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<InvoiceSummary>
  nameWithType: IList<InvoiceSummary>
  fullName: System.Collections.Generic.IList<Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary>
  nameWithType.vb: IList(Of InvoiceSummary)
  fullName.vb: System.Collections.Generic.IList(Of Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary)
  name.vb: IList(Of InvoiceSummary)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary
    name: InvoiceSummary
    nameWithType: InvoiceSummary
    fullName: Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary
    name: InvoiceSummary
    nameWithType: InvoiceSummary
    fullName: Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomerAsync*
  commentId: Overload:Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomerAsync
  name: GetInvoiceListForCustomerAsync
  nameWithType: InvoiceService.GetInvoiceListForCustomerAsync
  fullName: Sorted.PRO.SDK.Reconciliation.InvoiceService.GetInvoiceListForCustomerAsync
- uid: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomerAsync(System.Guid)
  commentId: M:Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomerAsync(System.Guid)
  parent: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService
  isExternal: true
  name: GetInvoiceListForCustomerAsync(Guid)
  nameWithType: IInvoiceService.GetInvoiceListForCustomerAsync(Guid)
  fullName: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomerAsync(System.Guid)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomerAsync(System.Guid)
    name: GetInvoiceListForCustomerAsync
    nameWithType: IInvoiceService.GetInvoiceListForCustomerAsync
    fullName: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomerAsync(System.Guid)
    name: GetInvoiceListForCustomerAsync
    nameWithType: IInvoiceService.GetInvoiceListForCustomerAsync
    fullName: Sorted.PRO.SDK.Interfaces.Reconciliation.IInvoiceService.GetInvoiceListForCustomerAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IList<InvoiceSummary>>
  nameWithType: Task<IList<InvoiceSummary>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary>>
  nameWithType.vb: Task(Of IList(Of InvoiceSummary))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary))
  name.vb: Task(Of IList(Of InvoiceSummary))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary
    name: InvoiceSummary
    nameWithType: InvoiceSummary
    fullName: Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary
    name: InvoiceSummary
    nameWithType: InvoiceSummary
    fullName: Sorted.PRO.SDK.DataTypes.Payments.InvoiceSummary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
