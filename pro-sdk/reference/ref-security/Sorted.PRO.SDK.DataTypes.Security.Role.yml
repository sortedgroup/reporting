### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.DataTypes.Security.Role
  commentId: T:Sorted.PRO.SDK.DataTypes.Security.Role
  id: Role
  parent: Sorted.PRO.SDK.DataTypes.Security
  children:
  - Sorted.PRO.SDK.DataTypes.Security.Role.#ctor
  - Sorted.PRO.SDK.DataTypes.Security.Role.CustomerReference
  - Sorted.PRO.SDK.DataTypes.Security.Role.Description
  - Sorted.PRO.SDK.DataTypes.Security.Role.Name
  - Sorted.PRO.SDK.DataTypes.Security.Role.Permissions
  - Sorted.PRO.SDK.DataTypes.Security.Role.Reference
  - Sorted.PRO.SDK.DataTypes.Security.Role.Type
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: Role
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Security/Role.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Role
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Security/Role.cs
    startLine: 9
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Security
  namespace: Sorted.PRO.SDK.DataTypes.Security
  syntax:
    content: >-
      [DataContract]

      [Serializable]

      [DataContractType("Role", "A collection of permissions within Electio.")]

      public class Role
    content.vb: >-
      <DataContract>

      <Serializable>

      <DataContractType("Role", "A collection of permissions within Electio.")>

      Public Class Role
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Role
    - type: System.String
      value: A collection of permissions within Electio.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.#ctor
  commentId: M:Sorted.PRO.SDK.DataTypes.Security.Role.#ctor
  id: '#ctor'
  parent: Sorted.PRO.SDK.DataTypes.Security.Role
  langs:
  - csharp
  - vb
  name: Role()
  nameWithType: Role.Role()
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Role()
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Security/Role.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Security/Role.cs
    startLine: 15
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Security
  namespace: Sorted.PRO.SDK.DataTypes.Security
  syntax:
    content: public Role()
    content.vb: Public Sub New
  overload: Sorted.PRO.SDK.DataTypes.Security.Role.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.CustomerReference
  commentId: P:Sorted.PRO.SDK.DataTypes.Security.Role.CustomerReference
  id: CustomerReference
  parent: Sorted.PRO.SDK.DataTypes.Security.Role
  langs:
  - csharp
  - vb
  name: CustomerReference
  nameWithType: Role.CustomerReference
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.CustomerReference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Security/Role.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CustomerReference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Security/Role.cs
    startLine: 20
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Security
  namespace: Sorted.PRO.SDK.DataTypes.Security
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The customer reference to which this role applies.", false, PropertyCollectionType.Single)]

      public Guid CustomerReference { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <DataMember>

      <DataContractItem("The customer reference to which this role applies.", False, PropertyCollectionType.Single)>

      Public Property CustomerReference As Guid
  overload: Sorted.PRO.SDK.DataTypes.Security.Role.CustomerReference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The customer reference to which this role applies.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.Reference
  commentId: P:Sorted.PRO.SDK.DataTypes.Security.Role.Reference
  id: Reference
  parent: Sorted.PRO.SDK.DataTypes.Security.Role
  langs:
  - csharp
  - vb
  name: Reference
  nameWithType: Role.Reference
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Reference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Security/Role.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Reference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Security/Role.cs
    startLine: 24
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Security
  namespace: Sorted.PRO.SDK.DataTypes.Security
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The unique reference for this role.", false, PropertyCollectionType.Single)]

      public Guid Reference { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <DataMember>

      <DataContractItem("The unique reference for this role.", False, PropertyCollectionType.Single)>

      Public Property Reference As Guid
  overload: Sorted.PRO.SDK.DataTypes.Security.Role.Reference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The unique reference for this role.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.Name
  commentId: P:Sorted.PRO.SDK.DataTypes.Security.Role.Name
  id: Name
  parent: Sorted.PRO.SDK.DataTypes.Security.Role
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Role.Name
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Name
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Security/Role.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Name
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Security/Role.cs
    startLine: 28
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Security
  namespace: Sorted.PRO.SDK.DataTypes.Security
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The name of this role.", false, PropertyCollectionType.Single)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("The name of this role.", False, PropertyCollectionType.Single)>

      Public Property Name As String
  overload: Sorted.PRO.SDK.DataTypes.Security.Role.Name*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The name of this role.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.Description
  commentId: P:Sorted.PRO.SDK.DataTypes.Security.Role.Description
  id: Description
  parent: Sorted.PRO.SDK.DataTypes.Security.Role
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Role.Description
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Description
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Security/Role.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Description
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Security/Role.cs
    startLine: 32
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Security
  namespace: Sorted.PRO.SDK.DataTypes.Security
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("A description for this role.", false, PropertyCollectionType.Single)]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("A description for this role.", False, PropertyCollectionType.Single)>

      Public Property Description As String
  overload: Sorted.PRO.SDK.DataTypes.Security.Role.Description*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: A description for this role.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.Type
  commentId: P:Sorted.PRO.SDK.DataTypes.Security.Role.Type
  id: Type
  parent: Sorted.PRO.SDK.DataTypes.Security.Role
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Role.Type
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Type
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Security/Role.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Type
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Security/Role.cs
    startLine: 36
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Security
  namespace: Sorted.PRO.SDK.DataTypes.Security
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The type of role.", false, PropertyCollectionType.Single)]

      public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DataContractItem("The type of role.", False, PropertyCollectionType.Single)>

      Public Property Type As String
  overload: Sorted.PRO.SDK.DataTypes.Security.Role.Type*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The type of role.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.Permissions
  commentId: P:Sorted.PRO.SDK.DataTypes.Security.Role.Permissions
  id: Permissions
  parent: Sorted.PRO.SDK.DataTypes.Security.Role
  langs:
  - csharp
  - vb
  name: Permissions
  nameWithType: Role.Permissions
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Permissions
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Security/Role.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Permissions
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Security/Role.cs
    startLine: 40
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Security
  namespace: Sorted.PRO.SDK.DataTypes.Security
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The list of associated permissions.", PropertyCollectionType.Collection)]

      public List<Permission> Permissions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.Permission}
    content.vb: >-
      <DataMember>

      <DataContractItem("The list of associated permissions.", PropertyCollectionType.Collection)>

      Public Property Permissions As List(Of Permission)
  overload: Sorted.PRO.SDK.DataTypes.Security.Role.Permissions*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The list of associated permissions.
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sorted.PRO.SDK.DataTypes.Security
  commentId: N:Sorted.PRO.SDK.DataTypes.Security
  name: Sorted.PRO.SDK.DataTypes.Security
  nameWithType: Sorted.PRO.SDK.DataTypes.Security
  fullName: Sorted.PRO.SDK.DataTypes.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.#ctor*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Security.Role.#ctor
  name: Role
  nameWithType: Role.Role
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Role
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.CustomerReference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Security.Role.CustomerReference
  name: CustomerReference
  nameWithType: Role.CustomerReference
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.CustomerReference
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.Reference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Security.Role.Reference
  name: Reference
  nameWithType: Role.Reference
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Reference
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.Name*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Security.Role.Name
  name: Name
  nameWithType: Role.Name
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.Description*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Security.Role.Description
  name: Description
  nameWithType: Role.Description
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Description
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.Type*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Security.Role.Type
  name: Type
  nameWithType: Role.Type
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Type
- uid: Sorted.PRO.SDK.DataTypes.Security.Role.Permissions*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Security.Role.Permissions
  name: Permissions
  nameWithType: Role.Permissions
  fullName: Sorted.PRO.SDK.DataTypes.Security.Role.Permissions
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.Permission}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Security.Permission}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Permission>
  nameWithType: List<Permission>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Security.Permission>
  nameWithType.vb: List(Of Permission)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Security.Permission)
  name.vb: List(Of Permission)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Security.Permission
    name: Permission
    nameWithType: Permission
    fullName: Sorted.PRO.SDK.DataTypes.Security.Permission
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Security.Permission
    name: Permission
    nameWithType: Permission
    fullName: Sorted.PRO.SDK.DataTypes.Security.Permission
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
