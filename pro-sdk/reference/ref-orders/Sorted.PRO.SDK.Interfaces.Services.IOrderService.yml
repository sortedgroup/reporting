### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  commentId: T:Sorted.PRO.SDK.Interfaces.Services.IOrderService
  id: IOrderService
  parent: Sorted.PRO.SDK.Interfaces.Services
  children:
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrder(Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrderAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrders(Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrdersAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrder(System.String)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrderAsync(System.String)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrder(Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrderAsync(Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrder(Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  - Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  langs:
  - csharp
  - vb
  name: IOrderService
  nameWithType: IOrderService
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  type: Interface
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: IOrderService
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 11
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  syntax:
    content: public interface IOrderService
    content.vb: Public Interface IOrderService
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrder(Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrder(Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest)
  id: PackOrder(Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: PackOrder(PackOrderRequest)
  nameWithType: IOrderService.PackOrder(PackOrderRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrder(Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: PackOrder
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 20
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nPacks a consignment from an order.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Async implementation. This version will be removed in a future release.")]

      PackOrderResponse PackOrder(PackOrderRequest packOrderRequest)
    parameters:
    - id: packOrderRequest
      type: Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest
      description: The request.
    return:
      type: Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse
      description: "\nApiLinks to newly created consignment and (if required) return consignment\n"
    content.vb: >-
      <Obsolete("Use Async implementation. This version will be removed in a future release.")>

      Function PackOrder(packOrderRequest As PackOrderRequest) As PackOrderResponse
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrder*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Async implementation. This version will be removed in a future release.
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrderAsync(Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrderAsync(Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest)
  id: PackOrderAsync(Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: PackOrderAsync(PackOrderRequest)
  nameWithType: IOrderService.PackOrderAsync(PackOrderRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrderAsync(Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: PackOrderAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 30
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nPacks a consignment from an order.\n"
  example: []
  syntax:
    content: Task<PackOrderResponse> PackOrderAsync(PackOrderRequest packOrderRequest)
    parameters:
    - id: packOrderRequest
      type: Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest
      description: The request.
    return:
      type: System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse}
      description: "\n<xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref> which includes ApiLinks to newly created consignment and (if required) return consignment\n"
    content.vb: Function PackOrderAsync(packOrderRequest As PackOrderRequest) As Task(Of PackOrderResponse)
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrderAsync*
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrder(System.String)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrder(System.String)
  id: GetOrder(System.String)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: GetOrder(String)
  nameWithType: IOrderService.GetOrder(String)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrder(System.String)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetOrder
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 39
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nGets an order.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Async implementation. This version will be removed in a future release.")]

      Order GetOrder(string orderReference)
    parameters:
    - id: orderReference
      type: System.String
      description: The order reference.
    return:
      type: Sorted.PRO.SDK.DataTypes.Orders.Order.Order
      description: "\nOrder\n"
    content.vb: >-
      <Obsolete("Use Async implementation. This version will be removed in a future release.")>

      Function GetOrder(orderReference As String) As Order
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrder*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Async implementation. This version will be removed in a future release.
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrderAsync(System.String)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrderAsync(System.String)
  id: GetOrderAsync(System.String)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: GetOrderAsync(String)
  nameWithType: IOrderService.GetOrderAsync(String)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrderAsync(System.String)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetOrderAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 49
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nGets an order.\n"
  example: []
  syntax:
    content: Task<Order> GetOrderAsync(string orderReference)
    parameters:
    - id: orderReference
      type: System.String
      description: The order reference.
    return:
      type: System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Orders.Order.Order}
      description: "\n<xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetOrderAsync(orderReference As String) As Task(Of Order)
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrderAsync*
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrder(Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrder(Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest)
  id: CreateOrder(Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: CreateOrder(CreateOrderRequest)
  nameWithType: IOrderService.CreateOrder(CreateOrderRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrder(Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CreateOrder
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 58
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nCreate an Order.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Async implementation. This version will be removed in a future release.")]

      List<ApiLink> CreateOrder(CreateOrderRequest createOrderRequest)
    parameters:
    - id: createOrderRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest
      description: The request.
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}
      description: "\nApiLinks to newly created order\n"
    content.vb: >-
      <Obsolete("Use Async implementation. This version will be removed in a future release.")>

      Function CreateOrder(createOrderRequest As CreateOrderRequest) As List(Of ApiLink)
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrder*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Async implementation. This version will be removed in a future release.
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrderAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrderAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest)
  id: CreateOrderAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: CreateOrderAsync(CreateOrderRequest)
  nameWithType: IOrderService.CreateOrderAsync(CreateOrderRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrderAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CreateOrderAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 68
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nCreate an Order.\n"
  example: []
  syntax:
    content: Task<List<ApiLink>> CreateOrderAsync(CreateOrderRequest createOrderRequest)
    parameters:
    - id: createOrderRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest
      description: The request.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}}
      description: "\n<xref href=\"Task%7bList%7bApiLink%7d%7d\" data-throw-if-not-resolved=\"false\"></xref> ApiLinks to newly created order\n"
    content.vb: Function CreateOrderAsync(createOrderRequest As CreateOrderRequest) As Task(Of List(Of ApiLink))
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrderAsync*
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrder(Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrder(Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest)
  id: UpdateOrder(Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: UpdateOrder(UpdateOrderRequest)
  nameWithType: IOrderService.UpdateOrder(UpdateOrderRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrder(Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: UpdateOrder
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 75
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nUpdates an Order.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Async implementation. This version will be removed in a future release.")]

      List<ApiLink> UpdateOrder(UpdateOrderRequest updateOrderRequest)
    parameters:
    - id: updateOrderRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest
      description: ''
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}
      description: ''
    content.vb: >-
      <Obsolete("Use Async implementation. This version will be removed in a future release.")>

      Function UpdateOrder(updateOrderRequest As UpdateOrderRequest) As List(Of ApiLink)
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrder*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Async implementation. This version will be removed in a future release.
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest)
  id: UpdateOrderAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: UpdateOrderAsync(UpdateOrderRequest)
  nameWithType: IOrderService.UpdateOrderAsync(UpdateOrderRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: UpdateOrderAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 85
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nUpdates an Order.\n"
  example: []
  syntax:
    content: Task<List<ApiLink>> UpdateOrderAsync(UpdateOrderRequest updateOrderRequest)
    parameters:
    - id: updateOrderRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}}
      description: "\n<xref href=\"Task%7bList%7bApiLink%7d%7d\" data-throw-if-not-resolved=\"false\"></xref> ApiLinks to updated order\n"
    content.vb: Function UpdateOrderAsync(updateOrderRequest As UpdateOrderRequest) As Task(Of List(Of ApiLink))
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderAsync*
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  id: AddOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: AddOrderPackages(AddUpdateOrderPackagesRequest)
  nameWithType: IOrderService.AddOrderPackages(AddUpdateOrderPackagesRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: AddOrderPackages
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 92
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nAdds packages to an Order.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Async implementation. This version will be removed in a future release.")]

      bool AddOrderPackages(AddUpdateOrderPackagesRequest addOrderPackagesRequest)
    parameters:
    - id: addOrderPackagesRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <Obsolete("Use Async implementation. This version will be removed in a future release.")>

      Function AddOrderPackages(addOrderPackagesRequest As AddUpdateOrderPackagesRequest) As Boolean
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackages*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Async implementation. This version will be removed in a future release.
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  id: AddOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: AddOrderPackagesAsync(AddUpdateOrderPackagesRequest)
  nameWithType: IOrderService.AddOrderPackagesAsync(AddUpdateOrderPackagesRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: AddOrderPackagesAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 100
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nAdds packages to an Order.\n"
  example: []
  syntax:
    content: Task<bool> AddOrderPackagesAsync(AddUpdateOrderPackagesRequest addOrderPackagesRequest)
    parameters:
    - id: addOrderPackagesRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> <code>true</code> if updated successfully, otherwise <code>false</code>
    content.vb: Function AddOrderPackagesAsync(addOrderPackagesRequest As AddUpdateOrderPackagesRequest) As Task(Of Boolean)
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackagesAsync*
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  id: UpdateOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: UpdateOrderPackages(AddUpdateOrderPackagesRequest)
  nameWithType: IOrderService.UpdateOrderPackages(AddUpdateOrderPackagesRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: UpdateOrderPackages
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 107
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nUpdates packages on an Order.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Async implementation. This version will be removed in a future release.")]

      bool UpdateOrderPackages(AddUpdateOrderPackagesRequest updateOrderPackagesRequest)
    parameters:
    - id: updateOrderPackagesRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <Obsolete("Use Async implementation. This version will be removed in a future release.")>

      Function UpdateOrderPackages(updateOrderPackagesRequest As AddUpdateOrderPackagesRequest) As Boolean
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackages*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Async implementation. This version will be removed in a future release.
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  id: UpdateOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: UpdateOrderPackagesAsync(AddUpdateOrderPackagesRequest)
  nameWithType: IOrderService.UpdateOrderPackagesAsync(AddUpdateOrderPackagesRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: UpdateOrderPackagesAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 115
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nUpdates packages on an Order.\n"
  example: []
  syntax:
    content: Task<bool> UpdateOrderPackagesAsync(AddUpdateOrderPackagesRequest updateOrderPackagesRequest)
    parameters:
    - id: updateOrderPackagesRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> <code>true</code> if updated successfully, otherwise <code>false</code>
    content.vb: Function UpdateOrderPackagesAsync(updateOrderPackagesRequest As AddUpdateOrderPackagesRequest) As Task(Of Boolean)
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackagesAsync*
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  id: AddOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: AddOrderPackageItems(AddUpdateOrderPackageItemsRequest)
  nameWithType: IOrderService.AddOrderPackageItems(AddUpdateOrderPackageItemsRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: AddOrderPackageItems
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 122
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nAdds Items to an Order Package.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Async implementation. This version will be removed in a future release.")]

      bool AddOrderPackageItems(AddUpdateOrderPackageItemsRequest addOrderPackagesRequest)
    parameters:
    - id: addOrderPackagesRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest
      description: The add order packages request.
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <Obsolete("Use Async implementation. This version will be removed in a future release.")>

      Function AddOrderPackageItems(addOrderPackagesRequest As AddUpdateOrderPackageItemsRequest) As Boolean
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItems*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Async implementation. This version will be removed in a future release.
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  id: AddOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: AddOrderPackageItemsAsync(AddUpdateOrderPackageItemsRequest)
  nameWithType: IOrderService.AddOrderPackageItemsAsync(AddUpdateOrderPackageItemsRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: AddOrderPackageItemsAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 132
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nAdds Items to an Order Package.\n"
  example: []
  syntax:
    content: Task<bool> AddOrderPackageItemsAsync(AddUpdateOrderPackageItemsRequest addOrderPackagesRequest)
    parameters:
    - id: addOrderPackagesRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest
      description: The add order packages request.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\n<xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref> <code>true</code> if added successfully, otherwise <code>false</code>\n"
    content.vb: Function AddOrderPackageItemsAsync(addOrderPackagesRequest As AddUpdateOrderPackageItemsRequest) As Task(Of Boolean)
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItemsAsync*
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  id: UpdateOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: UpdateOrderPackageItems(AddUpdateOrderPackageItemsRequest)
  nameWithType: IOrderService.UpdateOrderPackageItems(AddUpdateOrderPackageItemsRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: UpdateOrderPackageItems
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 139
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nUpdates items in an Order Package.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Async implementation. This version will be removed in a future release.")]

      bool UpdateOrderPackageItems(AddUpdateOrderPackageItemsRequest addOrderPackagesRequest)
    parameters:
    - id: addOrderPackagesRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest
      description: The add order packages request.
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <Obsolete("Use Async implementation. This version will be removed in a future release.")>

      Function UpdateOrderPackageItems(addOrderPackagesRequest As AddUpdateOrderPackageItemsRequest) As Boolean
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItems*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Async implementation. This version will be removed in a future release.
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  id: UpdateOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: UpdateOrderPackageItemsAsync(AddUpdateOrderPackageItemsRequest)
  nameWithType: IOrderService.UpdateOrderPackageItemsAsync(AddUpdateOrderPackageItemsRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: UpdateOrderPackageItemsAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 149
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nUpdates items in an Order Package.\n"
  example: []
  syntax:
    content: Task<bool> UpdateOrderPackageItemsAsync(AddUpdateOrderPackageItemsRequest addOrderPackagesRequest)
    parameters:
    - id: addOrderPackagesRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest
      description: The add order packages request.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\n<xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref> <code>true</code> updated successfully, otherwise <code>false</code>\n"
    content.vb: Function UpdateOrderPackageItemsAsync(addOrderPackagesRequest As AddUpdateOrderPackageItemsRequest) As Task(Of Boolean)
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItemsAsync*
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest)
  id: DeleteOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: DeleteOrderPackages(DeleteOrderPackagesRequest)
  nameWithType: IOrderService.DeleteOrderPackages(DeleteOrderPackagesRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackages(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DeleteOrderPackages
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 156
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nDeletes packages from an Order.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Async implementation. This version will be removed in a future release.")]

      bool DeleteOrderPackages(DeleteOrderPackagesRequest deleteOrderPackagesRequest)
    parameters:
    - id: deleteOrderPackagesRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest
      description: The delete order packages request.
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <Obsolete("Use Async implementation. This version will be removed in a future release.")>

      Function DeleteOrderPackages(deleteOrderPackagesRequest As DeleteOrderPackagesRequest) As Boolean
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackages*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Async implementation. This version will be removed in a future release.
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest)
  id: DeleteOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: DeleteOrderPackagesAsync(DeleteOrderPackagesRequest)
  nameWithType: IOrderService.DeleteOrderPackagesAsync(DeleteOrderPackagesRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackagesAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DeleteOrderPackagesAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 166
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nDeletes packages from an Order.\n"
  example: []
  syntax:
    content: Task<bool> DeleteOrderPackagesAsync(DeleteOrderPackagesRequest deleteOrderPackagesRequest)
    parameters:
    - id: deleteOrderPackagesRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest
      description: The delete order packages request.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\n<xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref> <code>true</code> if deleted successfully, otherwise <code>false</code>\n"
    content.vb: Function DeleteOrderPackagesAsync(deleteOrderPackagesRequest As DeleteOrderPackagesRequest) As Task(Of Boolean)
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackagesAsync*
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest)
  id: DeleteOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: DeleteOrderPackageItems(DeleteOrderPackageItemsRequest)
  nameWithType: IOrderService.DeleteOrderPackageItems(DeleteOrderPackageItemsRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItems(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DeleteOrderPackageItems
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 173
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nDeletes items from an Order Package.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Async implementation. This version will be removed in a future release.")]

      bool DeleteOrderPackageItems(DeleteOrderPackageItemsRequest deleteOrderPackageItemsRequest)
    parameters:
    - id: deleteOrderPackageItemsRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <Obsolete("Use Async implementation. This version will be removed in a future release.")>

      Function DeleteOrderPackageItems(deleteOrderPackageItemsRequest As DeleteOrderPackageItemsRequest) As Boolean
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItems*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Async implementation. This version will be removed in a future release.
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest)
  id: DeleteOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: DeleteOrderPackageItemsAsync(DeleteOrderPackageItemsRequest)
  nameWithType: IOrderService.DeleteOrderPackageItemsAsync(DeleteOrderPackageItemsRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItemsAsync(Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DeleteOrderPackageItemsAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 183
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nDeletes items from an Order Package.\n"
  example: []
  syntax:
    content: Task<bool> DeleteOrderPackageItemsAsync(DeleteOrderPackageItemsRequest deleteOrderPackageItemsRequest)
    parameters:
    - id: deleteOrderPackageItemsRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\n<xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref> <code>true</code> if deleted successfully, otherwise <code>false</code>\n"
    content.vb: Function DeleteOrderPackageItemsAsync(deleteOrderPackageItemsRequest As DeleteOrderPackageItemsRequest) As Task(Of Boolean)
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItemsAsync*
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrders(Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrders(Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest)
  id: GetConsignmentsForOrders(Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: GetConsignmentsForOrders(OrderConsignmentsRequest)
  nameWithType: IOrderService.GetConsignmentsForOrders(OrderConsignmentsRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrders(Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetConsignmentsForOrders
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 190
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nGets consignments associated with Orders.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Async implementation. This version will be removed in a future release.")]

      OrderConsignmentsResponse GetConsignmentsForOrders(OrderConsignmentsRequest orderConsignmentsRequest)
    parameters:
    - id: orderConsignmentsRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest
      description: The order consignments request.
    return:
      type: Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse
      description: ''
    content.vb: >-
      <Obsolete("Use Async implementation. This version will be removed in a future release.")>

      Function GetConsignmentsForOrders(orderConsignmentsRequest As OrderConsignmentsRequest) As OrderConsignmentsResponse
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrders*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Async implementation. This version will be removed in a future release.
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrdersAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest)
  commentId: M:Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrdersAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest)
  id: GetConsignmentsForOrdersAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest)
  parent: Sorted.PRO.SDK.Interfaces.Services.IOrderService
  langs:
  - csharp
  - vb
  name: GetConsignmentsForOrdersAsync(OrderConsignmentsRequest)
  nameWithType: IOrderService.GetConsignmentsForOrdersAsync(OrderConsignmentsRequest)
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrdersAsync(Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetConsignmentsForOrdersAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Interfaces.Orders/IOrderService.cs
    startLine: 200
  assemblies:
  - Sorted.PRO.SDK.Interfaces.Orders
  namespace: Sorted.PRO.SDK.Interfaces.Services
  summary: "\nGets consignments associated with Orders.\n"
  example: []
  syntax:
    content: Task<OrderConsignmentsResponse> GetConsignmentsForOrdersAsync(OrderConsignmentsRequest orderConsignmentsRequest)
    parameters:
    - id: orderConsignmentsRequest
      type: Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest
      description: The order consignments request.
    return:
      type: System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse}
      description: "\n<xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetConsignmentsForOrdersAsync(orderConsignmentsRequest As OrderConsignmentsRequest) As Task(Of OrderConsignmentsResponse)
  overload: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrdersAsync*
references:
- uid: Sorted.PRO.SDK.Interfaces.Services
  commentId: N:Sorted.PRO.SDK.Interfaces.Services
  name: Sorted.PRO.SDK.Interfaces.Services
  nameWithType: Sorted.PRO.SDK.Interfaces.Services
  fullName: Sorted.PRO.SDK.Interfaces.Services
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrder*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrder
  name: PackOrder
  nameWithType: IOrderService.PackOrder
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrder
- uid: Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest
  commentId: T:Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest
  parent: Sorted.PRO.SDK.DataTypes.PackOrders
  name: PackOrderRequest
  nameWithType: PackOrderRequest
  fullName: Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderRequest
- uid: Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse
  commentId: T:Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse
  parent: Sorted.PRO.SDK.DataTypes.PackOrders
  name: PackOrderResponse
  nameWithType: PackOrderResponse
  fullName: Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse
- uid: Sorted.PRO.SDK.DataTypes.PackOrders
  commentId: N:Sorted.PRO.SDK.DataTypes.PackOrders
  name: Sorted.PRO.SDK.DataTypes.PackOrders
  nameWithType: Sorted.PRO.SDK.DataTypes.PackOrders
  fullName: Sorted.PRO.SDK.DataTypes.PackOrders
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrderAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrderAsync
  name: PackOrderAsync
  nameWithType: IOrderService.PackOrderAsync
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.PackOrderAsync
- uid: System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse}
  commentId: T:System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PackOrderResponse>
  nameWithType: Task<PackOrderResponse>
  fullName: System.Threading.Tasks.Task<Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse>
  nameWithType.vb: Task(Of PackOrderResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse)
  name.vb: Task(Of PackOrderResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse
    name: PackOrderResponse
    nameWithType: PackOrderResponse
    fullName: Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse
    name: PackOrderResponse
    nameWithType: PackOrderResponse
    fullName: Sorted.PRO.SDK.DataTypes.PackOrders.PackOrderResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrder*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrder
  name: GetOrder
  nameWithType: IOrderService.GetOrder
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.DataTypes.Orders.Order.Order
  commentId: T:Sorted.PRO.SDK.DataTypes.Orders.Order.Order
  parent: Sorted.PRO.SDK.DataTypes.Orders.Order
  name: Order
  nameWithType: Order
  fullName: Sorted.PRO.SDK.DataTypes.Orders.Order.Order
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.DataTypes.Orders.Order
  commentId: N:Sorted.PRO.SDK.DataTypes.Orders.Order
  name: Sorted.PRO.SDK.DataTypes.Orders.Order
  nameWithType: Sorted.PRO.SDK.DataTypes.Orders.Order
  fullName: Sorted.PRO.SDK.DataTypes.Orders.Order
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrderAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrderAsync
  name: GetOrderAsync
  nameWithType: IOrderService.GetOrderAsync
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetOrderAsync
- uid: System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Orders.Order.Order}
  commentId: T:System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Orders.Order.Order}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Order>
  nameWithType: Task<Order>
  fullName: System.Threading.Tasks.Task<Sorted.PRO.SDK.DataTypes.Orders.Order.Order>
  nameWithType.vb: Task(Of Order)
  fullName.vb: System.Threading.Tasks.Task(Of Sorted.PRO.SDK.DataTypes.Orders.Order.Order)
  name.vb: Task(Of Order)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Orders.Order.Order
    name: Order
    nameWithType: Order
    fullName: Sorted.PRO.SDK.DataTypes.Orders.Order.Order
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Orders.Order.Order
    name: Order
    nameWithType: Order
    fullName: Sorted.PRO.SDK.DataTypes.Orders.Order.Order
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrder*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrder
  name: CreateOrder
  nameWithType: IOrderService.CreateOrder
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrder
- uid: Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest
  commentId: T:Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest
  parent: Sorted.PRO.SDK.DataTypes.Orders.Order
  name: CreateOrderRequest
  nameWithType: CreateOrderRequest
  fullName: Sorted.PRO.SDK.DataTypes.Orders.Order.CreateOrderRequest
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ApiLink>
  nameWithType: List<ApiLink>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.ApiLink>
  nameWithType.vb: List(Of ApiLink)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.ApiLink)
  name.vb: List(Of ApiLink)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.ApiLink
    name: ApiLink
    nameWithType: ApiLink
    fullName: Sorted.PRO.SDK.DataTypes.Common.ApiLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.ApiLink
    name: ApiLink
    nameWithType: ApiLink
    fullName: Sorted.PRO.SDK.DataTypes.Common.ApiLink
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Task{List{ApiLink}}
  commentId: T:Task{List{ApiLink}}
  isExternal: true
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrderAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrderAsync
  name: CreateOrderAsync
  nameWithType: IOrderService.CreateOrderAsync
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.CreateOrderAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.ApiLink}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<ApiLink>>
  nameWithType: Task<List<ApiLink>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.ApiLink>>
  nameWithType.vb: Task(Of List(Of ApiLink))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.ApiLink))
  name.vb: Task(Of List(Of ApiLink))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.ApiLink
    name: ApiLink
    nameWithType: ApiLink
    fullName: Sorted.PRO.SDK.DataTypes.Common.ApiLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.ApiLink
    name: ApiLink
    nameWithType: ApiLink
    fullName: Sorted.PRO.SDK.DataTypes.Common.ApiLink
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrder*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrder
  name: UpdateOrder
  nameWithType: IOrderService.UpdateOrder
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrder
- uid: Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest
  commentId: T:Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest
  parent: Sorted.PRO.SDK.DataTypes.Orders.Order
  name: UpdateOrderRequest
  nameWithType: UpdateOrderRequest
  fullName: Sorted.PRO.SDK.DataTypes.Orders.Order.UpdateOrderRequest
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderAsync
  name: UpdateOrderAsync
  nameWithType: IOrderService.UpdateOrderAsync
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderAsync
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackages*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackages
  name: AddOrderPackages
  nameWithType: IOrderService.AddOrderPackages
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackages
- uid: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest
  commentId: T:Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest
  parent: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage
  name: AddUpdateOrderPackagesRequest
  nameWithType: AddUpdateOrderPackagesRequest
  fullName: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.AddUpdateOrderPackagesRequest
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage
  commentId: N:Sorted.PRO.SDK.DataTypes.Orders.OrderPackage
  name: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage
  nameWithType: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage
  fullName: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackagesAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackagesAsync
  name: AddOrderPackagesAsync
  nameWithType: IOrderService.AddOrderPackagesAsync
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackagesAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackages*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackages
  name: UpdateOrderPackages
  nameWithType: IOrderService.UpdateOrderPackages
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackages
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackagesAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackagesAsync
  name: UpdateOrderPackagesAsync
  nameWithType: IOrderService.UpdateOrderPackagesAsync
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackagesAsync
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItems*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItems
  name: AddOrderPackageItems
  nameWithType: IOrderService.AddOrderPackageItems
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItems
- uid: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest
  commentId: T:Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest
  parent: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem
  name: AddUpdateOrderPackageItemsRequest
  nameWithType: AddUpdateOrderPackageItemsRequest
  fullName: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.AddUpdateOrderPackageItemsRequest
- uid: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem
  commentId: N:Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem
  name: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem
  nameWithType: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem
  fullName: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItemsAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItemsAsync
  name: AddOrderPackageItemsAsync
  nameWithType: IOrderService.AddOrderPackageItemsAsync
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.AddOrderPackageItemsAsync
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItems*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItems
  name: UpdateOrderPackageItems
  nameWithType: IOrderService.UpdateOrderPackageItems
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItems
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItemsAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItemsAsync
  name: UpdateOrderPackageItemsAsync
  nameWithType: IOrderService.UpdateOrderPackageItemsAsync
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.UpdateOrderPackageItemsAsync
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackages*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackages
  name: DeleteOrderPackages
  nameWithType: IOrderService.DeleteOrderPackages
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackages
- uid: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest
  commentId: T:Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest
  parent: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage
  name: DeleteOrderPackagesRequest
  nameWithType: DeleteOrderPackagesRequest
  fullName: Sorted.PRO.SDK.DataTypes.Orders.OrderPackage.DeleteOrderPackagesRequest
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackagesAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackagesAsync
  name: DeleteOrderPackagesAsync
  nameWithType: IOrderService.DeleteOrderPackagesAsync
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackagesAsync
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItems*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItems
  name: DeleteOrderPackageItems
  nameWithType: IOrderService.DeleteOrderPackageItems
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItems
- uid: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest
  commentId: T:Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest
  parent: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem
  name: DeleteOrderPackageItemsRequest
  nameWithType: DeleteOrderPackageItemsRequest
  fullName: Sorted.PRO.SDK.DataTypes.Orders.OrderPackageItem.DeleteOrderPackageItemsRequest
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItemsAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItemsAsync
  name: DeleteOrderPackageItemsAsync
  nameWithType: IOrderService.DeleteOrderPackageItemsAsync
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.DeleteOrderPackageItemsAsync
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrders*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrders
  name: GetConsignmentsForOrders
  nameWithType: IOrderService.GetConsignmentsForOrders
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrders
- uid: Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest
  commentId: T:Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest
  parent: Sorted.PRO.SDK.DataTypes.Orders.Order
  name: OrderConsignmentsRequest
  nameWithType: OrderConsignmentsRequest
  fullName: Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsRequest
- uid: Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse
  commentId: T:Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse
  parent: Sorted.PRO.SDK.DataTypes.Orders.Order
  name: OrderConsignmentsResponse
  nameWithType: OrderConsignmentsResponse
  fullName: Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse
- uid: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrdersAsync*
  commentId: Overload:Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrdersAsync
  name: GetConsignmentsForOrdersAsync
  nameWithType: IOrderService.GetConsignmentsForOrdersAsync
  fullName: Sorted.PRO.SDK.Interfaces.Services.IOrderService.GetConsignmentsForOrdersAsync
- uid: System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse}
  commentId: T:System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OrderConsignmentsResponse>
  nameWithType: Task<OrderConsignmentsResponse>
  fullName: System.Threading.Tasks.Task<Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse>
  nameWithType.vb: Task(Of OrderConsignmentsResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse)
  name.vb: Task(Of OrderConsignmentsResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse
    name: OrderConsignmentsResponse
    nameWithType: OrderConsignmentsResponse
    fullName: Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse
    name: OrderConsignmentsResponse
    nameWithType: OrderConsignmentsResponse
    fullName: Sorted.PRO.SDK.DataTypes.Orders.Order.OrderConsignmentsResponse
  - name: )
    nameWithType: )
    fullName: )
