### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  commentId: T:Sorted.PRO.SDK.DataTypes.Quotes.Quote
  id: Quote
  parent: Sorted.PRO.SDK.DataTypes.Quotes
  children:
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.#ctor
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.BasePrice
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierAccountOwner
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierReference
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.CollectionDate
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReference
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReferenceProvidedByCustomer
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.CreationDate
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.DestinationAddress
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.EarliestDeliveryDate
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.ExpiryDate
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.IsElectioService
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.LatestDeliveryDate
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.Legs
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierService
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceReference
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceSource
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.OriginAddress
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.Price
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.QuoteReference
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.Requestor
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.ServiceDirection
  - Sorted.PRO.SDK.DataTypes.Quotes.Quote.Surcharges
  langs:
  - csharp
  - vb
  name: Quote
  nameWithType: Quote
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Quote
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 18
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nRepresents a quote for carriage of a consignment with a specific MPD Carrier Service\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      [DataContractType("Quote", "Represents a quote for carriage of a consignment with a specific carrier service.")]

      [Serializable]

      public class Quote
    content.vb: >-
      <DataContract>

      <DataContractType("Quote", "Represents a quote for carriage of a consignment with a specific carrier service.")>

      <Serializable>

      Public Class Quote
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractType.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Quote
    - type: System.String
      value: Represents a quote for carriage of a consignment with a specific carrier service.
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.QuoteReference
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.QuoteReference
  id: QuoteReference
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: QuoteReference
  nameWithType: Quote.QuoteReference
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.QuoteReference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: QuoteReference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 30
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the unique quote reference.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 0)]

      [DataContractItem("The unique reference for this quote item. Used to select this quote.", false, PropertyCollectionType.Single)]

      public Guid QuoteReference { get; set; }
    parameters: []
    return:
      type: System.Guid
      description: "\nThe quote reference.\n"
    content.vb: >-
      <DataMember(Order:=0)>

      <DataContractItem("The unique reference for this quote item. Used to select this quote.", False, PropertyCollectionType.Single)>

      Public Property QuoteReference As Guid
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.QuoteReference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 0
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The unique reference for this quote item. Used to select this quote.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Requestor
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.Requestor
  id: Requestor
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: Requestor
  nameWithType: Quote.Requestor
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Requestor
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Requestor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 40
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the name of the requestor.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 3)]

      [DataContractItem("The name of the requestor.", false, PropertyCollectionType.Single)]

      public string Requestor { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe requestor.\n"
    content.vb: >-
      <DataMember(Order:=3)>

      <DataContractItem("The name of the requestor.", False, PropertyCollectionType.Single)>

      Public Property Requestor As String
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Requestor*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 3
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The name of the requestor.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CreationDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.CreationDate
  id: CreationDate
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: CreationDate
  nameWithType: Quote.CreationDate
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CreationDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CreationDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 50
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the creation date.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 1)]

      [DataContractItem("The date/time of creation.", false, PropertyCollectionType.Single)]

      public DateTimeOffset CreationDate { get; set; }
    parameters: []
    return:
      type: System.DateTimeOffset
      description: "\nThe creation date.\n"
    content.vb: >-
      <DataMember(Order:=1)>

      <DataContractItem("The date/time of creation.", False, PropertyCollectionType.Single)>

      Public Property CreationDate As DateTimeOffset
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CreationDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 1
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The date/time of creation.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ExpiryDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.ExpiryDate
  id: ExpiryDate
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: ExpiryDate
  nameWithType: Quote.ExpiryDate
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ExpiryDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ExpiryDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 78
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the expiry date.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 2)]

      [DataContractItem("The date/time after which this quote has expired.", false, PropertyCollectionType.Single)]

      public DateTimeOffset ExpiryDate { get; set; }
    parameters: []
    return:
      type: System.DateTimeOffset
      description: "\nThe expiry date.\n"
    content.vb: >-
      <DataMember(Order:=2)>

      <DataContractItem("The date/time after which this quote has expired.", False, PropertyCollectionType.Single)>

      Public Property ExpiryDate As DateTimeOffset
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ExpiryDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 2
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The date/time after which this quote has expired.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReference
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReference
  id: ConsignmentReference
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: ConsignmentReference
  nameWithType: Quote.ConsignmentReference
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ConsignmentReference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 105
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the consignment reference.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 4)]

      [DataContractItem("The reference of the consignment to which this quote applies.", false, PropertyCollectionType.Single)]

      public string ConsignmentReference { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe consignment reference.\n"
    content.vb: >-
      <DataMember(Order:=4)>

      <DataContractItem("The reference of the consignment to which this quote applies.", False, PropertyCollectionType.Single)>

      Public Property ConsignmentReference As String
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 4
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The reference of the consignment to which this quote applies.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReferenceProvidedByCustomer
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReferenceProvidedByCustomer
  id: ConsignmentReferenceProvidedByCustomer
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: ConsignmentReferenceProvidedByCustomer
  nameWithType: Quote.ConsignmentReferenceProvidedByCustomer
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReferenceProvidedByCustomer
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ConsignmentReferenceProvidedByCustomer
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 115
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the consignment reference provided by customer.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 5)]

      [DataContractItem("The customer-provided reference for the consignment to which this quote applies.", false, PropertyCollectionType.Single)]

      public string ConsignmentReferenceProvidedByCustomer { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe consignment reference provided by customer.\n"
    content.vb: >-
      <DataMember(Order:=5)>

      <DataContractItem("The customer-provided reference for the consignment to which this quote applies.", False, PropertyCollectionType.Single)>

      Public Property ConsignmentReferenceProvidedByCustomer As String
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReferenceProvidedByCustomer*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 5
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The customer-provided reference for the consignment to which this quote applies.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceReference
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceReference
  id: MpdCarrierServiceReference
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: MpdCarrierServiceReference
  nameWithType: Quote.MpdCarrierServiceReference
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceReference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: MpdCarrierServiceReference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 125
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the MPD carrier service reference.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Order = 6)]

      [DataContractItem("The MPD carrier service reference for this quote.", false, PropertyCollectionType.Single)]

      public string MpdCarrierServiceReference { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe MPD carrier service reference.\n"
    content.vb: >-
      <DataMember(Order:=6)>

      <DataContractItem("The MPD carrier service reference for this quote.", False, PropertyCollectionType.Single)>

      Public Property MpdCarrierServiceReference As String
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceReference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 6
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The MPD carrier service reference for this quote.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceSource
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceSource
  id: MpdCarrierServiceSource
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: MpdCarrierServiceSource
  nameWithType: Quote.MpdCarrierServiceSource
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceSource
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: MpdCarrierServiceSource
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 135
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the MPD carrier service source.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The source of the MPD carrier service for this quote.", false, PropertyCollectionType.Single)]

      public MpdCarrierServiceSource MpdCarrierServiceSource { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Common.MpdCarrierServiceSource
      description: "\nThe MPD carrier service source.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The source of the MPD carrier service for this quote.", False, PropertyCollectionType.Single)>

      Public Property MpdCarrierServiceSource As MpdCarrierServiceSource
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceSource*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The source of the MPD carrier service for this quote.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierService
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierService
  id: MpdCarrierService
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: MpdCarrierService
  nameWithType: Quote.MpdCarrierService
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierService
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: MpdCarrierService
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 145
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the MPD carrier service.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The MPD carrier service name for this quote.", false, PropertyCollectionType.Single)]

      public string MpdCarrierService { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe MPD carrier service.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The MPD carrier service name for this quote.", False, PropertyCollectionType.Single)>

      Public Property MpdCarrierService As String
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierService*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The MPD carrier service name for this quote.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierReference
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierReference
  id: CarrierReference
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: CarrierReference
  nameWithType: Quote.CarrierReference
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierReference
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CarrierReference
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 155
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the carrier reference.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The carrier reference for this quote.", false, PropertyCollectionType.Single)]

      public string CarrierReference { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe carrier reference.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The carrier reference for this quote.", False, PropertyCollectionType.Single)>

      Public Property CarrierReference As String
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierReference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The carrier reference for this quote.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.OriginAddress
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.OriginAddress
  id: OriginAddress
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: OriginAddress
  nameWithType: Quote.OriginAddress
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.OriginAddress
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: OriginAddress
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 167
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the origin address - the address from which the carrier\nwill collect the consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The origin address that this quote is based upon.", false, PropertyCollectionType.Single)]

      public Address OriginAddress { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Common.Address
      description: "\nThe origin address.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The origin address that this quote is based upon.", False, PropertyCollectionType.Single)>

      Public Property OriginAddress As Address
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.OriginAddress*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The origin address that this quote is based upon.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.DestinationAddress
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.DestinationAddress
  id: DestinationAddress
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: DestinationAddress
  nameWithType: Quote.DestinationAddress
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.DestinationAddress
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: DestinationAddress
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 178
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the destination address - the address to which the carrier\nwill deliver the consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The destination address that this quote is based upon.", false, PropertyCollectionType.Single)]

      public Address DestinationAddress { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Common.Address
      description: "\nThe destination address.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The destination address that this quote is based upon.", False, PropertyCollectionType.Single)>

      Public Property DestinationAddress As Address
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.DestinationAddress*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The destination address that this quote is based upon.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CollectionDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.CollectionDate
  id: CollectionDate
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: CollectionDate
  nameWithType: Quote.CollectionDate
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CollectionDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CollectionDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 189
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the collection date - the date on which the carrier will\ncollect the consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The collection date for this quote.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? CollectionDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\nThe collection date.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The collection date for this quote.", False, PropertyCollectionType.Single)>

      Public Property CollectionDate As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CollectionDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The collection date for this quote.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.EarliestDeliveryDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.EarliestDeliveryDate
  id: EarliestDeliveryDate
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: EarliestDeliveryDate
  nameWithType: Quote.EarliestDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.EarliestDeliveryDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: EarliestDeliveryDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 211
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the earliest delivery date - the earliest date on which the \ncarrier will deliver the consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The earliest delivery date for this quote.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? EarliestDeliveryDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\nThe earliest delivery date.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The earliest delivery date for this quote.", False, PropertyCollectionType.Single)>

      Public Property EarliestDeliveryDate As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.EarliestDeliveryDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The earliest delivery date for this quote.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.LatestDeliveryDate
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.LatestDeliveryDate
  id: LatestDeliveryDate
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: LatestDeliveryDate
  nameWithType: Quote.LatestDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.LatestDeliveryDate
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: LatestDeliveryDate
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 233
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the latest delivery date - the latest date on which the carrier\nwill deliver the consignment.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The latest delivery date for this quote.", false, PropertyCollectionType.Single)]

      public DateTimeOffset? LatestDeliveryDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\nThe latest delivery date.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The latest delivery date for this quote.", False, PropertyCollectionType.Single)>

      Public Property LatestDeliveryDate As DateTimeOffset?
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.LatestDeliveryDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The latest delivery date for this quote.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.BasePrice
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.BasePrice
  id: BasePrice
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: BasePrice
  nameWithType: Quote.BasePrice
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.BasePrice
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: BasePrice
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 255
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the base price - the base price exclusive of any additional\nsurcharges that may be applicable.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The base price for this quote - exclusive of any additional surcharges that may be applicable.", false, PropertyCollectionType.Single)]

      public Rate BasePrice { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Rates.Rate
      description: "\nThe base price.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The base price for this quote - exclusive of any additional surcharges that may be applicable.", False, PropertyCollectionType.Single)>

      Public Property BasePrice As Rate
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.BasePrice*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The base price for this quote - exclusive of any additional surcharges that may be applicable.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Price
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.Price
  id: Price
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: Quote.Price
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Price
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Price
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 265
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the total price for the Quote.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The total applicable price for this quote - inclusive of any surcharges.", false, PropertyCollectionType.Single)]

      public Rate Price { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Rates.Rate
      description: "\nThe price.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The total applicable price for this quote - inclusive of any surcharges.", False, PropertyCollectionType.Single)>

      Public Property Price As Rate
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Price*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The total applicable price for this quote - inclusive of any surcharges.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Surcharges
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.Surcharges
  id: Surcharges
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: Surcharges
  nameWithType: Quote.Surcharges
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Surcharges
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Surcharges
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 277
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the surcharges - any surcharges that may be\napplicable to the quote due to parcel dimensions or collection or delivery\nlocations etc.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("All applicable surcharges for this quote.", PropertyCollectionType.Collection)]

      public List<QuoteSurcharge> Surcharges { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Quotes.QuoteSurcharge}
      description: "\nThe surcharges.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("All applicable surcharges for this quote.", PropertyCollectionType.Collection)>

      Public Property Surcharges As List(Of QuoteSurcharge)
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Surcharges*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: All applicable surcharges for this quote.
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Legs
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.Legs
  id: Legs
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: Legs
  nameWithType: Quote.Legs
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Legs
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: Legs
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 287
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets the legs.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("All legs for this quote.", PropertyCollectionType.Collection)]

      public List<Leg> Legs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Leg}
      description: "\nThe legs.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("All legs for this quote.", PropertyCollectionType.Collection)>

      Public ReadOnly Property Legs As List(Of Leg)
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Legs*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: All legs for this quote.
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 1
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierAccountOwner
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierAccountOwner
  id: CarrierAccountOwner
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: CarrierAccountOwner
  nameWithType: Quote.CarrierAccountOwner
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierAccountOwner
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: CarrierAccountOwner
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 297
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets the carrier account owner.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("The carrier account owner for this quote.", false, PropertyCollectionType.Single)]

      public string CarrierAccountOwner { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe carrier account owner.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("The carrier account owner for this quote.", False, PropertyCollectionType.Single)>

      Public Property CarrierAccountOwner As String
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierAccountOwner*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: The carrier account owner for this quote.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.IsElectioService
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.IsElectioService
  id: IsElectioService
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: IsElectioService
  nameWithType: Quote.IsElectioService
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.IsElectioService
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: IsElectioService
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 307
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets a value indicating whether this instance is an Electio service.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("Indicates whether the service for this quote is an Electio service.", false, PropertyCollectionType.Single)]

      public bool IsElectioService { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is an Electio service; otherwise, <code>false</code>.\n"
    content.vb: >-
      <DataMember>

      <DataContractItem("Indicates whether the service for this quote is an Electio service.", False, PropertyCollectionType.Single)>

      Public Property IsElectioService As Boolean
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.IsElectioService*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: Indicates whether the service for this quote is an Electio service.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ServiceDirection
  commentId: P:Sorted.PRO.SDK.DataTypes.Quotes.Quote.ServiceDirection
  id: ServiceDirection
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: ServiceDirection
  nameWithType: Quote.ServiceDirection
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ServiceDirection
  type: Property
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: ServiceDirection
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 314
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nGets or sets a value indicating the direction of travel for the MPD Carrier Service for this quote.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DataContractItem("Indicates the direction of travel for the MPD Carrier Service.", false, PropertyCollectionType.Single)]

      public ServiceDirection ServiceDirection { get; set; }
    parameters: []
    return:
      type: Sorted.PRO.SDK.DataTypes.Common.Enums.ServiceDirection
    content.vb: >-
      <DataMember>

      <DataContractItem("Indicates the direction of travel for the MPD Carrier Service.", False, PropertyCollectionType.Single)>

      Public Property ServiceDirection As ServiceDirection
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ServiceDirection*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem
    ctor: Sorted.PRO.SDK.Shared.Attributes.Documentation.DataContractItem.#ctor(System.String,System.Boolean,Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType)
    arguments:
    - type: System.String
      value: Indicates the direction of travel for the MPD Carrier Service.
    - type: System.Boolean
      value: false
    - type: Sorted.PRO.SDK.Shared.Attributes.Documentation.Enums.PropertyCollectionType
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.#ctor
  commentId: M:Sorted.PRO.SDK.DataTypes.Quotes.Quote.#ctor
  id: '#ctor'
  parent: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  langs:
  - csharp
  - vb
  name: Quote()
  nameWithType: Quote.Quote()
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Quote()
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.DataTypes.Quotes/Quote.cs
    startLine: 321
  assemblies:
  - Sorted.PRO.SDK.DataTypes.Quotes
  namespace: Sorted.PRO.SDK.DataTypes.Quotes
  summary: "\nInitializes a new instance of the <xref href=\"Sorted.PRO.SDK.DataTypes.Quotes.Quote\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Quote()
    content.vb: Public Sub New
  overload: Sorted.PRO.SDK.DataTypes.Quotes.Quote.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sorted.PRO.SDK.DataTypes.Quotes
  commentId: N:Sorted.PRO.SDK.DataTypes.Quotes
  name: Sorted.PRO.SDK.DataTypes.Quotes
  nameWithType: Sorted.PRO.SDK.DataTypes.Quotes
  fullName: Sorted.PRO.SDK.DataTypes.Quotes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.QuoteReference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.QuoteReference
  name: QuoteReference
  nameWithType: Quote.QuoteReference
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.QuoteReference
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Requestor*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.Requestor
  name: Requestor
  nameWithType: Quote.Requestor
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Requestor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CreationDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.CreationDate
  name: CreationDate
  nameWithType: Quote.CreationDate
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CreationDate
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ExpiryDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.ExpiryDate
  name: ExpiryDate
  nameWithType: Quote.ExpiryDate
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ExpiryDate
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReference
  name: ConsignmentReference
  nameWithType: Quote.ConsignmentReference
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReference
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReferenceProvidedByCustomer*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReferenceProvidedByCustomer
  name: ConsignmentReferenceProvidedByCustomer
  nameWithType: Quote.ConsignmentReferenceProvidedByCustomer
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ConsignmentReferenceProvidedByCustomer
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceReference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceReference
  name: MpdCarrierServiceReference
  nameWithType: Quote.MpdCarrierServiceReference
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceReference
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceSource*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceSource
  name: MpdCarrierServiceSource
  nameWithType: Quote.MpdCarrierServiceSource
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierServiceSource
- uid: Sorted.PRO.SDK.DataTypes.Common.MpdCarrierServiceSource
  commentId: T:Sorted.PRO.SDK.DataTypes.Common.MpdCarrierServiceSource
  parent: Sorted.PRO.SDK.DataTypes.Common
  name: MpdCarrierServiceSource
  nameWithType: MpdCarrierServiceSource
  fullName: Sorted.PRO.SDK.DataTypes.Common.MpdCarrierServiceSource
- uid: Sorted.PRO.SDK.DataTypes.Common
  commentId: N:Sorted.PRO.SDK.DataTypes.Common
  name: Sorted.PRO.SDK.DataTypes.Common
  nameWithType: Sorted.PRO.SDK.DataTypes.Common
  fullName: Sorted.PRO.SDK.DataTypes.Common
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierService*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierService
  name: MpdCarrierService
  nameWithType: Quote.MpdCarrierService
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.MpdCarrierService
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierReference*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierReference
  name: CarrierReference
  nameWithType: Quote.CarrierReference
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierReference
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.OriginAddress*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.OriginAddress
  name: OriginAddress
  nameWithType: Quote.OriginAddress
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.OriginAddress
- uid: Sorted.PRO.SDK.DataTypes.Common.Address
  commentId: T:Sorted.PRO.SDK.DataTypes.Common.Address
  parent: Sorted.PRO.SDK.DataTypes.Common
  name: Address
  nameWithType: Address
  fullName: Sorted.PRO.SDK.DataTypes.Common.Address
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.DestinationAddress*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.DestinationAddress
  name: DestinationAddress
  nameWithType: Quote.DestinationAddress
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.DestinationAddress
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CollectionDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.CollectionDate
  name: CollectionDate
  nameWithType: Quote.CollectionDate
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CollectionDate
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.EarliestDeliveryDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.EarliestDeliveryDate
  name: EarliestDeliveryDate
  nameWithType: Quote.EarliestDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.EarliestDeliveryDate
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.LatestDeliveryDate*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.LatestDeliveryDate
  name: LatestDeliveryDate
  nameWithType: Quote.LatestDeliveryDate
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.LatestDeliveryDate
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.BasePrice*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.BasePrice
  name: BasePrice
  nameWithType: Quote.BasePrice
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.BasePrice
- uid: Sorted.PRO.SDK.DataTypes.Rates.Rate
  commentId: T:Sorted.PRO.SDK.DataTypes.Rates.Rate
  parent: Sorted.PRO.SDK.DataTypes.Rates
  name: Rate
  nameWithType: Rate
  fullName: Sorted.PRO.SDK.DataTypes.Rates.Rate
- uid: Sorted.PRO.SDK.DataTypes.Rates
  commentId: N:Sorted.PRO.SDK.DataTypes.Rates
  name: Sorted.PRO.SDK.DataTypes.Rates
  nameWithType: Sorted.PRO.SDK.DataTypes.Rates
  fullName: Sorted.PRO.SDK.DataTypes.Rates
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Price*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.Price
  name: Price
  nameWithType: Quote.Price
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Price
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Surcharges*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.Surcharges
  name: Surcharges
  nameWithType: Quote.Surcharges
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Surcharges
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Quotes.QuoteSurcharge}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Quotes.QuoteSurcharge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<QuoteSurcharge>
  nameWithType: List<QuoteSurcharge>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Quotes.QuoteSurcharge>
  nameWithType.vb: List(Of QuoteSurcharge)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Quotes.QuoteSurcharge)
  name.vb: List(Of QuoteSurcharge)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Quotes.QuoteSurcharge
    name: QuoteSurcharge
    nameWithType: QuoteSurcharge
    fullName: Sorted.PRO.SDK.DataTypes.Quotes.QuoteSurcharge
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Quotes.QuoteSurcharge
    name: QuoteSurcharge
    nameWithType: QuoteSurcharge
    fullName: Sorted.PRO.SDK.DataTypes.Quotes.QuoteSurcharge
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Legs*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.Legs
  name: Legs
  nameWithType: Quote.Legs
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Legs
- uid: System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Leg}
  commentId: T:System.Collections.Generic.List{Sorted.PRO.SDK.DataTypes.Common.Leg}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Leg>
  nameWithType: List<Leg>
  fullName: System.Collections.Generic.List<Sorted.PRO.SDK.DataTypes.Common.Leg>
  nameWithType.vb: List(Of Leg)
  fullName.vb: System.Collections.Generic.List(Of Sorted.PRO.SDK.DataTypes.Common.Leg)
  name.vb: List(Of Leg)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Common.Leg
    name: Leg
    nameWithType: Leg
    fullName: Sorted.PRO.SDK.DataTypes.Common.Leg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Common.Leg
    name: Leg
    nameWithType: Leg
    fullName: Sorted.PRO.SDK.DataTypes.Common.Leg
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierAccountOwner*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierAccountOwner
  name: CarrierAccountOwner
  nameWithType: Quote.CarrierAccountOwner
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.CarrierAccountOwner
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.IsElectioService*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.IsElectioService
  name: IsElectioService
  nameWithType: Quote.IsElectioService
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.IsElectioService
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ServiceDirection*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.ServiceDirection
  name: ServiceDirection
  nameWithType: Quote.ServiceDirection
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.ServiceDirection
- uid: Sorted.PRO.SDK.DataTypes.Common.Enums.ServiceDirection
  commentId: T:Sorted.PRO.SDK.DataTypes.Common.Enums.ServiceDirection
  parent: Sorted.PRO.SDK.DataTypes.Common.Enums
  name: ServiceDirection
  nameWithType: ServiceDirection
  fullName: Sorted.PRO.SDK.DataTypes.Common.Enums.ServiceDirection
- uid: Sorted.PRO.SDK.DataTypes.Common.Enums
  commentId: N:Sorted.PRO.SDK.DataTypes.Common.Enums
  name: Sorted.PRO.SDK.DataTypes.Common.Enums
  nameWithType: Sorted.PRO.SDK.DataTypes.Common.Enums
  fullName: Sorted.PRO.SDK.DataTypes.Common.Enums
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote
  commentId: T:Sorted.PRO.SDK.DataTypes.Quotes.Quote
  parent: Sorted.PRO.SDK.DataTypes.Quotes
  name: Quote
  nameWithType: Quote
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote
- uid: Sorted.PRO.SDK.DataTypes.Quotes.Quote.#ctor*
  commentId: Overload:Sorted.PRO.SDK.DataTypes.Quotes.Quote.#ctor
  name: Quote
  nameWithType: Quote.Quote
  fullName: Sorted.PRO.SDK.DataTypes.Quotes.Quote.Quote
