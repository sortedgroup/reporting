### YamlMime:ManagedReference
items:
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService
  commentId: T:Sorted.PRO.SDK.Labels.LegacyLabelService
  id: LegacyLabelService
  parent: Sorted.PRO.SDK.Labels
  children:
  - Sorted.PRO.SDK.Labels.LegacyLabelService.#ctor(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})
  - Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel(System.String,System.String)
  - Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  - Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync(System.String,System.String)
  - Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  - Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels(System.String)
  - Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  - Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync(System.String)
  - Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  langs:
  - csharp
  - vb
  name: LegacyLabelService
  nameWithType: LegacyLabelService
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService
  type: Class
  source:
    remote:
      path: Sorted.PRO.SDK.Labels/LegacyLabelService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: LegacyLabelService
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Labels/LegacyLabelService.cs
    startLine: 16
  assemblies:
  - Sorted.PRO.SDK.Labels
  namespace: Sorted.PRO.SDK.Labels
  summary: "\n<p>Retrieves package and consignment labels.</p> \n<p><strong>Note:</strong> This service is <em>now deprecated</em>. Please use <a href=\"Sorted.PRO.SDK.Labels.LabelService.html\">LabelService</a> instead.</p>\n"
  example: []
  syntax:
    content: 'public class LegacyLabelService : BaseService, ILegacyLabelService'
    content.vb: >-
      Public Class LegacyLabelService
          Inherits BaseService
          Implements ILegacyLabelService
  inheritance:
  - System.Object
  - Sorted.PRO.SDK.Shared.BaseService
  implements:
  - Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
  inheritedMembers:
  - Sorted.PRO.SDK.Shared.BaseService.VERSION
  - Sorted.PRO.SDK.Shared.BaseService.Rest
  - Sorted.PRO.SDK.Shared.BaseService.Log
  - Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,System.String)
  - Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{{TReturn}})
  - Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.#ctor(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Sorted.PRO.SDK.Labels.LegacyLabelService.#ctor(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})
  id: '#ctor(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory,Sorted.PRO.SDK.Shared.Interfaces.ILogger,System.Collections.Generic.Dictionary{System.String,System.String})'
  parent: Sorted.PRO.SDK.Labels.LegacyLabelService
  langs:
  - csharp
  - vb
  name: LegacyLabelService(String, IEndpoints, IHttpClientFactory, ILogger, Dictionary<String, String>)
  nameWithType: LegacyLabelService.LegacyLabelService(String, IEndpoints, IHttpClientFactory, ILogger, Dictionary<String, String>)
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.LegacyLabelService(System.String, Sorted.PRO.SDK.Shared.Interfaces.IEndpoints, Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory, Sorted.PRO.SDK.Shared.Interfaces.ILogger, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: Sorted.PRO.SDK.Labels/LegacyLabelService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: .ctor
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Labels/LegacyLabelService.cs
    startLine: 27
  assemblies:
  - Sorted.PRO.SDK.Labels
  namespace: Sorted.PRO.SDK.Labels
  summary: "\nService for retrieving despatch labels\n"
  example: []
  syntax:
    content: public LegacyLabelService(string apiKey, IEndpoints endpoints, IHttpClientFactory httpClientFactory, ILogger log, Dictionary<string, string> optionalHeaders = null)
    parameters:
    - id: apiKey
      type: System.String
      description: The API key of the user making the request
    - id: endpoints
      type: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
      description: An instance of <xref href="Sorted.PRO.SDK.Interfaces.IEndpoints" data-throw-if-not-resolved="false"></xref>
    - id: httpClientFactory
      type: Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
      description: Provides a re-usable instance of <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref>
    - id: log
      type: Sorted.PRO.SDK.Shared.Interfaces.ILogger
      description: A logger implementing <xref href="Sorted.PRO.SDK.Interfaces.ILogger" data-throw-if-not-resolved="false"></xref>
    - id: optionalHeaders
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Represents a collection of keys and values
    content.vb: Public Sub New(apiKey As String, endpoints As IEndpoints, httpClientFactory As IHttpClientFactory, log As ILogger, optionalHeaders As Dictionary(Of String, String) = Nothing)
  overload: Sorted.PRO.SDK.Labels.LegacyLabelService.#ctor*
  nameWithType.vb: LegacyLabelService.LegacyLabelService(String, IEndpoints, IHttpClientFactory, ILogger, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sorted.PRO.SDK.Labels.LegacyLabelService.LegacyLabelService(System.String, Sorted.PRO.SDK.Shared.Interfaces.IEndpoints, Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory, Sorted.PRO.SDK.Shared.Interfaces.ILogger, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: LegacyLabelService(String, IEndpoints, IHttpClientFactory, ILogger, Dictionary(Of String, String))
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels(System.String)
  commentId: M:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels(System.String)
  id: GetLabels(System.String)
  parent: Sorted.PRO.SDK.Labels.LegacyLabelService
  langs:
  - csharp
  - vb
  name: GetLabels(String)
  nameWithType: LegacyLabelService.GetLabels(String)
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels(System.String)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Labels/LegacyLabelService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetLabels
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Labels/LegacyLabelService.cs
    startLine: 37
  assemblies:
  - Sorted.PRO.SDK.Labels
  namespace: Sorted.PRO.SDK.Labels
  summary: "\nReturns labels for the specified consignment reference.\n"
  example: []
  syntax:
    content: >-
      [ApiEndpoint("Get Labels", "Returns labels for the specified consignment.", "Labels", typeof(GetLabelsResponse), "/labels/{consignmentReference:string}", "GET", null)]

      [Obsolete("Deprecated Use Async equivalent")]

      public GetLabelsResponse GetLabels(string consignmentReference)
    parameters:
    - id: consignmentReference
      type: System.String
      description: The consignment reference to retrieve labels for
    return:
      type: Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse
      description: Label data for all packages in the consignment
    content.vb: >-
      <ApiEndpoint("Get Labels", "Returns labels for the specified consignment.", "Labels", GetType(GetLabelsResponse), "/labels/{consignmentReference:string}", "GET", Nothing)>

      <Obsolete("Deprecated Use Async equivalent")>

      Public Function GetLabels(consignmentReference As String) As GetLabelsResponse
  overload: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels*
  implements:
  - Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  commentId: M:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  id: GetLabels(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  parent: Sorted.PRO.SDK.Labels.LegacyLabelService
  langs:
  - csharp
  - vb
  name: GetLabels(String, LegacyLabelFormat)
  nameWithType: LegacyLabelService.GetLabels(String, LegacyLabelFormat)
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels(System.String, Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Labels/LegacyLabelService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetLabels
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Labels/LegacyLabelService.cs
    startLine: 56
  assemblies:
  - Sorted.PRO.SDK.Labels
  namespace: Sorted.PRO.SDK.Labels
  summary: "\nReturns labels for the specified consignment reference, in the specified format.\n"
  example: []
  syntax:
    content: >-
      [ApiEndpoint("Get Labels", "Returns labels for the specified consignment.", "Labels", typeof(GetLabelsResponse), "/labels/{consignmentReference:string}/{labelFormat:string}", "GET", null)]

      [Obsolete("Deprecated Use Async equivalent")]

      public GetLabelsResponse GetLabels(string consignmentReference, LegacyLabelFormat labelFormat)
    parameters:
    - id: consignmentReference
      type: System.String
      description: The consignment reference to retrieve labels for
    - id: labelFormat
      type: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
      description: The format to output the labels in.
    return:
      type: Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse
      description: Label data for all packages in the consignment
    content.vb: >-
      <ApiEndpoint("Get Labels", "Returns labels for the specified consignment.", "Labels", GetType(GetLabelsResponse), "/labels/{consignmentReference:string}/{labelFormat:string}", "GET", Nothing)>

      <Obsolete("Deprecated Use Async equivalent")>

      Public Function GetLabels(consignmentReference As String, labelFormat As LegacyLabelFormat) As GetLabelsResponse
  overload: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels*
  implements:
  - Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync(System.String)
  commentId: M:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync(System.String)
  id: GetLabelsAsync(System.String)
  parent: Sorted.PRO.SDK.Labels.LegacyLabelService
  langs:
  - csharp
  - vb
  name: GetLabelsAsync(String)
  nameWithType: LegacyLabelService.GetLabelsAsync(String)
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync(System.String)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Labels/LegacyLabelService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetLabelsAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Labels/LegacyLabelService.cs
    startLine: 74
  assemblies:
  - Sorted.PRO.SDK.Labels
  namespace: Sorted.PRO.SDK.Labels
  summary: "\nReturns labels for the specified consignment reference.\n"
  example: []
  syntax:
    content: public Task<GetLabelsResponse> GetLabelsAsync(string consignmentReference)
    parameters:
    - id: consignmentReference
      type: System.String
      description: The consignment reference to retrieve labels for
    return:
      type: System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse}
      description: Label data for all packages in the consignment
    content.vb: Public Function GetLabelsAsync(consignmentReference As String) As Task(Of GetLabelsResponse)
  overload: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync*
  implements:
  - Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  commentId: M:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  id: GetLabelsAsync(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  parent: Sorted.PRO.SDK.Labels.LegacyLabelService
  langs:
  - csharp
  - vb
  name: GetLabelsAsync(String, LegacyLabelFormat)
  nameWithType: LegacyLabelService.GetLabelsAsync(String, LegacyLabelFormat)
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync(System.String, Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Labels/LegacyLabelService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetLabelsAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Labels/LegacyLabelService.cs
    startLine: 85
  assemblies:
  - Sorted.PRO.SDK.Labels
  namespace: Sorted.PRO.SDK.Labels
  summary: "\nReturns labels for the specified consignment reference, in the specified format.\n"
  example: []
  syntax:
    content: public Task<GetLabelsResponse> GetLabelsAsync(string consignmentReference, LegacyLabelFormat labelFormat)
    parameters:
    - id: consignmentReference
      type: System.String
      description: The consignment reference to retrieve labels for
    - id: labelFormat
      type: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
      description: The format to output the labels in.
    return:
      type: System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse}
      description: Label data for all packages in the consignment
    content.vb: Public Function GetLabelsAsync(consignmentReference As String, labelFormat As LegacyLabelFormat) As Task(Of GetLabelsResponse)
  overload: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync*
  implements:
  - Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel(System.String,System.String)
  commentId: M:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel(System.String,System.String)
  id: GetLabel(System.String,System.String)
  parent: Sorted.PRO.SDK.Labels.LegacyLabelService
  langs:
  - csharp
  - vb
  name: GetLabel(String, String)
  nameWithType: LegacyLabelService.GetLabel(String, String)
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel(System.String, System.String)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Labels/LegacyLabelService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetLabel
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Labels/LegacyLabelService.cs
    startLine: 96
  assemblies:
  - Sorted.PRO.SDK.Labels
  namespace: Sorted.PRO.SDK.Labels
  summary: "\nReturns the label for an individual package within the specified consignment.\n"
  example: []
  syntax:
    content: >-
      [ApiEndpoint("Get Label", "Returns the label for the specified package.", "Labels", typeof(GetLabelsResponse), "/labels/package/{consignmentReference:string}/{packageReference:string}", "GET", null)]

      [Obsolete("Deprecated Use Async equivalent")]

      public GetLabelsResponse GetLabel(string consignmentReference, string packageReference)
    parameters:
    - id: consignmentReference
      type: System.String
      description: The consignment reference the package belongs to
    - id: packageReference
      type: System.String
      description: The package reference to retrieve a label for
    return:
      type: Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse
      description: Label data for the selected package
    content.vb: >-
      <ApiEndpoint("Get Label", "Returns the label for the specified package.", "Labels", GetType(GetLabelsResponse), "/labels/package/{consignmentReference:string}/{packageReference:string}", "GET", Nothing)>

      <Obsolete("Deprecated Use Async equivalent")>

      Public Function GetLabel(consignmentReference As String, packageReference As String) As GetLabelsResponse
  overload: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel*
  implements:
  - Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String,System.String)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  commentId: M:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  id: GetLabel(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  parent: Sorted.PRO.SDK.Labels.LegacyLabelService
  langs:
  - csharp
  - vb
  name: GetLabel(String, String, LegacyLabelFormat)
  nameWithType: LegacyLabelService.GetLabel(String, String, LegacyLabelFormat)
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel(System.String, System.String, Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Labels/LegacyLabelService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetLabel
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Labels/LegacyLabelService.cs
    startLine: 116
  assemblies:
  - Sorted.PRO.SDK.Labels
  namespace: Sorted.PRO.SDK.Labels
  summary: "\nReturns the label for an individual package within the specified consignment, in the specified format.\n"
  example: []
  syntax:
    content: >-
      [ApiEndpoint("Get Label", "Returns the label for the specified package.", "Labels", typeof(GetLabelsResponse), "/labels/package/{consignmentReference:string}/{packageReference:string}/{labelFormat:string}", "GET", null)]

      [Obsolete("Deprecated Use Async equivalent")]

      public GetLabelsResponse GetLabel(string consignmentReference, string packageReference, LegacyLabelFormat labelFormat)
    parameters:
    - id: consignmentReference
      type: System.String
      description: The consignment reference the package belongs to
    - id: packageReference
      type: System.String
      description: The package reference to retrieve a label for
    - id: labelFormat
      type: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
      description: The format to output the label in
    return:
      type: Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse
      description: Label data for the selected package
    content.vb: >-
      <ApiEndpoint("Get Label", "Returns the label for the specified package.", "Labels", GetType(GetLabelsResponse), "/labels/package/{consignmentReference:string}/{packageReference:string}/{labelFormat:string}", "GET", Nothing)>

      <Obsolete("Deprecated Use Async equivalent")>

      Public Function GetLabel(consignmentReference As String, packageReference As String, labelFormat As LegacyLabelFormat) As GetLabelsResponse
  overload: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel*
  implements:
  - Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated Use Async equivalent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync(System.String,System.String)
  commentId: M:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync(System.String,System.String)
  id: GetLabelAsync(System.String,System.String)
  parent: Sorted.PRO.SDK.Labels.LegacyLabelService
  langs:
  - csharp
  - vb
  name: GetLabelAsync(String, String)
  nameWithType: LegacyLabelService.GetLabelAsync(String, String)
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Labels/LegacyLabelService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetLabelAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Labels/LegacyLabelService.cs
    startLine: 135
  assemblies:
  - Sorted.PRO.SDK.Labels
  namespace: Sorted.PRO.SDK.Labels
  summary: "\nReturns the label for an individual package within the specified consignment.\n"
  example: []
  syntax:
    content: public Task<GetLabelsResponse> GetLabelAsync(string consignmentReference, string packageReference)
    parameters:
    - id: consignmentReference
      type: System.String
      description: The consignment reference the package belongs to
    - id: packageReference
      type: System.String
      description: The package reference to retrieve a label for
    return:
      type: System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse}
      description: Label data for the selected package
    content.vb: Public Function GetLabelAsync(consignmentReference As String, packageReference As String) As Task(Of GetLabelsResponse)
  overload: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync*
  implements:
  - Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  commentId: M:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  id: GetLabelAsync(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  parent: Sorted.PRO.SDK.Labels.LegacyLabelService
  langs:
  - csharp
  - vb
  name: GetLabelAsync(String, String, LegacyLabelFormat)
  nameWithType: LegacyLabelService.GetLabelAsync(String, String, LegacyLabelFormat)
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync(System.String, System.String, Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  type: Method
  source:
    remote:
      path: Sorted.PRO.SDK.Labels/LegacyLabelService.cs
      branch: doc-comments
      repo: git@bitbucket.org:mpdelectio/sorted.pro.sdk.git
    id: GetLabelAsync
    path: ../../sorted.pro.sdk/Sorted.PRO.SDK.Labels/LegacyLabelService.cs
    startLine: 147
  assemblies:
  - Sorted.PRO.SDK.Labels
  namespace: Sorted.PRO.SDK.Labels
  summary: "\nReturns the label for an individual package within the specified consignment, in the specified format.\n"
  example: []
  syntax:
    content: public Task<GetLabelsResponse> GetLabelAsync(string consignmentReference, string packageReference, LegacyLabelFormat labelFormat)
    parameters:
    - id: consignmentReference
      type: System.String
      description: The consignment reference the package belongs to
    - id: packageReference
      type: System.String
      description: The package reference to retrieve a label for
    - id: labelFormat
      type: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
      description: The format to output the label in
    return:
      type: System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse}
      description: Label data for the selected package
    content.vb: Public Function GetLabelAsync(consignmentReference As String, packageReference As String, labelFormat As LegacyLabelFormat) As Task(Of GetLabelsResponse)
  overload: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync*
  implements:
  - Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sorted.PRO.SDK.Labels
  commentId: N:Sorted.PRO.SDK.Labels
  name: Sorted.PRO.SDK.Labels
  nameWithType: Sorted.PRO.SDK.Labels
  fullName: Sorted.PRO.SDK.Labels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sorted.PRO.SDK.Shared.BaseService
  commentId: T:Sorted.PRO.SDK.Shared.BaseService
  parent: Sorted.PRO.SDK.Shared
  name: BaseService
  nameWithType: BaseService
  fullName: Sorted.PRO.SDK.Shared.BaseService
- uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
  commentId: T:Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
  parent: Sorted.PRO.SDK.Interfaces.Labels
  name: ILegacyLabelService
  nameWithType: ILegacyLabelService
  fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
- uid: Sorted.PRO.SDK.Shared.BaseService.VERSION
  commentId: F:Sorted.PRO.SDK.Shared.BaseService.VERSION
  parent: Sorted.PRO.SDK.Shared.BaseService
  name: VERSION
  nameWithType: BaseService.VERSION
  fullName: Sorted.PRO.SDK.Shared.BaseService.VERSION
- uid: Sorted.PRO.SDK.Shared.BaseService.Rest
  commentId: F:Sorted.PRO.SDK.Shared.BaseService.Rest
  parent: Sorted.PRO.SDK.Shared.BaseService
  name: Rest
  nameWithType: BaseService.Rest
  fullName: Sorted.PRO.SDK.Shared.BaseService.Rest
- uid: Sorted.PRO.SDK.Shared.BaseService.Log
  commentId: F:Sorted.PRO.SDK.Shared.BaseService.Log
  parent: Sorted.PRO.SDK.Shared.BaseService
  name: Log
  nameWithType: BaseService.Log
  fullName: Sorted.PRO.SDK.Shared.BaseService.Log
- uid: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,System.String)
  commentId: M:Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,System.String)
  parent: Sorted.PRO.SDK.Shared.BaseService
  isExternal: true
  name: GetRestConfig(String, IEndpoints, String)
  nameWithType: BaseService.GetRestConfig(String, IEndpoints, String)
  fullName: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String, Sorted.PRO.SDK.Shared.Interfaces.IEndpoints, System.String)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,System.String)
    name: GetRestConfig
    nameWithType: BaseService.GetRestConfig
    fullName: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
    name: IEndpoints
    nameWithType: IEndpoints
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig(System.String,Sorted.PRO.SDK.Shared.Interfaces.IEndpoints,System.String)
    name: GetRestConfig
    nameWithType: BaseService.GetRestConfig
    fullName: Sorted.PRO.SDK.Shared.BaseService.GetRestConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
    name: IEndpoints
    nameWithType: IEndpoints
    fullName: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{{TReturn}})
  commentId: M:Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
  parent: Sorted.PRO.SDK.Shared.BaseService
  definition: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
  name: CallAsyncMethod<TReturn>(Func<TReturn>)
  nameWithType: BaseService.CallAsyncMethod<TReturn>(Func<TReturn>)
  fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod<TReturn>(System.Func<TReturn>)
  nameWithType.vb: BaseService.CallAsyncMethod(Of TReturn)(Func(Of TReturn))
  fullName.vb: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(Of TReturn)(System.Func(Of TReturn))
  name.vb: CallAsyncMethod(Of TReturn)(Func(Of TReturn))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
    name: CallAsyncMethod<TReturn>
    nameWithType: BaseService.CallAsyncMethod<TReturn>
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod<TReturn>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReturn
    nameWithType: TReturn
    fullName: TReturn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
    name: CallAsyncMethod(Of TReturn)
    nameWithType: BaseService.CallAsyncMethod(Of TReturn)
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(Of TReturn)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReturn
    nameWithType: TReturn
    fullName: TReturn
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
  commentId: M:Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
  parent: Sorted.PRO.SDK.Shared.BaseService
  isExternal: true
  name: CallAsyncMethod(Action)
  nameWithType: BaseService.CallAsyncMethod(Action)
  fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
    name: CallAsyncMethod
    nameWithType: BaseService.CallAsyncMethod
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(System.Action)
    name: CallAsyncMethod
    nameWithType: BaseService.CallAsyncMethod
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sorted.PRO.SDK.Shared
  commentId: N:Sorted.PRO.SDK.Shared
  name: Sorted.PRO.SDK.Shared
  nameWithType: Sorted.PRO.SDK.Shared
  fullName: Sorted.PRO.SDK.Shared
- uid: Sorted.PRO.SDK.Interfaces.Labels
  commentId: N:Sorted.PRO.SDK.Interfaces.Labels
  name: Sorted.PRO.SDK.Interfaces.Labels
  nameWithType: Sorted.PRO.SDK.Interfaces.Labels
  fullName: Sorted.PRO.SDK.Interfaces.Labels
- uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
  commentId: M:Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
  isExternal: true
  name: CallAsyncMethod<TReturn>(Func<TReturn>)
  nameWithType: BaseService.CallAsyncMethod<TReturn>(Func<TReturn>)
  fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod<TReturn>(System.Func<TReturn>)
  nameWithType.vb: BaseService.CallAsyncMethod(Of TReturn)(Func(Of TReturn))
  fullName.vb: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(Of TReturn)(System.Func(Of TReturn))
  name.vb: CallAsyncMethod(Of TReturn)(Func(Of TReturn))
  spec.csharp:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
    name: CallAsyncMethod<TReturn>
    nameWithType: BaseService.CallAsyncMethod<TReturn>
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod<TReturn>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TReturn
    nameWithType: TReturn
    fullName: TReturn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod``1(System.Func{``0})
    name: CallAsyncMethod(Of TReturn)
    nameWithType: BaseService.CallAsyncMethod(Of TReturn)
    fullName: Sorted.PRO.SDK.Shared.BaseService.CallAsyncMethod(Of TReturn)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TReturn
    nameWithType: TReturn
    fullName: TReturn
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.IEndpoints
  commentId: T:Sorted.PRO.SDK.Interfaces.IEndpoints
  isExternal: true
- uid: Sorted.PRO.SDK.Interfaces.ILogger
  commentId: T:Sorted.PRO.SDK.Interfaces.ILogger
  isExternal: true
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  isExternal: true
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.#ctor*
  commentId: Overload:Sorted.PRO.SDK.Labels.LegacyLabelService.#ctor
  name: LegacyLabelService
  nameWithType: LegacyLabelService.LegacyLabelService
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.LegacyLabelService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
  parent: Sorted.PRO.SDK.Shared.Interfaces
  name: IEndpoints
  nameWithType: IEndpoints
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IEndpoints
- uid: Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
  parent: Sorted.PRO.SDK.Shared.Interfaces
  name: IHttpClientFactory
  nameWithType: IHttpClientFactory
  fullName: Sorted.PRO.SDK.Shared.Interfaces.IHttpClientFactory
- uid: Sorted.PRO.SDK.Shared.Interfaces.ILogger
  commentId: T:Sorted.PRO.SDK.Shared.Interfaces.ILogger
  parent: Sorted.PRO.SDK.Shared.Interfaces
  name: ILogger
  nameWithType: ILogger
  fullName: Sorted.PRO.SDK.Shared.Interfaces.ILogger
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Shared.Interfaces
  commentId: N:Sorted.PRO.SDK.Shared.Interfaces
  name: Sorted.PRO.SDK.Shared.Interfaces
  nameWithType: Sorted.PRO.SDK.Shared.Interfaces
  fullName: Sorted.PRO.SDK.Shared.Interfaces
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels*
  commentId: Overload:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels
  name: GetLabels
  nameWithType: LegacyLabelService.GetLabels
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabels
- uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String)
  commentId: M:Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String)
  parent: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
  isExternal: true
  name: GetLabels(String)
  nameWithType: ILegacyLabelService.GetLabels(String)
  fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String)
    name: GetLabels
    nameWithType: ILegacyLabelService.GetLabels
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String)
    name: GetLabels
    nameWithType: ILegacyLabelService.GetLabels
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse
  commentId: T:Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse
  parent: Sorted.PRO.SDK.DataTypes.Labels
  name: GetLabelsResponse
  nameWithType: GetLabelsResponse
  fullName: Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse
- uid: Sorted.PRO.SDK.DataTypes.Labels
  commentId: N:Sorted.PRO.SDK.DataTypes.Labels
  name: Sorted.PRO.SDK.DataTypes.Labels
  nameWithType: Sorted.PRO.SDK.DataTypes.Labels
  fullName: Sorted.PRO.SDK.DataTypes.Labels
- uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  commentId: M:Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  parent: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
  isExternal: true
  name: GetLabels(String, LegacyLabelFormat)
  nameWithType: ILegacyLabelService.GetLabels(String, LegacyLabelFormat)
  fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String, Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
    name: GetLabels
    nameWithType: ILegacyLabelService.GetLabels
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
    name: LegacyLabelFormat
    nameWithType: LegacyLabelFormat
    fullName: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
    name: GetLabels
    nameWithType: ILegacyLabelService.GetLabels
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
    name: LegacyLabelFormat
    nameWithType: LegacyLabelFormat
    fullName: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
  commentId: T:Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
  parent: Sorted.PRO.SDK.DataTypes.Labels
  name: LegacyLabelFormat
  nameWithType: LegacyLabelFormat
  fullName: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync*
  commentId: Overload:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync
  name: GetLabelsAsync
  nameWithType: LegacyLabelService.GetLabelsAsync
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelsAsync
- uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String)
  commentId: M:Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String)
  parent: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
  isExternal: true
  name: GetLabelsAsync(String)
  nameWithType: ILegacyLabelService.GetLabelsAsync(String)
  fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String)
    name: GetLabelsAsync
    nameWithType: ILegacyLabelService.GetLabelsAsync
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String)
    name: GetLabelsAsync
    nameWithType: ILegacyLabelService.GetLabelsAsync
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse}
  commentId: T:System.Threading.Tasks.Task{Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<GetLabelsResponse>
  nameWithType: Task<GetLabelsResponse>
  fullName: System.Threading.Tasks.Task<Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse>
  nameWithType.vb: Task(Of GetLabelsResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse)
  name.vb: Task(Of GetLabelsResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse
    name: GetLabelsResponse
    nameWithType: GetLabelsResponse
    fullName: Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse
    name: GetLabelsResponse
    nameWithType: GetLabelsResponse
    fullName: Sorted.PRO.SDK.DataTypes.Labels.GetLabelsResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  commentId: M:Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  parent: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
  isExternal: true
  name: GetLabelsAsync(String, LegacyLabelFormat)
  nameWithType: ILegacyLabelService.GetLabelsAsync(String, LegacyLabelFormat)
  fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String, Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
    name: GetLabelsAsync
    nameWithType: ILegacyLabelService.GetLabelsAsync
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
    name: LegacyLabelFormat
    nameWithType: LegacyLabelFormat
    fullName: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync(System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
    name: GetLabelsAsync
    nameWithType: ILegacyLabelService.GetLabelsAsync
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
    name: LegacyLabelFormat
    nameWithType: LegacyLabelFormat
    fullName: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel*
  commentId: Overload:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel
  name: GetLabel
  nameWithType: LegacyLabelService.GetLabel
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabel
- uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String,System.String)
  commentId: M:Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String,System.String)
  parent: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
  isExternal: true
  name: GetLabel(String, String)
  nameWithType: ILegacyLabelService.GetLabel(String, String)
  fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String, System.String)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String,System.String)
    name: GetLabel
    nameWithType: ILegacyLabelService.GetLabel
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String,System.String)
    name: GetLabel
    nameWithType: ILegacyLabelService.GetLabel
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  commentId: M:Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  parent: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
  isExternal: true
  name: GetLabel(String, String, LegacyLabelFormat)
  nameWithType: ILegacyLabelService.GetLabel(String, String, LegacyLabelFormat)
  fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String, System.String, Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
    name: GetLabel
    nameWithType: ILegacyLabelService.GetLabel
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
    name: LegacyLabelFormat
    nameWithType: LegacyLabelFormat
    fullName: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
    name: GetLabel
    nameWithType: ILegacyLabelService.GetLabel
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
    name: LegacyLabelFormat
    nameWithType: LegacyLabelFormat
    fullName: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync*
  commentId: Overload:Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync
  name: GetLabelAsync
  nameWithType: LegacyLabelService.GetLabelAsync
  fullName: Sorted.PRO.SDK.Labels.LegacyLabelService.GetLabelAsync
- uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String,System.String)
  commentId: M:Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String,System.String)
  parent: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
  isExternal: true
  name: GetLabelAsync(String, String)
  nameWithType: ILegacyLabelService.GetLabelAsync(String, String)
  fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String, System.String)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String,System.String)
    name: GetLabelAsync
    nameWithType: ILegacyLabelService.GetLabelAsync
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String,System.String)
    name: GetLabelAsync
    nameWithType: ILegacyLabelService.GetLabelAsync
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  commentId: M:Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  parent: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService
  isExternal: true
  name: GetLabelAsync(String, String, LegacyLabelFormat)
  nameWithType: ILegacyLabelService.GetLabelAsync(String, String, LegacyLabelFormat)
  fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String, System.String, Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
  spec.csharp:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
    name: GetLabelAsync
    nameWithType: ILegacyLabelService.GetLabelAsync
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
    name: LegacyLabelFormat
    nameWithType: LegacyLabelFormat
    fullName: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync(System.String,System.String,Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat)
    name: GetLabelAsync
    nameWithType: ILegacyLabelService.GetLabelAsync
    fullName: Sorted.PRO.SDK.Interfaces.Labels.ILegacyLabelService.GetLabelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
    name: LegacyLabelFormat
    nameWithType: LegacyLabelFormat
    fullName: Sorted.PRO.SDK.DataTypes.Labels.LegacyLabelFormat
  - name: )
    nameWithType: )
    fullName: )
